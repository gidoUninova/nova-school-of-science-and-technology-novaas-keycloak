[
    {
        "id": "eed7db33cbb15160",
        "type": "tab",
        "label": "AAS - Interaction Manager",
        "disabled": false,
        "info": ""
    },
    {
        "id": "292bbc7d396b4fee",
        "type": "tab",
        "label": "AAS - Auth/Auth",
        "disabled": false,
        "info": ""
    },
    {
        "id": "75985a5477ba24aa",
        "type": "tab",
        "label": "AAS - Component Manager",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1f8fca6e95b1a2a9",
        "type": "tab",
        "label": "AAS - Environment",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9d0a4a1a731ec486",
        "type": "tab",
        "label": "AAS - SouthboundInterface",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2bb36f52570181cc",
        "type": "tab",
        "label": "AAS - NorthboundInterface",
        "disabled": false,
        "info": ""
    },
    {
        "id": "0230170315d4730f",
        "type": "tab",
        "label": "AAS - UserInterface",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1b34dd2392e70f28",
        "type": "tab",
        "label": "DPDM/OperationalData",
        "disabled": false,
        "info": ""
    },
    {
        "id": "56cb7422.e3d28c",
        "type": "subflow",
        "name": "APILogger",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 413.88330078125,
                "y": 302.8833312988281,
                "wires": []
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "b1c764f174c1fb3e",
        "type": "subflow",
        "name": "JSON_Paths",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "2b689b9ff58390f7"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "2b689b9ff58390f7",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "PathTo",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "41b3a1439ccec2c1",
        "type": "subflow",
        "name": "Property handler",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 260,
                "y": 520,
                "wires": [
                    {
                        "id": "95ca925e8f8cf880"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1880,
                "y": 500,
                "wires": [
                    {
                        "id": "1274c1fecaa655a8",
                        "port": 0
                    },
                    {
                        "id": "78d0225e0b3a8fe6",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1880,
                "y": 800,
                "wires": [
                    {
                        "id": "e62907e7bcbce663",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1880,
                "y": 860,
                "wires": [
                    {
                        "id": "f02316f50a016d5d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "PropertyName",
                "type": "str",
                "value": ""
            },
            {
                "name": "PropertyLink",
                "type": "str",
                "value": ""
            },
            {
                "name": "HistoryLength",
                "type": "num",
                "value": ""
            },
            {
                "name": "PropertyLinkEvt",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1740,
            "y": 700,
            "wires": [
                {
                    "id": "5f9633884f5e4cd4",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "5ed335e57e3a0a3e",
        "type": "subflow",
        "name": "History",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "407f394e39d1235e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "407f394e39d1235e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "historyArrayName",
                "type": "str",
                "value": ""
            },
            {
                "name": "PathTo",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "8a179401500994e6",
        "type": "group",
        "z": "eed7db33cbb15160",
        "name": "",
        "style": {
            "fill": "#ffbfbf",
            "label": true
        },
        "nodes": [
            "ae57f59228185653",
            "2e4b21c722cff926",
            "588b6309f3b63e0a",
            "5e47ba86d84c2fbf",
            "8b579e946e284d09",
            "ed86c127fdb0e6c2",
            "5a819a8542636e72"
        ],
        "x": 114,
        "y": 4639,
        "w": 1932,
        "h": 182
    },
    {
        "id": "209a75bab732c2fc",
        "type": "group",
        "z": "0230170315d4730f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "395743e404967363",
            "3216303cabdc5402",
            "2632c4072f52b2b8",
            "a46fa8ea26c6d884",
            "e489aede3c2517ec",
            "69b81d10e7bfd289",
            "63913fd8eb922ce3",
            "fd187cb5917606a1",
            "994303464edfb348",
            "a63f52618625d01a",
            "4007cf86aff4f397",
            "c162db0ac1a9f30a",
            "26d263dba51c71e1",
            "7afd60bfc1b1c821",
            "ccdafa5aad62132d",
            "b4d8f47c83944329",
            "b4a3c4980794cdb3",
            "aad3d0b9a90e0e5b",
            "7fa1c90043a158cd",
            "2c1ecc0bb1148e64",
            "8492f60a755e23f4",
            "07f3a23cd9ad2437",
            "12c3b34b4307095b",
            "02ade024b47a8949",
            "2bc790cacadc4980",
            "92f5ed938fd7e576",
            "24779a87b0454dc5",
            "155a0e01a6e68678",
            "e1362f0dcd397308",
            "5d695c8c157c17c0",
            "bfc1147a1bee4e7e",
            "283e9395eff5f3ed",
            "21fc8b2db5bb7fbe",
            "c5f9ebbe7d113225",
            "3e7c10d1b62122f6",
            "7d25bcf37c802ddc",
            "436caeda558f32dd",
            "a27f009bf8ab1145",
            "b684ad0aa87cfb33",
            "80b22f67e2c6a19e",
            "372f5c2cdbf74b56",
            "cf3d9a0d07747286",
            "4c2999f8bc60f2ae",
            "58daedc7d8b0da49",
            "dbc2fc614c6fa3c5"
        ],
        "x": 94,
        "y": 2919
    },
    {
        "id": "b3c7716f3c5ea656",
        "type": "group",
        "z": "0230170315d4730f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d18fbdced84929cc",
            "3fa587badee35974",
            "c672ab55b8db74ae"
        ],
        "x": 94,
        "y": 2179
    },
    {
        "id": "606b287e669294f4",
        "type": "group",
        "z": "0230170315d4730f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4a572085c9c511dc",
            "5bcafd4c8ba31c9b",
            "865065fb5269b9da",
            "62b8b84973fbeca9",
            "a3867140af6afc02",
            "1971fadea59f0442",
            "e501b3750d4e2f42",
            "b79d50cf2c6228a7",
            "3ae9939893c199d8",
            "a103cf452912c5fb",
            "c2a7a61d08f8866d",
            "57bbabc1b0611adf",
            "87a8e64a3b9dc58d",
            "47aad47decd2aa0b",
            "3cf0c4551aae3c23",
            "8814fbd025713ba9",
            "da875153be997615",
            "eda7af0da4a932d8",
            "1ad6f9307625de6d",
            "063a77116d3802ea",
            "6bac237bbe74ce9a",
            "b371980e536eb0d9"
        ],
        "x": 2504,
        "y": 2759
    },
    {
        "id": "8b7195dfeff10c3b",
        "type": "group",
        "z": "eed7db33cbb15160",
        "name": "",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "a823978f51e32fe6",
            "702ec0bd53f050f8",
            "53431b416dd8fc9c",
            "0ed89656cc016ba9",
            "71a7ae65f6979eac",
            "fc633424bf7183f1",
            "ed6dcc349abf35ed",
            "66a8459d958308b7",
            "f069cd5b07108a87",
            "a45cdcceb5bc8ebe",
            "a8ba3b5a326aad5c",
            "49e81fcf7bc0b15b",
            "164e698d09bb754c",
            "1d752923b240f3dd",
            "4ce59568c3d24311",
            "b9438e85edb8c744"
        ],
        "x": 134,
        "y": 471,
        "w": 1692,
        "h": 262
    },
    {
        "id": "8a144fdf9bad252a",
        "type": "group",
        "z": "eed7db33cbb15160",
        "name": "Operation on Manifest",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "6def5843ae45d14a",
            "dd9ba45ed524bff4",
            "0791e343087c444a",
            "4237786127755a98",
            "bf45bcd33bfd484d",
            "73b864e11592dfb4",
            "327f8fdad6071ab6",
            "30cacf373c9314be",
            "f2578227d8ddbfd6",
            "3461fa42c5e8a4df",
            "11c27b25cd1a6363",
            "65943ebd94913f2e",
            "6e70f1cef0eec522",
            "0fb6ffc99bc3c418",
            "8bf330a6ad2d7a29",
            "ec72c69d60e6877d",
            "1b1324199b7abd73",
            "22db6e9dbc4f8215",
            "9a14f553e42ee8ee",
            "43acf4e847f8dfd5",
            "d85b76a3285e87d4",
            "f59ca19dd1265e4d",
            "b3a6cabb0576ae84",
            "467548cda6dcda49",
            "40feba0296ecae54",
            "15e9c7748b69eb57",
            "e0362a11adc49480",
            "6df32a901026e6af",
            "363e4381be198141",
            "d93aaa391159fb2d",
            "5a2399cd70a0f11e",
            "515c353fd05f162c",
            "7a84196aa1ec44f1",
            "b5b8fc603bb0701b",
            "9a593bb11c55a2f4",
            "a35fc29d77154150",
            "0e2b6fea44f4aede",
            "105abeca40f6f7eb",
            "e1d074309ee109c6",
            "73804c7985abe7b0",
            "cbef3784174217da",
            "1f0558daa8aaf256",
            "ee608b85f043d5c5",
            "b6319f0fda39cb79",
            "37ecb6415dae1ba4",
            "8679430bf18eb090",
            "71725ec83749dba4",
            "6b8c3f033ad19d1e",
            "c856f88f31e51f10",
            "62a42739a164544b",
            "b5a5409f2420d524",
            "ffdd0673a3946e03",
            "01b84d6b329489b3",
            "ce0d8e5109f97cad",
            "edb66a07acdc3737",
            "7a2ee1cbfe6b8098",
            "51cf4966f317d03b",
            "39a7385ec50d8b42",
            "47f05fd313f4ccb3",
            "c522f507ff4f23e1",
            "a92917c32b7180f6",
            "3b3f4fc93109166b",
            "f30f14410bcc970d"
        ],
        "x": 121,
        "y": 1459,
        "w": 2271,
        "h": 2408
    },
    {
        "id": "589602158480967a",
        "type": "group",
        "z": "0230170315d4730f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4eab4b3ff75820c3",
            "8c8705be4d3dc2aa",
            "4c11f6053b9c28b8",
            "315c67953304cd69",
            "4e851e2d213ae3ca",
            "2fc1f2cd994c0bfd",
            "2abc01a9c1b4fb12",
            "e85e5428c54d4dee",
            "b08de9195b494c16",
            "1924cc79493e89f4",
            "ab7df8718dc0c2d0",
            "e9551d07136d6cb2",
            "acde021a4af44ed5",
            "38cafbe82100acde",
            "5cea66178ba0eb05",
            "13d9ed9c777d2f95",
            "6ddf00718cfb4670",
            "153d05dcc647e3e9",
            "fe3ab20b2faa2127",
            "0d8c0804e85d232f",
            "c5dfb78d754ea381",
            "b97a9c0b053e3493",
            "fc9d10a0c0fd18c7",
            "aa704171214f5b6e",
            "a79fced785134dc4",
            "8691f5ddad4cdb94",
            "679a836e5d3fe2d0",
            "41ae967b31874b17",
            "d472b9ddbf59dae5",
            "378a78fb874dd41a",
            "05520d44741c510d",
            "26a994ae033ba4b5",
            "d2afd4df8de4249a",
            "1e248f73cf21d587",
            "adfd2bae1a683ff9",
            "0c8818c588788156",
            "7fabd8961af21415",
            "b71b0abe0c84fe22",
            "c43af6195c04dd63",
            "6a5847ade8f38435",
            "cbfe4edbe6e338b5",
            "1ffe490c1a96b685",
            "65018e33592ea9a2",
            "cdfe419ae4f2daf5",
            "16a56ea8e636930d",
            "daf407e065429a74",
            "376dc86131e0cb65",
            "ad97e70a777dc9b5",
            "94a81a74448b93af",
            "a07f5e53390d9519",
            "5b6c3d0d2747e38b",
            "25b6bff18045b93f",
            "831fbce5bb893554",
            "3af25fa94b644a9b",
            "b57a07f4b7ac6f89",
            "e4ed5870d7cd16d1",
            "c86aca686f0ecfcb",
            "98da5766d0fe7431",
            "4986cfc9c1eb310a",
            "1dc6eb5ec44d3086",
            "7d7d7496b94b7377",
            "0988a0a707da28d4",
            "58da265d50268b46",
            "c3017a8fc833ab38",
            "3963ad2256d49c31",
            "f17216d80586a932",
            "0f7dec7c30a06aca",
            "1a1fbafff327a83e",
            "1934f024455f5572",
            "f72ad0fd50ef67af"
        ],
        "x": 214,
        "y": 99
    },
    {
        "id": "0fac75980c58fbdb",
        "type": "group",
        "z": "eed7db33cbb15160",
        "name": "",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "c48b7dd6114cc6cc",
            "1c23a11624fe2585",
            "655d81f8ce3006f5",
            "3a1cecce2b2bfbe1",
            "92b3e5098669f70f",
            "c5981f869ab59492",
            "9139a46e838fad60",
            "60cc860236e60b72",
            "adf987f6a6f4b169",
            "b27a11e4b96f4722",
            "c79a800354877d9d",
            "d65968e9a7c86f67",
            "4c326e06e141d0fe",
            "440728fde54490a9",
            "104a9dd968244d0f",
            "45755ba482ef8b14"
        ],
        "x": 114,
        "y": 4399,
        "w": 2512,
        "h": 202
    },
    {
        "id": "34b84477a5f175c8",
        "type": "group",
        "z": "0230170315d4730f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4caf5e397b61236f",
            "f4884d63f5c8ef68",
            "e60c215d6f0ab6f1",
            "d39e759fb8c198fd",
            "77c08b62f1c5fc0d",
            "5ef6e3bfdd014a27",
            "471db6935111f3d3",
            "3144a6e01f9af2c2",
            "ee663eb6c5cd0822",
            "d32bfcb5f06e19f5",
            "7f412d6640237312",
            "fed3c280faa44045",
            "9ad2c9130d6f50a9",
            "51a4e2d13a898bfe",
            "f79c44ba40f98d06",
            "bb68c5775852e83b",
            "3a7820400b0ef71b",
            "67d5e889bbf2d781",
            "fcdf96d757aaa10f",
            "230cd49d83ebac0c",
            "349487d2c0a06cd7",
            "1747a5251df09ee6",
            "012b6cbb87538c50",
            "c4209fe6f75f1848",
            "4ff907509c925c46",
            "2e94b6341b740dda",
            "3d1ac4f99574f59a"
        ],
        "x": 104,
        "y": 3499
    },
    {
        "id": "1b283c783c77a415",
        "type": "group",
        "z": "75985a5477ba24aa",
        "name": "To North",
        "style": {
            "fill": "#bfc7d7",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "8ac3c81899b445fa",
            "5c93986fd9c7d8c0",
            "8c3f42ffe492f7e3",
            "48a2a663e58ed400",
            "b93ce41f45d38e7c",
            "fe530b549528d690",
            "e01f122e60adcb09",
            "4de223f59a8a78bb",
            "11f085d3ac9482bc",
            "8863187f65553f45",
            "324a3bc1307cdce1"
        ],
        "x": 194,
        "y": 4242
    },
    {
        "id": "abdf379e4293a040",
        "type": "group",
        "z": "75985a5477ba24aa",
        "name": "To/From South",
        "style": {
            "fill": "#bfdbef",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "3ee230f96969f778",
            "1489b45c1ef528c2",
            "049a96a511517cab",
            "ee990a7f5736a5fe",
            "a41694bb1a9053b3",
            "ab392cc9de431c12",
            "92efeed3ca645aa5",
            "3522f329ee671e38",
            "482403047fcf00cd"
        ],
        "x": 194,
        "y": 3539
    },
    {
        "id": "d628f78d05bad169",
        "type": "group",
        "z": "0230170315d4730f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bc59d23dd19344de",
            "4295e933802d2304",
            "3396c923f558a90d",
            "8ead88f230d497e3",
            "426b73a6308cbf4d",
            "1215156120a47a77",
            "0f63ca3d7484e2de",
            "9ef6abd9ac8bfadd",
            "52e8f6f261518acb",
            "d7e8125eebf8747b",
            "846a6d5c762b07fa",
            "60ba5eb873a9153c",
            "f60a7527d19658ee",
            "a09dea98fa79d38c",
            "cceac5885732d9f8",
            "81b4e003873a279c",
            "b04e9ff349453b2e",
            "62d2430d465ff130",
            "b7913ecd599b9d5c",
            "22e7ac62ce4bb75d",
            "e124e9ab5b082a92",
            "65bdd8af31739d18",
            "9f3fef0da6e620f0"
        ],
        "x": 1814,
        "y": 1359
    },
    {
        "id": "3072da72b5bc07c8",
        "type": "group",
        "z": "eed7db33cbb15160",
        "name": "",
        "style": {
            "label": true,
            "color": "#777777",
            "fill": "#e3f3d3"
        },
        "nodes": [
            "a8b405fef50cd4ba",
            "5f1fd18f73d944a9",
            "b1c3a3161199728e",
            "8366887852b40b51",
            "98a5d8034f0579f9",
            "8912034199b484e6",
            "b581b7869b976cfa",
            "0d64a180e4338849",
            "be5cf3e322bd5103",
            "e79024482467d339",
            "f90841d2f742e8ff",
            "56ffa6ce9db83ac0",
            "9624cd73e024dcc7",
            "5023d15cce2db1a3",
            "c6e91307b9a932f2"
        ],
        "x": 134,
        "y": 3879,
        "w": 2372,
        "h": 282
    },
    {
        "id": "ddbb58547c33487a",
        "type": "group",
        "z": "eed7db33cbb15160",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a7385a594819f780",
            "b7bd5e3a48d17682",
            "d2777a338729e163",
            "691ee5978214d6c6",
            "4e250d0aa934e8c5",
            "03d15a94339afe3d",
            "f573855b3884b433"
        ],
        "x": 134,
        "y": 139,
        "w": 1952,
        "h": 202
    },
    {
        "id": "aa58e5d8d810c216",
        "type": "group",
        "z": "1b34dd2392e70f28",
        "name": "Set-up",
        "style": {
            "fill": "#e3f3d3",
            "fill-opacity": "0.4",
            "label": true
        },
        "nodes": [
            "9ba130dab2c35f4a",
            "b66a7cd618523697",
            "4807bb24be8fdd35",
            "1022525b20ebc80c",
            "6bc8692589698e4e"
        ],
        "x": 134,
        "y": 59
    },
    {
        "id": "f70042849219912e",
        "type": "group",
        "z": "1b34dd2392e70f28",
        "name": "Simulator",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "0495c54e4a42e88d",
            "9f1b2c1fddb56b21",
            "a9b44075eac2654a",
            "2156e858c357a84a",
            "637d5a699d0d8537",
            "53a3dba8b5b31034",
            "de876458e5ee4757",
            "a14689fbcbf5d1ca",
            "039aa1c149845af7",
            "7fc3b5edf551e358",
            "e90b1501abaa5754",
            "a6f5da1d3029aec2",
            "eeec8892730ecb24",
            "c2c3bbb9a9474abd",
            "c8654494cab22081",
            "f69a90c1551b2070",
            "9bf2937120ef67bd",
            "a6c403091b443b0c",
            "eeb80fe9cff6a359",
            "9abe0fd670c76497",
            "de89b1cca328c659",
            "5180a7d4f1bf4fa4",
            "cdbd60c259d8d0b6",
            "dc2a65f84610e41a",
            "6107a5a6c62f1d7b",
            "9730e3221d41e001",
            "a875e93ae204d0c1",
            "368a147680be5838",
            "b746d7bc440b58bd",
            "ff5af7a243cbdf73"
        ],
        "x": 14,
        "y": 2299
    },
    {
        "id": "1f0558daa8aaf256",
        "type": "group",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "af71f3cf43be37db",
            "3698bfed8080ece4",
            "7a9755ad1387a23b",
            "464c49f42d9c280f",
            "67851403f9820d16",
            "b0ca4496d6dcf1a8",
            "942ceeb043f4acd4",
            "57b7f5b5714b4dfe",
            "dfb22023b0d99566",
            "8e39befdad4eef79",
            "ba11767adf90354d",
            "ae51a91b4518f134",
            "969e8410e6e17d20",
            "5a8f7d4734233d71",
            "00f5e5a8bd07d7ae",
            "f291d1d876934273",
            "b3ebf76f1617ee17",
            "0dcf6214e8fb0913",
            "cd575411fc245db9",
            "146a26bef860e0d8",
            "7de8f3015f5d060a",
            "c13888b5060bf353",
            "922a8db95c75ab92",
            "bed8af094a9dc23b",
            "522959734a7bbb25",
            "2a49545b9d945e4b",
            "6b7a66be32f1d8f4",
            "58cd421fe276f65b",
            "5a27d07093744e70",
            "d23fb60e068cbf77",
            "03349ee98966bb72",
            "b86733db2b8aa6e2",
            "8093cd4e782ac480",
            "0e4a751afd585eb9",
            "5f1d07a4ca9b50da",
            "d275bc61cd964b4f",
            "29412a95618112c7",
            "16995814da7a73fe",
            "cf763f42bdadabe5",
            "3adeea0795429784",
            "8e79a311772fe5f6",
            "7c0da10e869bc186",
            "accd69359e36e50f",
            "4e014cc58e8cab8a",
            "c0cb061af5ff66d5",
            "fe18a52eca040bc3",
            "782f6261a8144bc2",
            "680480a6ae064033",
            "59303f1540a7f1df",
            "7719205727882270",
            "06d5b16016d1ae70",
            "81803122abe17382",
            "4d396be250d1a01f",
            "2d2edeb30af428f7",
            "fd761a7fbc1a9c61",
            "ae2226d4fd5b338e",
            "fe42a81042c338ec",
            "e6c85c76e10dc1e6",
            "9229d4fd7b1e0436",
            "b952ac79c54eb275",
            "dbe3db1b6283e40b",
            "8045bc808b6bd428",
            "28e221bfd65d2406",
            "8072f036af9c3953",
            "db352743e56fc61c",
            "53cb1c1bed12a2e3",
            "d5284e9b625c20c7"
        ],
        "x": 147,
        "y": 2376,
        "w": 2219,
        "h": 845
    },
    {
        "id": "ee608b85f043d5c5",
        "type": "group",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "1d87f42cb965fbdd",
            "2a1e38046e7cc54b",
            "56e9d47cefd09c97",
            "1e4ffb9f7b08f6f2",
            "e5d8d32623181651",
            "b316214731ecedf1",
            "f85cb92ff6e72ee8",
            "5d0f3a52dd1082c7",
            "ac6739dbe1b2333f",
            "4f32c0d647dd512b",
            "69fd7487a0bedd96",
            "59e805fe43604c70",
            "bf8cd90c953031f4",
            "6f081828f0ec6778",
            "e1f1bd16b5b68a20",
            "ba40305cbcbba997",
            "d52498367e50d2c7",
            "8f06dd106510a025",
            "d6b4f982e416ed26",
            "ab67218db0dc24cd",
            "0c2bf1ecb10e2d09",
            "609addf784af00b7",
            "b33940780f91b1cf",
            "ad39dbfe77e8ecc2",
            "a8230932871b5ef4",
            "aac93ae93e513f15",
            "db3f917a5796483f",
            "c5d45082c66056b1",
            "45e1540078269aca",
            "c083380b0fcb9146",
            "35b1c4ca2eb3af48",
            "6710acc8e3d42527",
            "fa4ba9500387779d",
            "48929bf538ec6070",
            "b7f591bcad4a4da3",
            "fd160dbffadcfbf5",
            "a46499a0c1dd027d",
            "551329bf592fad61",
            "f01fd6871209256c",
            "aad349cac057622e",
            "530fb18b4a8a7653",
            "574ba7162260f0f8",
            "4d9e9559cddc1656",
            "fcd9fdc63e697efb",
            "6a86c248c9dfff41",
            "9d8068bde52995a8",
            "0e105558171a4d95"
        ],
        "x": 154,
        "y": 3239,
        "w": 2212,
        "h": 602
    },
    {
        "id": "054e56708ace311f",
        "type": "junction",
        "z": "292bbc7d396b4fee",
        "x": 1180,
        "y": 300,
        "wires": [
            [
                "bd68b988bc67a857"
            ]
        ]
    },
    {
        "id": "bd68b988bc67a857",
        "type": "junction",
        "z": "292bbc7d396b4fee",
        "x": 1520,
        "y": 380,
        "wires": [
            [
                "4f3259efc003fe47"
            ]
        ]
    },
    {
        "id": "419327fec910c194",
        "type": "junction",
        "z": "75985a5477ba24aa",
        "x": 2500,
        "y": 660,
        "wires": [
            [
                "168dca91931fa2d1"
            ]
        ]
    },
    {
        "id": "bf8d1775bedc9126",
        "type": "junction",
        "z": "75985a5477ba24aa",
        "x": 1520,
        "y": 1280,
        "wires": [
            [
                "0cf42e9cc5365c9d"
            ]
        ]
    },
    {
        "id": "0cf42e9cc5365c9d",
        "type": "junction",
        "z": "75985a5477ba24aa",
        "x": 1580,
        "y": 1340,
        "wires": [
            [
                "718506d0a62e49a5"
            ]
        ]
    },
    {
        "id": "4f66f53de68a468a",
        "type": "junction",
        "z": "75985a5477ba24aa",
        "x": 1560,
        "y": 1540,
        "wires": [
            [
                "32e4c48636bc81e8"
            ]
        ]
    },
    {
        "id": "32e4c48636bc81e8",
        "type": "junction",
        "z": "75985a5477ba24aa",
        "x": 1620,
        "y": 1580,
        "wires": [
            [
                "64f4b5e338cef46a"
            ]
        ]
    },
    {
        "id": "d2fa44933ad7f7bc",
        "type": "junction",
        "z": "75985a5477ba24aa",
        "x": 1520,
        "y": 1800,
        "wires": [
            [
                "273b7e8259322a05"
            ]
        ]
    },
    {
        "id": "273b7e8259322a05",
        "type": "junction",
        "z": "75985a5477ba24aa",
        "x": 1620,
        "y": 1840,
        "wires": [
            [
                "97a246f7b044cc91"
            ]
        ]
    },
    {
        "id": "de00f046.a69e6",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "AASGreen",
                "default": "#4B7930",
                "baseColor": "#14524e",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#14524e",
                    "value": "#14524e",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#14524e",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#f0f0f0",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#14524e",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "NOVAsset Administration Shell",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 5,
                "gy": 5,
                "cx": 5,
                "cy": 5,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "5b380ea4.54d28",
        "type": "ui_group",
        "name": "Commands",
        "tab": "1e533544.f40ceb",
        "order": 1,
        "disp": false,
        "width": "3",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1e533544.f40ceb",
        "type": "ui_tab",
        "name": "Login",
        "icon": "lock",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7511afda.577af",
        "type": "ui_tab",
        "name": "Overview",
        "icon": "home",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "76f4488e.b66968",
        "type": "ui_group",
        "name": "Health",
        "tab": "7511afda.577af",
        "order": 4,
        "disp": true,
        "width": "5",
        "collapse": false
    },
    {
        "id": "cb7ccff3.2c214",
        "type": "ui_tab",
        "name": "Logs",
        "icon": "view_list",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "28ba0356.ef188c",
        "type": "ui_group",
        "name": "Commands",
        "tab": "e61c2c82.e7e9f",
        "order": 1,
        "disp": true,
        "width": "3",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8fc17f5a.38023",
        "type": "ui_group",
        "name": "Headers",
        "tab": "e61c2c82.e7e9f",
        "order": 2,
        "disp": true,
        "width": "15",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e61c2c82.e7e9f",
        "type": "ui_tab",
        "name": "Environment",
        "icon": "format_list_bulleted",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c68d835e.db3b2",
        "type": "ui_group",
        "name": "Body",
        "tab": "e61c2c82.e7e9f",
        "order": 3,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c56f01cc.380dd",
        "type": "ui_group",
        "name": "AAS Concept Descriptions",
        "tab": "31cac02.f941f4",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "31cac02.f941f4",
        "type": "ui_tab",
        "name": "Concept Descriptions",
        "icon": "more",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3c18c574.bda17a",
        "type": "ui_group",
        "name": "Login",
        "tab": "1e533544.f40ceb",
        "order": 3,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "b9ac7006.de90a",
        "type": "ui_group",
        "name": "Counters",
        "tab": "7511afda.577af",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "7a30c02.5d2894",
        "type": "ui_group",
        "name": "Information",
        "tab": "7511afda.577af",
        "order": 2,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "b9aed87e.bdd0c8",
        "type": "ui_group",
        "name": "Commands",
        "tab": "cb7ccff3.2c214",
        "order": 3,
        "disp": true,
        "width": "3",
        "collapse": false
    },
    {
        "id": "63d120af.ce7f5",
        "type": "ui_group",
        "name": "Logs",
        "tab": "cb7ccff3.2c214",
        "order": 1,
        "disp": true,
        "width": "34",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d1259efc.6308f8",
        "type": "ui_tab",
        "name": "Subscriptions",
        "icon": "link",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f57f5dd7.e298c",
        "type": "ui_group",
        "name": "Actual Subscribed Elements",
        "tab": "d1259efc.6308f8",
        "order": 1,
        "disp": true,
        "width": "34",
        "collapse": false,
        "className": ""
    },
    {
        "id": "777bc51a.c31cac",
        "type": "ui_tab",
        "name": "Statistics",
        "icon": "equalizer",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d8770726.1a10d",
        "type": "ui_group",
        "name": "Routed Message Stats",
        "tab": "777bc51a.c31cac",
        "order": 3,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "a1ac21b4.e86f9",
        "type": "ui_tab",
        "name": "Dash",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "175d54ea.788a73",
        "type": "ui_group",
        "name": "Dashboard SBI",
        "tab": "a1ac21b4.e86f9",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "77c7337d.b33f54",
        "type": "ui_group",
        "name": "Asset",
        "tab": "7511afda.577af",
        "order": 3,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "16ffbcf4.6cfa43",
        "type": "ui_group",
        "name": "Account Logs",
        "tab": "cb7ccff3.2c214",
        "order": 2,
        "disp": true,
        "width": "34",
        "collapse": false,
        "className": ""
    },
    {
        "id": "952e8c04.ed2bb8",
        "type": "ui_group",
        "name": "Retrieved Messages",
        "tab": "777bc51a.c31cac",
        "order": 2,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "b6f3261d.3a0a2",
        "type": "ui_group",
        "name": "Commands",
        "tab": "777bc51a.c31cac",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "f9f1bdc8.0e017",
        "type": "ui_group",
        "name": "Health",
        "tab": "e61c2c82.e7e9f",
        "order": 4,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4534a6d5.677c78",
        "type": "ui_group",
        "name": "Health",
        "tab": "31cac02.f941f4",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4944a8dc.cb1658",
        "type": "ui_group",
        "name": "Health",
        "tab": "d1259efc.6308f8",
        "order": 3,
        "disp": true,
        "width": "5",
        "collapse": false
    },
    {
        "id": "a9cc6929.51b4",
        "type": "ui_group",
        "name": "Health",
        "tab": "cb7ccff3.2c214",
        "order": 4,
        "disp": true,
        "width": "5",
        "collapse": false
    },
    {
        "id": "1e8a2f3d.54af89",
        "type": "ui_group",
        "name": "Health",
        "tab": "777bc51a.c31cac",
        "order": 4,
        "disp": true,
        "width": "5",
        "collapse": false
    },
    {
        "id": "c8188165.80a358",
        "type": "ui_group",
        "name": "Health",
        "tab": "a1ac21b4.e86f9",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d2edf304.fdfa2",
        "type": "sub-link-config",
        "name": "southbound",
        "clone": false
    },
    {
        "id": "7dcd4079.256cf",
        "type": "ui_group",
        "name": "form",
        "tab": "56715436.c2591c",
        "order": 1,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "6a4d510d.5de65",
        "type": "ui_group",
        "name": "ReportDownload",
        "tab": "56715436.c2591c",
        "order": 2,
        "disp": false,
        "width": "9",
        "collapse": false
    },
    {
        "id": "56715436.c2591c",
        "type": "ui_tab",
        "name": "Reporting",
        "icon": "assignment",
        "order": 9,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "72ae2011.f3d7b",
        "type": "sub-link-config",
        "name": "driver",
        "clone": false
    },
    {
        "id": "e70d9188.7d95e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "$(BROKER_SERVICE_HOST)",
        "port": "$(BROKER_SERVICE_PORT)",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": 4,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "0908267e4fcb25d5",
        "type": "sqlitedb",
        "db": "/app/.node-red/db/inNOVAASdb.db",
        "mode": "RW"
    },
    {
        "id": "50760f2b4eafd99b",
        "type": "sqlitedb",
        "db": "/app/.node-red/db/inNOVAASdb.db",
        "mode": "RW"
    },
    {
        "id": "ddbb1a2bc689f073",
        "type": "ui_tab",
        "name": "Documents",
        "icon": "folder",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2cd7369eb2bb2708",
        "type": "ui_group",
        "name": "Documents",
        "tab": "ddbb1a2bc689f073",
        "order": 1,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "119a3caed3208dbd",
        "type": "ui_group",
        "name": "Commands",
        "tab": "ddbb1a2bc689f073",
        "order": 2,
        "disp": true,
        "width": "3",
        "collapse": false,
        "className": ""
    },
    {
        "id": "61af32fd3ebfc561",
        "type": "swagger-doc",
        "summary": "Test the status of the AAS",
        "description": "",
        "tags": "",
        "consumes": "",
        "produces": "test/html",
        "parameters": [],
        "responses": {
            "200": {
                "description": "OK"
            },
            "503": {
                "description": "Asset Administration Shell not configured"
            }
        },
        "deprecated": false
    },
    {
        "id": "4dc9adf5e46a5489",
        "type": "swagger-doc",
        "summary": "Retrieve the current Manifest document",
        "description": "",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "Manifest aml document",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "62805747f7f75fde",
        "type": "swagger-doc",
        "summary": "Retrieve the current Manifest document",
        "description": "",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "Manifest aml document",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "97d73e5306233f09",
        "type": "swagger-doc",
        "summary": "Retrieve the AAS identificators (header part of the Manifest)",
        "description": "AAS headers",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "aml Manifest headers response",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "f63412d5902e8a10",
        "type": "swagger-doc",
        "summary": "Retrieve the AAS identificators (header part of the Manifest)",
        "description": "AAS headers",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "aml Manifest headers response",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "43819692c4261737",
        "type": "swagger-doc",
        "summary": "Retrieve the list of the AAS submodels (Body part of the Manifest)",
        "description": "AAS submodels",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "List the submodels in the Manifest"
            }
        },
        "deprecated": false
    },
    {
        "id": "7df4735395b8c934",
        "type": "swagger-doc",
        "summary": "Retrieve the list of the AAS submodels (Body part of the Manifest)",
        "description": "AAS submodels",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "List the submodels in the Manifest"
            }
        },
        "deprecated": false
    },
    {
        "id": "3c4e07ba0dc97610",
        "type": "swagger-doc",
        "summary": "Retrieve the AAS submodel by Id",
        "description": "AAS submodel by Id",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [
            {
                "name": "id",
                "in": "path",
                "description": "submodel identificator",
                "required": true,
                "type": "string"
            }
        ],
        "responses": {
            "200": {
                "description": "xml specific submodel"
            },
            "404": {
                "description": "Submodel with id: {id} not found"
            }
        },
        "deprecated": false
    },
    {
        "id": "ee329406e3eb7f0e",
        "type": "Kafka Broker",
        "name": "",
        "hosts": [
            {
                "host": "bd4nrg-htap.vm.fedcloud.eu",
                "port": 9093
            }
        ],
        "hostsEnvVar": "",
        "connectTimeout": "10000",
        "requestTimeout": "30000",
        "autoConnect": "true",
        "idleConnection": "5",
        "reconnectOnIdle": "true",
        "maxAsyncRequests": "10",
        "checkInterval": "10",
        "selfSign": true,
        "usetls": false,
        "useCredentials": false
    },
    {
        "id": "d56e5f93.f422c",
        "type": "logger",
        "z": "56cb7422.e3d28c",
        "name": "",
        "filename": "logs.log",
        "maxsize": 1,
        "maxfiles": 10,
        "complete": "true",
        "console": false,
        "file": true,
        "debug": false,
        "zip": false,
        "logtype": "info",
        "x": 1043.6332397460938,
        "y": 298.88336181640625,
        "wires": []
    },
    {
        "id": "dca65b7f.b00ba8",
        "type": "unsafe-function",
        "z": "56cb7422.e3d28c",
        "name": "createLogEntry",
        "func": "//var element = JSON.stringify(msg.payload);\nvar msg1 = {};\nvar outmsg = {};\n//msg1.payload = element;\nmsg1.requestedURL = msg.req.url;\nmsg1.headers = {};\nmsg1.headers[\"user-agent\"] = msg.req.headers[\"user-agent\"];\nmsg1.headers[\"authorization\"] = msg.req.headers[\"authorization\"];\nmsg1.headers[\"content-type\"] = msg.req.headers[\"content-type\"];\nmsg1.headers[\"host\"] = msg.req.headers[\"host\"];\nmsg1.startTime = msg.startTime;\nif(typeof msg.req.client._peername !== 'undefined'){\n    msg1.client = msg.req.client._peername.address;\n} else{\n    msg1.client = \"internal\";\n} \n\nmsg1.endTime = Date.now();\noutmsg.payload = JSON.stringify(msg1);\nreturn outmsg; // msg1;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 573.88330078125,
        "y": 302.8833312988281,
        "wires": [
            [
                "8713151e.2f1728"
            ]
        ]
    },
    {
        "id": "8713151e.2f1728",
        "type": "unsafe-function",
        "z": "56cb7422.e3d28c",
        "name": "checkLogging",
        "func": "//var element = JSON.stringify(msg.payload);\nlet node_aas_log = process.env.NODE_AAS_RUNNNING_UNDER_PM2;\nif(typeof node_aas_log == \"undefined\"){\n    return [msg, null];\n} else {\n    return [null, msg];\n}\n\n",
        "outputs": 2,
        "noerr": 0,
        "x": 808.6041870117188,
        "y": 304.85418701171875,
        "wires": [
            [
                "d56e5f93.f422c"
            ],
            [
                "6c23162c.b90798",
                "fd22ab4d.326ef8"
            ]
        ]
    },
    {
        "id": "fd22ab4d.326ef8",
        "type": "logger",
        "z": "56cb7422.e3d28c",
        "name": "",
        "filename": "logs.log",
        "maxsize": 1,
        "maxfiles": 10,
        "complete": "true",
        "console": true,
        "file": false,
        "debug": false,
        "zip": false,
        "logtype": "info",
        "x": 1044.7666015625,
        "y": 351.76666259765625,
        "wires": []
    },
    {
        "id": "6c23162c.b90798",
        "type": "debug",
        "z": "56cb7422.e3d28c",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1075.5,
        "y": 398.5,
        "wires": []
    },
    {
        "id": "2b689b9ff58390f7",
        "type": "function",
        "z": "b1c764f174c1fb3e",
        "name": "",
        "func": "var extract = function (point, keyIndex, keysArray) {\n    let element = \"\";\n    if(keyIndex < keysArray.length){\n        element = keysArray[keyIndex];\n        if (typeof point[element] !== 'object') {\n            let simpleValue = {};\n            simpleValue[element] = point[element];\n            return simpleValue\n        } else {\n            keyIndex = keyIndex + 1;\n            return extract(point[element], keyIndex, keysArray);\n            \n        }\n    }\n    return point;\n    \n}\n\nlet keys = env.get(\"PathTo\");\nlet keysArray = keys.split(\".\");\nlet point = msg.payload;\nmsg.payload.data = extract(point.data, 0, keysArray);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "127270a25c3d8888",
        "type": "switch",
        "z": "41b3a1439ccec2c1",
        "name": "topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "observe",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "unobserve",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "init",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 890,
        "y": 500,
        "wires": [
            [
                "1274c1fecaa655a8",
                "2cd93262147d3143"
            ],
            [
                "0f6603d9f95134b3",
                "78d0225e0b3a8fe6"
            ],
            [
                "0f6603d9f95134b3"
            ]
        ]
    },
    {
        "id": "1274c1fecaa655a8",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "PrepareOutput",
        "func": "var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n\n// Create an Observation Event Object ------------------------------------\nvar observation = {};\nobservation.id = uuid;\n//observation.source = msg.source;\nobservation.direction = \"Output\";\n\nvar observableReference = \"\";\n\n//var observedKeys = msg.payload.observed.keys;\n/*for(var key in observedKeys){\n    if(parseInt(key) < 2){\n        observableReference = observableReference + observedKeys[key].value + \"/\";\n    } else if (parseInt(key) >= 2 && parseInt(key) < (observedKeys.length - 1)) {\n        observableReference = observableReference + observedKeys[key].value + \".\";\n    } else {\n        observableReference = observableReference + observedKeys[key].value;\n    }\n}*/\n\nobservableReference = env.get(\"PropertyLink\");\n\nobservation.observableReference = observableReference;\n//observation.source = msg.req.params.aasid + \"/\" + msg.req.params.submodelId + \"/\" + msg.req.params.id;\nobservation.source = env.get(\"PropertyLinkEvt\");\n\nif(context.flow.get(\"timestamp\")){\n    observation.timestamp = context.flow.get(\"timestamp\");\n} else{\n    observation.timestamp = new Date().getTime();\n}\nobservation.payload = \"Data Flow Created\";\n//observation.href = msg.href;\n// END Create an Observation Object --------------------------------\n//outputMsgs.push(observation);\ncontext.flow.set('ObsObj', observation);\n//msg.payload = outputMsgs;\n//msg.payload = JSON.stringify(observation);\n//msg.test = JSON.parse(msg.payload);\nmsg.payload = observation;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1175,
        "y": 500,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "2cd93262147d3143",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "",
        "func": "msg.topic = \"control\";\nmsg.payload = \"open\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1175,
        "y": 540,
        "wires": [
            [
                "f894203f2fd3ac35",
                "5f9633884f5e4cd4"
            ]
        ],
        "l": false
    },
    {
        "id": "f894203f2fd3ac35",
        "type": "gate",
        "z": "41b3a1439ccec2c1",
        "name": "",
        "controlTopic": "control",
        "defaultState": "closed",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "persist": false,
        "x": 1490,
        "y": 800,
        "wires": [
            [
                "e62907e7bcbce663"
            ]
        ]
    },
    {
        "id": "e62907e7bcbce663",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "",
        "func": "var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\nvar outMsg = {};\nvar ObsObj = context.flow.get('ObsObj');\nObsObj.id = uuid;\nvar timestamp = context.flow.get(\"$parent.timestamp\");\nif (typeof timestamp == 'undefined') {\n    timestamp = new Date().getTime();\n}\nelse {\n    ObsObj.timestamp = timestamp;\n}\nObsObj.payload = context.flow.get(\"variable\");\noutMsg.payload = ObsObj;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1635,
        "y": 800,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "0f6603d9f95134b3",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "",
        "func": "msg.topic = \"control\";\nmsg.payload = \"close\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1175,
        "y": 660,
        "wires": [
            [
                "f894203f2fd3ac35",
                "5f9633884f5e4cd4"
            ]
        ],
        "l": false
    },
    {
        "id": "78d0225e0b3a8fe6",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "PrepareOutput",
        "func": "var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n\n// Create an Observation Event Object ------------------------------------\nvar observation = {};\nobservation.id = uuid;\nobservation.source = msg.source;\nobservation.direction = \"Output\";\nvar observableReference = \"\";\n\n/*var observedKeys = msg.payload.observed.keys;\nfor (var key in observedKeys) {\n    if (parseInt(key) < 2) {\n        observableReference = observableReference + observedKeys[key].value + \"/\";\n    } else if (parseInt(key) >= 2 && parseInt(key) < (observedKeys.length - 1)) {\n        observableReference = observableReference + observedKeys[key].value + \".\";\n    } else {\n        observableReference = observableReference + observedKeys[key].value;\n    }\n}*/\n\nobservableReference = env.get(\"PropertyLink\");\n\nobservation.observableReference = observableReference;\n//observation.source = msg.req.params.aasid + \"/\" + msg.req.params.submodelId + \"/\" + msg.req.params.id;\nobservation.source = env.get(\"PropertyLinkEvt\");\n\nif(context.flow.get(\"timestamp\")){\n    observation.timestamp = context.flow.get(\"timestamp\");\n} else{\n    observation.timestamp = new Date().getTime();\n}\nobservation.payload = \"Data Flow removed\";\n//observation.href = msg.href;\n// END Create an Observation Object --------------------------------\n//outputMsgs.push(observation);\n\n//msg.payload = outputMsgs;\n//msg.payload = JSON.stringify(observation);\n//msg.test = JSON.parse(msg.payload);\ncontext.flow.set(\"ObsObj\", \"\");\nmsg.payload = observation;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1175,
        "y": 600,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "96b701c2b50dc6f7",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "",
        "func": "var propertyName = env.get(\"PropertyName\");\nvar Outmsg = {};\nOutmsg.topic = msg.topic;\nvar variable = context.flow.get(\"$parent.\" + propertyName);\ncontext.flow.set(\"variable\", variable);\n\nOutmsg.payload = variable;\nreturn Outmsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 875,
        "y": 800,
        "wires": [
            [
                "f894203f2fd3ac35",
                "f02316f50a016d5d"
            ]
        ],
        "l": false
    },
    {
        "id": "f02316f50a016d5d",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "responseTime",
        "func": "var historyArrayName = \"$parent.\" + env.get(\"PropertyName\") + \"_hist\";\nvar outMsg = {};\noutMsg.topic = \"put\";\nvar timestamp = context.flow.get(\"$parent.timestamp\");\nif (typeof timestamp == \"undefined\") {\n    timestamp = new Date().getTime();\n}\noutMsg.payload = {\n    link: env.get(\"PropertyLink\"),\n    tstamp: timestamp,\n    data: context.flow.get(\"variable\")\n};\nlet history = context.flow.get(historyArrayName) || [];\nif (history.length >= env.get(\"HistoryLength\")) {\n    history.pop();\n}\nhistory.push(outMsg.payload);\ncontext.flow.set(historyArrayName, history);\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1075,
        "y": 860,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "95ca925e8f8cf880",
        "type": "switch",
        "z": "41b3a1439ccec2c1",
        "name": "scheduler",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "sbi scheduling data routing",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 440,
        "y": 520,
        "wires": [
            [
                "127270a25c3d8888"
            ],
            [
                "96b701c2b50dc6f7"
            ]
        ]
    },
    {
        "id": "5f9633884f5e4cd4",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "",
        "func": "if(msg.payload == \"open\"){\n    msg.payload = ({ fill: \"green\", text: \"Open\" });\n} else if (msg.payload == \"close\"){\n    msg.payload = ({ fill: \"red\", text: \"Closed\" });\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1535,
        "y": 700,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "407f394e39d1235e",
        "type": "function",
        "z": "5ed335e57e3a0a3e",
        "name": "History",
        "func": "var extract = function (point, keyIndex, keysArray) {\n    if (keyIndex < keysArray.length) {\n        let element = keysArray[keyIndex];\n        if (typeof point[element] !== 'object') {\n            let simpleValue = {};\n            simpleValue[element] = point[element];\n            return simpleValue\n        } else {\n            keyIndex = keyIndex + 1;\n            return extract(point[element], keyIndex, keysArray);\n\n        }\n\n    }\n\n}\n\nlet keys = env.get(\"PathTo\");\nlet keysArray = keys.split(\".\");\n\n\n// Get request timestamps\nvar start = msg.payload.start;\nvar end = (msg.payload.end - start)/1000;\n//var end = msg.payload.end;\nvar history = context.flow.get(\"$parent.\" + env.get(\"historyArrayName\"));\nif(end > history.length){\n    start = history.length;\n} else {\n    start = history.length - end;\n}\n\nvar data = [];\nfor (var ts = start; ts < history.length; ts++ )\n{   \n    var element = history[ts];\n\n    data.push( {\n        tstamp: element.tstamp,\n        data: extract(element.data, 0, keysArray)\n    } );\n}\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "8e7a4be69ec8abee",
        "type": "comment",
        "z": "eed7db33cbb15160",
        "name": "External Interface - Manifest - Configuration",
        "info": "",
        "x": 190,
        "y": 40,
        "wires": []
    },
    {
        "id": "ae57f59228185653",
        "type": "comment",
        "z": "eed7db33cbb15160",
        "g": "8a179401500994e6",
        "name": "External Interface - Health Check",
        "info": "",
        "x": 270,
        "y": 4680,
        "wires": []
    },
    {
        "id": "2e4b21c722cff926",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "8a179401500994e6",
        "name": "",
        "url": "/aasServer/health",
        "method": "get",
        "upload": false,
        "swaggerDoc": "61af32fd3ebfc561",
        "x": 270,
        "y": 4740,
        "wires": [
            [
                "588b6309f3b63e0a"
            ]
        ]
    },
    {
        "id": "588b6309f3b63e0a",
        "type": "set-defaults",
        "z": "eed7db33cbb15160",
        "g": "8a179401500994e6",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 540,
        "y": 4740,
        "wires": [
            [
                "ed86c127fdb0e6c2"
            ]
        ]
    },
    {
        "id": "5e47ba86d84c2fbf",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "8a179401500994e6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1970,
        "y": 4740,
        "wires": []
    },
    {
        "id": "8b579e946e284d09",
        "type": "subflow:56cb7422.e3d28c",
        "z": "eed7db33cbb15160",
        "g": "8a179401500994e6",
        "name": "",
        "env": [],
        "x": 1950,
        "y": 4780,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "ed86c127fdb0e6c2",
        "type": "link out",
        "z": "eed7db33cbb15160",
        "g": "8a179401500994e6",
        "name": "6_Out",
        "mode": "link",
        "links": [
            "c083a97a21d997de"
        ],
        "x": 995,
        "y": 4740,
        "wires": []
    },
    {
        "id": "5a819a8542636e72",
        "type": "link in",
        "z": "eed7db33cbb15160",
        "g": "8a179401500994e6",
        "name": "6_In",
        "links": [
            "bdbbee562ff96f15"
        ],
        "x": 1415,
        "y": 4740,
        "wires": [
            [
                "5e47ba86d84c2fbf",
                "8b579e946e284d09"
            ]
        ]
    },
    {
        "id": "a823978f51e32fe6",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "8b7195dfeff10c3b",
        "name": "",
        "url": "/aasServer/auth/login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 552,
        "wires": [
            [
                "71a7ae65f6979eac",
                "a45cdcceb5bc8ebe"
            ]
        ]
    },
    {
        "id": "702ec0bd53f050f8",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "8b7195dfeff10c3b",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1740,
        "y": 552,
        "wires": []
    },
    {
        "id": "53431b416dd8fc9c",
        "type": "debug",
        "z": "eed7db33cbb15160",
        "g": "8b7195dfeff10c3b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 512,
        "wires": []
    },
    {
        "id": "0ed89656cc016ba9",
        "type": "http request",
        "z": "eed7db33cbb15160",
        "g": "8b7195dfeff10c3b",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 840,
        "y": 552,
        "wires": [
            [
                "53431b416dd8fc9c",
                "fc633424bf7183f1"
            ]
        ]
    },
    {
        "id": "71a7ae65f6979eac",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "8b7195dfeff10c3b",
        "name": "Extract session parameters for login",
        "func": "msg.headers = {};\nmsg.headers[\"content-type\"] = \"application/x-www-form-urlencoded\";\nmsg.url = context.global.get(\"authenticationServerEndpoint\") + \"/auth/realms/industry40_edge/protocol/openid-connect/token\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 552,
        "wires": [
            [
                "0ed89656cc016ba9"
            ]
        ]
    },
    {
        "id": "fc633424bf7183f1",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "8b7195dfeff10c3b",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1140,
        "y": 552,
        "wires": [
            [
                "66a8459d958308b7"
            ],
            [
                "66a8459d958308b7"
            ],
            [
                "ed6dcc349abf35ed"
            ]
        ]
    },
    {
        "id": "ed6dcc349abf35ed",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "8b7195dfeff10c3b",
        "name": "process message statusCode 200",
        "func": "var outMsg = {};\noutMsg.access_token = msg.payload.access_token;\noutMsg.refresh_token = msg.payload.refresh_token;\nmsg.payload = outMsg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1430,
        "y": 572,
        "wires": [
            [
                "702ec0bd53f050f8",
                "f069cd5b07108a87"
            ]
        ]
    },
    {
        "id": "66a8459d958308b7",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "8b7195dfeff10c3b",
        "name": "process message statusCode 401",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1430,
        "y": 532,
        "wires": [
            [
                "702ec0bd53f050f8"
            ]
        ]
    },
    {
        "id": "6b8c3f033ad19d1e",
        "type": "debug",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 1760,
        "wires": []
    },
    {
        "id": "6def5843ae45d14a",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2310,
        "y": 2100,
        "wires": []
    },
    {
        "id": "dd9ba45ed524bff4",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2310,
        "y": 1600,
        "wires": []
    },
    {
        "id": "0791e343087c444a",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2310,
        "y": 1760,
        "wires": []
    },
    {
        "id": "4237786127755a98",
        "type": "subflow:56cb7422.e3d28c",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "env": [],
        "x": 2290,
        "y": 1640,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "bf45bcd33bfd484d",
        "type": "subflow:56cb7422.e3d28c",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "x": 2290,
        "y": 1800,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "73b864e11592dfb4",
        "type": "subflow:56cb7422.e3d28c",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "env": [],
        "x": 2290,
        "y": 2140,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "327f8fdad6071ab6",
        "type": "link in",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "3_In",
        "links": [
            "16e3f2dd6d817e49"
        ],
        "x": 1755,
        "y": 1600,
        "wires": [
            [
                "dd9ba45ed524bff4",
                "4237786127755a98"
            ]
        ]
    },
    {
        "id": "30cacf373c9314be",
        "type": "link in",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "4_In",
        "links": [
            "7d6c849bc29f7872"
        ],
        "x": 1755,
        "y": 1760,
        "wires": [
            [
                "0791e343087c444a",
                "bf45bcd33bfd484d"
            ]
        ]
    },
    {
        "id": "f2578227d8ddbfd6",
        "type": "link in",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "5_In",
        "links": [
            "e858602356a8bbe3"
        ],
        "x": 1755,
        "y": 2100,
        "wires": [
            [
                "6def5843ae45d14a",
                "73b864e11592dfb4"
            ]
        ]
    },
    {
        "id": "3461fa42c5e8a4df",
        "type": "link in",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "19_In",
        "links": [
            "95617cac0ab95078"
        ],
        "x": 1735,
        "y": 1900,
        "wires": [
            [
                "65943ebd94913f2e",
                "11c27b25cd1a6363"
            ]
        ]
    },
    {
        "id": "11c27b25cd1a6363",
        "type": "subflow:56cb7422.e3d28c",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "x": 2290,
        "y": 1940,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "65943ebd94913f2e",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2310,
        "y": 1900,
        "wires": []
    },
    {
        "id": "6e70f1cef0eec522",
        "type": "link out",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "20_Out",
        "mode": "link",
        "links": [
            "ad0fe0d1d2eb8a52"
        ],
        "x": 1515,
        "y": 2260,
        "wires": []
    },
    {
        "id": "0fb6ffc99bc3c418",
        "type": "link in",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "20_In",
        "links": [
            "694498192c48fe2e"
        ],
        "x": 1735,
        "y": 2260,
        "wires": [
            [
                "ec72c69d60e6877d",
                "8bf330a6ad2d7a29"
            ]
        ]
    },
    {
        "id": "8bf330a6ad2d7a29",
        "type": "subflow:56cb7422.e3d28c",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "env": [],
        "x": 2290,
        "y": 2300,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "ec72c69d60e6877d",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2310,
        "y": 2260,
        "wires": []
    },
    {
        "id": "1b1324199b7abd73",
        "type": "set-defaults",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 530,
        "y": 1540,
        "wires": [
            [
                "ce0d8e5109f97cad"
            ]
        ]
    },
    {
        "id": "22db6e9dbc4f8215",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1290,
        "y": 1500,
        "wires": [
            [
                "9a14f553e42ee8ee"
            ]
        ]
    },
    {
        "id": "9a14f553e42ee8ee",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1550,
        "y": 1520,
        "wires": []
    },
    {
        "id": "43acf4e847f8dfd5",
        "type": "link out",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "3_Out",
        "mode": "link",
        "links": [
            "2751f3ca7f360e77"
        ],
        "x": 1515,
        "y": 1600,
        "wires": []
    },
    {
        "id": "d85b76a3285e87d4",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "url": "aasServer/env/persist",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 1540,
        "wires": [
            [
                "1b1324199b7abd73"
            ]
        ]
    },
    {
        "id": "f59ca19dd1265e4d",
        "type": "link out",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "4_Out",
        "mode": "link",
        "links": [
            "5619a3cc8a7cd0ce"
        ],
        "x": 1515,
        "y": 1760,
        "wires": []
    },
    {
        "id": "b3a6cabb0576ae84",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "process message statusCode 401/403",
        "func": "//msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1270,
        "y": 1700,
        "wires": [
            [
                "467548cda6dcda49"
            ]
        ]
    },
    {
        "id": "467548cda6dcda49",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1550,
        "y": 1720,
        "wires": []
    },
    {
        "id": "40feba0296ecae54",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 930,
        "y": 1700,
        "wires": [
            [
                "b3a6cabb0576ae84"
            ],
            [
                "b3a6cabb0576ae84"
            ],
            [
                "c522f507ff4f23e1"
            ]
        ]
    },
    {
        "id": "15e9c7748b69eb57",
        "type": "set-defaults",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 530,
        "y": 1700,
        "wires": [
            [
                "edb66a07acdc3737"
            ]
        ]
    },
    {
        "id": "e0362a11adc49480",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "url": "aasServer/env",
        "method": "get",
        "upload": false,
        "swaggerDoc": "4dc9adf5e46a5489",
        "x": 250,
        "y": 1700,
        "wires": [
            [
                "15e9c7748b69eb57"
            ]
        ]
    },
    {
        "id": "6df32a901026e6af",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "url": "aasServer/shells",
        "method": "get",
        "upload": false,
        "swaggerDoc": "62805747f7f75fde",
        "x": 260,
        "y": 1840,
        "wires": [
            [
                "d93aaa391159fb2d"
            ]
        ]
    },
    {
        "id": "363e4381be198141",
        "type": "link out",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "19_Out",
        "mode": "link",
        "links": [
            "1fad318dc73b96af"
        ],
        "x": 1515,
        "y": 1900,
        "wires": []
    },
    {
        "id": "d93aaa391159fb2d",
        "type": "set-defaults",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 530,
        "y": 1840,
        "wires": [
            [
                "7a2ee1cbfe6b8098"
            ]
        ]
    },
    {
        "id": "5a2399cd70a0f11e",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1270,
        "y": 1840,
        "wires": [
            [
                "515c353fd05f162c"
            ]
        ]
    },
    {
        "id": "515c353fd05f162c",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1550,
        "y": 1860,
        "wires": []
    },
    {
        "id": "7a84196aa1ec44f1",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/asset-information",
        "method": "get",
        "upload": false,
        "swaggerDoc": "97d73e5306233f09",
        "x": 350,
        "y": 2040,
        "wires": [
            [
                "b5b8fc603bb0701b"
            ]
        ]
    },
    {
        "id": "b5b8fc603bb0701b",
        "type": "set-defaults",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 650,
        "y": 2040,
        "wires": [
            [
                "51cf4966f317d03b"
            ]
        ]
    },
    {
        "id": "9a593bb11c55a2f4",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1270,
        "y": 2040,
        "wires": [
            [
                "a35fc29d77154150"
            ]
        ]
    },
    {
        "id": "a35fc29d77154150",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1530,
        "y": 2060,
        "wires": []
    },
    {
        "id": "0e2b6fea44f4aede",
        "type": "link out",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "5_Out",
        "mode": "link",
        "links": [
            "05e49069e4cc8276"
        ],
        "x": 1515,
        "y": 2100,
        "wires": []
    },
    {
        "id": "105abeca40f6f7eb",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas",
        "method": "get",
        "upload": false,
        "swaggerDoc": "f63412d5902e8a10",
        "x": 290,
        "y": 2200,
        "wires": [
            [
                "e1d074309ee109c6"
            ]
        ]
    },
    {
        "id": "af71f3cf43be37db",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2270,
        "y": 2520,
        "wires": []
    },
    {
        "id": "3698bfed8080ece4",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2270,
        "y": 2760,
        "wires": []
    },
    {
        "id": "7a9755ad1387a23b",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2270,
        "y": 3020,
        "wires": []
    },
    {
        "id": "464c49f42d9c280f",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2270,
        "y": 3140,
        "wires": []
    },
    {
        "id": "67851403f9820d16",
        "type": "subflow:56cb7422.e3d28c",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "env": [],
        "x": 2250,
        "y": 2560,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "b0ca4496d6dcf1a8",
        "type": "subflow:56cb7422.e3d28c",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "x": 2253,
        "y": 2807,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "942ceeb043f4acd4",
        "type": "subflow:56cb7422.e3d28c",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "x": 2250,
        "y": 3060,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "57b7f5b5714b4dfe",
        "type": "subflow:56cb7422.e3d28c",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "x": 2250,
        "y": 3180,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "dfb22023b0d99566",
        "type": "link in",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "7_In",
        "links": [
            "700785eef8b4b329"
        ],
        "x": 1735,
        "y": 2520,
        "wires": [
            [
                "af71f3cf43be37db",
                "67851403f9820d16"
            ]
        ]
    },
    {
        "id": "8e39befdad4eef79",
        "type": "link in",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "8_In",
        "links": [
            "7b50cd644155c5fd"
        ],
        "x": 1735,
        "y": 2760,
        "wires": [
            [
                "3698bfed8080ece4",
                "b0ca4496d6dcf1a8"
            ]
        ]
    },
    {
        "id": "ba11767adf90354d",
        "type": "link out",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "9_Out",
        "mode": "link",
        "links": [
            "509b047804c68343"
        ],
        "x": 1535,
        "y": 3020,
        "wires": []
    },
    {
        "id": "ae51a91b4518f134",
        "type": "link in",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "9_In",
        "links": [
            "77f597f89a0c5eb4"
        ],
        "x": 1735,
        "y": 3020,
        "wires": [
            [
                "7a9755ad1387a23b",
                "942ceeb043f4acd4"
            ]
        ]
    },
    {
        "id": "969e8410e6e17d20",
        "type": "link out",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "10_Out",
        "mode": "link",
        "links": [
            "f15504bca78f54a3"
        ],
        "x": 1535,
        "y": 3140,
        "wires": []
    },
    {
        "id": "5a8f7d4734233d71",
        "type": "link in",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "10_In",
        "links": [
            "63ed4fad3a0e3106"
        ],
        "x": 1735,
        "y": 3140,
        "wires": [
            [
                "464c49f42d9c280f",
                "57b7f5b5714b4dfe"
            ]
        ]
    },
    {
        "id": "00f5e5a8bd07d7ae",
        "type": "comment",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "External Interface - Data - Operations on Submodels",
        "info": "",
        "x": 363,
        "y": 2417,
        "wires": []
    },
    {
        "id": "f291d1d876934273",
        "type": "link in",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "21_In",
        "links": [
            "2af11f1b5219d380"
        ],
        "x": 1735,
        "y": 2640,
        "wires": [
            [
                "0dcf6214e8fb0913",
                "b3ebf76f1617ee17"
            ]
        ]
    },
    {
        "id": "b3ebf76f1617ee17",
        "type": "subflow:56cb7422.e3d28c",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "env": [],
        "x": 2270,
        "y": 2680,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "0dcf6214e8fb0913",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2270,
        "y": 2640,
        "wires": []
    },
    {
        "id": "1d87f42cb965fbdd",
        "type": "comment",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "External Interface - Data - Operations on Properties",
        "info": "",
        "x": 370,
        "y": 3280,
        "wires": []
    },
    {
        "id": "2a1e38046e7cc54b",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:submodelId/submodel/submodel-elements/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 520,
        "y": 3360,
        "wires": [
            [
                "d6b4f982e416ed26"
            ]
        ]
    },
    {
        "id": "56e9d47cefd09c97",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2290,
        "y": 3400,
        "wires": []
    },
    {
        "id": "1e4ffb9f7b08f6f2",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:submodelId/submodel/submodel-elements/:id",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 520,
        "y": 3480,
        "wires": [
            [
                "0c2bf1ecb10e2d09"
            ]
        ]
    },
    {
        "id": "e5d8d32623181651",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2290,
        "y": 3520,
        "wires": []
    },
    {
        "id": "b316214731ecedf1",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:submodelId/submodel/submodel-elements/:id",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 510,
        "y": 3720,
        "wires": [
            [
                "a8230932871b5ef4"
            ]
        ]
    },
    {
        "id": "f85cb92ff6e72ee8",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2290,
        "y": 3760,
        "wires": []
    },
    {
        "id": "5d0f3a52dd1082c7",
        "type": "subflow:56cb7422.e3d28c",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "x": 2260,
        "y": 3440,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "ac6739dbe1b2333f",
        "type": "subflow:56cb7422.e3d28c",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "env": [],
        "x": 2260,
        "y": 3560,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "4f32c0d647dd512b",
        "type": "subflow:56cb7422.e3d28c",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "x": 2260,
        "y": 3800,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "69fd7487a0bedd96",
        "type": "link out",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "12_Out",
        "mode": "link",
        "links": [
            "4c39d757e5235f53"
        ],
        "x": 1695,
        "y": 3400,
        "wires": []
    },
    {
        "id": "59e805fe43604c70",
        "type": "link in",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "12_In",
        "links": [
            "4a86dc0c1a938c8a"
        ],
        "x": 1875,
        "y": 3400,
        "wires": [
            [
                "56e9d47cefd09c97",
                "5d0f3a52dd1082c7"
            ]
        ]
    },
    {
        "id": "bf8cd90c953031f4",
        "type": "link in",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "13_In",
        "links": [
            "130852b18fec348b"
        ],
        "x": 1875,
        "y": 3520,
        "wires": [
            [
                "e5d8d32623181651",
                "ac6739dbe1b2333f"
            ]
        ]
    },
    {
        "id": "6f081828f0ec6778",
        "type": "link out",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "13_Out",
        "mode": "link",
        "links": [
            "7658d91718d1c5fb"
        ],
        "x": 1695,
        "y": 3520,
        "wires": []
    },
    {
        "id": "e1f1bd16b5b68a20",
        "type": "link in",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "14_In",
        "links": [
            "3f760ab2ca42b99c"
        ],
        "x": 1875,
        "y": 3760,
        "wires": [
            [
                "f85cb92ff6e72ee8",
                "4f32c0d647dd512b"
            ]
        ]
    },
    {
        "id": "ba40305cbcbba997",
        "type": "link out",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "14_Out",
        "mode": "link",
        "links": [
            "fd1e4f235d5a4f9d"
        ],
        "x": 1695,
        "y": 3760,
        "wires": []
    },
    {
        "id": "e1d074309ee109c6",
        "type": "set-defaults",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 510,
        "y": 2200,
        "wires": [
            [
                "39a7385ec50d8b42"
            ]
        ]
    },
    {
        "id": "73804c7985abe7b0",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "process message statusCode 403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 2200,
        "wires": [
            [
                "cbef3784174217da"
            ]
        ]
    },
    {
        "id": "cbef3784174217da",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1550,
        "y": 2200,
        "wires": []
    },
    {
        "id": "b6319f0fda39cb79",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 930,
        "y": 1540,
        "wires": [
            [
                "22db6e9dbc4f8215"
            ],
            [
                "22db6e9dbc4f8215"
            ],
            [
                "47f05fd313f4ccb3"
            ]
        ]
    },
    {
        "id": "37ecb6415dae1ba4",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 910,
        "y": 1840,
        "wires": [
            [
                "5a2399cd70a0f11e"
            ],
            [
                "5a2399cd70a0f11e"
            ],
            [
                "a92917c32b7180f6"
            ]
        ]
    },
    {
        "id": "8679430bf18eb090",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 990,
        "y": 2040,
        "wires": [
            [
                "9a593bb11c55a2f4"
            ],
            [
                "9a593bb11c55a2f4"
            ],
            [
                "3b3f4fc93109166b"
            ]
        ]
    },
    {
        "id": "71725ec83749dba4",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 910,
        "y": 2200,
        "wires": [
            [
                "73804c7985abe7b0"
            ],
            [
                "73804c7985abe7b0"
            ],
            [
                "f30f14410bcc970d"
            ]
        ]
    },
    {
        "id": "cd575411fc245db9",
        "type": "set-defaults",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 550,
        "y": 2480,
        "wires": [
            [
                "81803122abe17382"
            ]
        ]
    },
    {
        "id": "7de8f3015f5d060a",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1290,
        "y": 2460,
        "wires": [
            [
                "c13888b5060bf353"
            ]
        ]
    },
    {
        "id": "c13888b5060bf353",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1570,
        "y": 2480,
        "wires": []
    },
    {
        "id": "146a26bef860e0d8",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 950,
        "y": 2480,
        "wires": [
            [
                "7de8f3015f5d060a"
            ],
            [
                "7de8f3015f5d060a"
            ],
            [
                "fe42a81042c338ec"
            ]
        ]
    },
    {
        "id": "fe18a52eca040bc3",
        "type": "link out",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "7_Out",
        "mode": "link",
        "links": [
            "23f52b53b163c2cb"
        ],
        "x": 1535,
        "y": 2520,
        "wires": []
    },
    {
        "id": "922a8db95c75ab92",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "url": "/aasServer/submodels",
        "method": "get",
        "upload": false,
        "swaggerDoc": "43819692c4261737",
        "x": 300,
        "y": 2480,
        "wires": [
            [
                "cd575411fc245db9"
            ]
        ]
    },
    {
        "id": "522959734a7bbb25",
        "type": "set-defaults",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 610,
        "y": 2600,
        "wires": [
            [
                "4d396be250d1a01f"
            ]
        ]
    },
    {
        "id": "6b7a66be32f1d8f4",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1290,
        "y": 2580,
        "wires": [
            [
                "8093cd4e782ac480"
            ]
        ]
    },
    {
        "id": "8093cd4e782ac480",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1570,
        "y": 2600,
        "wires": []
    },
    {
        "id": "58cd421fe276f65b",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 950,
        "y": 2600,
        "wires": [
            [
                "6b7a66be32f1d8f4"
            ],
            [
                "6b7a66be32f1d8f4"
            ],
            [
                "e6c85c76e10dc1e6"
            ]
        ]
    },
    {
        "id": "bed8af094a9dc23b",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "url": "/aasServer/shells/:id/aas/submodels",
        "method": "get",
        "upload": false,
        "swaggerDoc": "7df4735395b8c934",
        "x": 340,
        "y": 2600,
        "wires": [
            [
                "522959734a7bbb25"
            ]
        ]
    },
    {
        "id": "2a49545b9d945e4b",
        "type": "link out",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "21_Out",
        "mode": "link",
        "links": [
            "fddf6602c8f94113"
        ],
        "x": 1535,
        "y": 2640,
        "wires": []
    },
    {
        "id": "d23fb60e068cbf77",
        "type": "set-defaults",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 690,
        "y": 2700,
        "wires": [
            [
                "2d2edeb30af428f7"
            ]
        ]
    },
    {
        "id": "5f1d07a4ca9b50da",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1290,
        "y": 2680,
        "wires": [
            [
                "0e4a751afd585eb9"
            ]
        ]
    },
    {
        "id": "5a27d07093744e70",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:id/submodel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "3c4e07ba0dc97610",
        "x": 390,
        "y": 2700,
        "wires": [
            [
                "d23fb60e068cbf77"
            ]
        ]
    },
    {
        "id": "03349ee98966bb72",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1010,
        "y": 2700,
        "wires": [
            [
                "5f1d07a4ca9b50da"
            ],
            [
                "5f1d07a4ca9b50da"
            ],
            [
                "9229d4fd7b1e0436"
            ]
        ]
    },
    {
        "id": "b86733db2b8aa6e2",
        "type": "link out",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "8_Out",
        "mode": "link",
        "links": [
            "7caac457b06a4506"
        ],
        "x": 1535,
        "y": 2760,
        "wires": []
    },
    {
        "id": "0e4a751afd585eb9",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1570,
        "y": 2700,
        "wires": []
    },
    {
        "id": "29412a95618112c7",
        "type": "set-defaults",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 690,
        "y": 2960,
        "wires": [
            [
                "fd761a7fbc1a9c61"
            ]
        ]
    },
    {
        "id": "cf763f42bdadabe5",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1290,
        "y": 2940,
        "wires": [
            [
                "3adeea0795429784"
            ]
        ]
    },
    {
        "id": "16995814da7a73fe",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1030,
        "y": 2960,
        "wires": [
            [
                "cf763f42bdadabe5"
            ],
            [
                "cf763f42bdadabe5"
            ],
            [
                "b952ac79c54eb275"
            ]
        ]
    },
    {
        "id": "3adeea0795429784",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1570,
        "y": 2960,
        "wires": []
    },
    {
        "id": "d275bc61cd964b4f",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:id/submodel",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 390,
        "y": 2960,
        "wires": [
            [
                "29412a95618112c7"
            ]
        ]
    },
    {
        "id": "8e79a311772fe5f6",
        "type": "set-defaults",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 710,
        "y": 3080,
        "wires": [
            [
                "ae2226d4fd5b338e"
            ]
        ]
    },
    {
        "id": "accd69359e36e50f",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1290,
        "y": 3060,
        "wires": [
            [
                "4e014cc58e8cab8a"
            ]
        ]
    },
    {
        "id": "7c0da10e869bc186",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1030,
        "y": 3080,
        "wires": [
            [
                "accd69359e36e50f"
            ],
            [
                "accd69359e36e50f"
            ],
            [
                "dbe3db1b6283e40b"
            ]
        ]
    },
    {
        "id": "4e014cc58e8cab8a",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1570,
        "y": 3080,
        "wires": []
    },
    {
        "id": "c0cb061af5ff66d5",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:id/submodel",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 400,
        "y": 3080,
        "wires": [
            [
                "8e79a311772fe5f6"
            ]
        ]
    },
    {
        "id": "d6b4f982e416ed26",
        "type": "set-defaults",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 930,
        "y": 3360,
        "wires": [
            [
                "6710acc8e3d42527"
            ]
        ]
    },
    {
        "id": "d52498367e50d2c7",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1490,
        "y": 3340,
        "wires": [
            [
                "ab67218db0dc24cd"
            ]
        ]
    },
    {
        "id": "8f06dd106510a025",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1250,
        "y": 3360,
        "wires": [
            [
                "d52498367e50d2c7"
            ],
            [
                "d52498367e50d2c7"
            ],
            [
                "b7f591bcad4a4da3"
            ]
        ]
    },
    {
        "id": "ab67218db0dc24cd",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1730,
        "y": 3360,
        "wires": []
    },
    {
        "id": "0c2bf1ecb10e2d09",
        "type": "set-defaults",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 930,
        "y": 3480,
        "wires": [
            [
                "fa4ba9500387779d"
            ]
        ]
    },
    {
        "id": "b33940780f91b1cf",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1490,
        "y": 3460,
        "wires": [
            [
                "ad39dbfe77e8ecc2"
            ]
        ]
    },
    {
        "id": "609addf784af00b7",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1250,
        "y": 3480,
        "wires": [
            [
                "b33940780f91b1cf"
            ],
            [
                "b33940780f91b1cf"
            ],
            [
                "fd160dbffadcfbf5"
            ]
        ]
    },
    {
        "id": "ad39dbfe77e8ecc2",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1730,
        "y": 3480,
        "wires": []
    },
    {
        "id": "a8230932871b5ef4",
        "type": "set-defaults",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 934,
        "y": 3720,
        "wires": [
            [
                "48929bf538ec6070"
            ]
        ]
    },
    {
        "id": "c5d45082c66056b1",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1490,
        "y": 3697,
        "wires": [
            [
                "aac93ae93e513f15"
            ]
        ]
    },
    {
        "id": "db3f917a5796483f",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1250,
        "y": 3717,
        "wires": [
            [
                "c5d45082c66056b1"
            ],
            [
                "c5d45082c66056b1"
            ],
            [
                "a46499a0c1dd027d"
            ]
        ]
    },
    {
        "id": "aac93ae93e513f15",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1730,
        "y": 3720,
        "wires": []
    },
    {
        "id": "a45cdcceb5bc8ebe",
        "type": "debug",
        "z": "eed7db33cbb15160",
        "g": "8b7195dfeff10c3b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 512,
        "wires": []
    },
    {
        "id": "f069cd5b07108a87",
        "type": "debug",
        "z": "eed7db33cbb15160",
        "g": "8b7195dfeff10c3b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1730,
        "y": 612,
        "wires": []
    },
    {
        "id": "a8ba3b5a326aad5c",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "8b7195dfeff10c3b",
        "name": "",
        "url": "/aasServer/auth/logout",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 692,
        "wires": [
            [
                "49e81fcf7bc0b15b",
                "164e698d09bb754c"
            ]
        ]
    },
    {
        "id": "b9438e85edb8c744",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "8b7195dfeff10c3b",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1730,
        "y": 692,
        "wires": []
    },
    {
        "id": "4ce59568c3d24311",
        "type": "debug",
        "z": "eed7db33cbb15160",
        "g": "8b7195dfeff10c3b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 652,
        "wires": []
    },
    {
        "id": "1d752923b240f3dd",
        "type": "http request",
        "z": "eed7db33cbb15160",
        "g": "8b7195dfeff10c3b",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "content-type",
                "valueType": "other",
                "valueValue": "application/x-www-form-urlencoded"
            }
        ],
        "x": 850,
        "y": 692,
        "wires": [
            [
                "4ce59568c3d24311",
                "b9438e85edb8c744"
            ]
        ]
    },
    {
        "id": "49e81fcf7bc0b15b",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "8b7195dfeff10c3b",
        "name": "Extract session parameters for logout",
        "func": "msg.url = context.global.get(\"authenticationServerEndpoint\") + \"/auth/realms/industry40_edge/protocol/openid-connect/logout\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 692,
        "wires": [
            [
                "1d752923b240f3dd"
            ]
        ]
    },
    {
        "id": "164e698d09bb754c",
        "type": "debug",
        "z": "eed7db33cbb15160",
        "g": "8b7195dfeff10c3b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 652,
        "wires": []
    },
    {
        "id": "c48b7dd6114cc6cc",
        "type": "comment",
        "z": "eed7db33cbb15160",
        "g": "0fac75980c58fbdb",
        "name": "External Interface - FileData - Request File",
        "info": "",
        "x": 300,
        "y": 4440,
        "wires": []
    },
    {
        "id": "1c23a11624fe2585",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "0fac75980c58fbdb",
        "name": "",
        "url": "/aasx/docu/:fn",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 250,
        "y": 4540,
        "wires": [
            [
                "9139a46e838fad60"
            ]
        ]
    },
    {
        "id": "655d81f8ce3006f5",
        "type": "link out",
        "z": "eed7db33cbb15160",
        "g": "0fac75980c58fbdb",
        "name": "18_Out",
        "mode": "link",
        "links": [
            "be7a0f99521f4f11"
        ],
        "x": 1875,
        "y": 4496,
        "wires": []
    },
    {
        "id": "3a1cecce2b2bfbe1",
        "type": "link in",
        "z": "eed7db33cbb15160",
        "g": "0fac75980c58fbdb",
        "name": "18_In",
        "links": [
            "76bd28f2ddc9d189"
        ],
        "x": 2195,
        "y": 4496,
        "wires": [
            [
                "c5981f869ab59492",
                "d65968e9a7c86f67"
            ]
        ]
    },
    {
        "id": "92b3e5098669f70f",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "0fac75980c58fbdb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2550,
        "y": 4496,
        "wires": []
    },
    {
        "id": "c5981f869ab59492",
        "type": "subflow:56cb7422.e3d28c",
        "z": "eed7db33cbb15160",
        "g": "0fac75980c58fbdb",
        "name": "",
        "env": [],
        "x": 2510,
        "y": 4556,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "9139a46e838fad60",
        "type": "set-defaults",
        "z": "eed7db33cbb15160",
        "g": "0fac75980c58fbdb",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 450,
        "y": 4536,
        "wires": [
            [
                "4c326e06e141d0fe"
            ]
        ]
    },
    {
        "id": "60cc860236e60b72",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "0fac75980c58fbdb",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1050,
        "y": 4540,
        "wires": [
            [
                "adf987f6a6f4b169"
            ],
            [
                "adf987f6a6f4b169"
            ],
            [
                "45755ba482ef8b14"
            ]
        ]
    },
    {
        "id": "adf987f6a6f4b169",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "0fac75980c58fbdb",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 4476,
        "wires": [
            [
                "b27a11e4b96f4722"
            ]
        ]
    },
    {
        "id": "b27a11e4b96f4722",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "0fac75980c58fbdb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1590,
        "y": 4476,
        "wires": []
    },
    {
        "id": "c79a800354877d9d",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "0fac75980c58fbdb",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1450,
        "y": 4560,
        "wires": [
            [
                "b27a11e4b96f4722"
            ],
            [
                "655d81f8ce3006f5"
            ]
        ]
    },
    {
        "id": "d65968e9a7c86f67",
        "type": "function",
        "z": "eed7db33cbb15160",
        "g": "0fac75980c58fbdb",
        "name": "Attachment",
        "func": "msg.headers[\"Content-Disposition\"] = \"attachment;\" + \"filename=\" + msg.req.params.fn;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2330,
        "y": 4496,
        "wires": [
            [
                "92b3e5098669f70f"
            ]
        ]
    },
    {
        "id": "4c326e06e141d0fe",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "0fac75980c58fbdb",
        "name": "",
        "property": "payload.Submit",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 4536,
        "wires": [
            [
                "440728fde54490a9"
            ],
            [
                "104a9dd968244d0f"
            ]
        ]
    },
    {
        "id": "440728fde54490a9",
        "type": "function",
        "z": "eed7db33cbb15160",
        "g": "0fac75980c58fbdb",
        "name": "",
        "func": "msg.req.rawHeaders.unshift(msg.payload.Submit);\nmsg.req.rawHeaders.unshift(\"authorization\");\nmsg.req.rawHeaders.unshift(msg.payload.Submit);\nmsg.req.headers = {};\nmsg.req.headers[\"authorization\"] = msg.payload.Submit;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 720,
        "y": 4476,
        "wires": [
            [
                "104a9dd968244d0f"
            ]
        ]
    },
    {
        "id": "c856f88f31e51f10",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1390,
        "y": 1560,
        "wires": [
            [
                "9a14f553e42ee8ee"
            ],
            [
                "43acf4e847f8dfd5"
            ]
        ]
    },
    {
        "id": "62a42739a164544b",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1390,
        "y": 1740,
        "wires": [
            [
                "467548cda6dcda49"
            ],
            [
                "f59ca19dd1265e4d"
            ]
        ]
    },
    {
        "id": "b5a5409f2420d524",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1390,
        "y": 1880,
        "wires": [
            [
                "515c353fd05f162c"
            ],
            [
                "363e4381be198141"
            ]
        ]
    },
    {
        "id": "ffdd0673a3946e03",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1390,
        "y": 2080,
        "wires": [
            [
                "a35fc29d77154150"
            ],
            [
                "0e2b6fea44f4aede"
            ]
        ]
    },
    {
        "id": "01b84d6b329489b3",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1390,
        "y": 2260,
        "wires": [
            [
                "cbef3784174217da"
            ],
            [
                "6e70f1cef0eec522"
            ]
        ]
    },
    {
        "id": "782f6261a8144bc2",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 2500,
        "wires": [
            [
                "c13888b5060bf353"
            ],
            [
                "fe18a52eca040bc3"
            ]
        ]
    },
    {
        "id": "680480a6ae064033",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 2620,
        "wires": [
            [
                "8093cd4e782ac480"
            ],
            [
                "2a49545b9d945e4b"
            ]
        ]
    },
    {
        "id": "59303f1540a7f1df",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 2720,
        "wires": [
            [
                "0e4a751afd585eb9"
            ],
            [
                "b86733db2b8aa6e2"
            ]
        ]
    },
    {
        "id": "7719205727882270",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 2980,
        "wires": [
            [
                "3adeea0795429784"
            ],
            [
                "ba11767adf90354d"
            ]
        ]
    },
    {
        "id": "06d5b16016d1ae70",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 3100,
        "wires": [
            [
                "4e014cc58e8cab8a"
            ],
            [
                "969e8410e6e17d20"
            ]
        ]
    },
    {
        "id": "45e1540078269aca",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1570,
        "y": 3400,
        "wires": [
            [
                "ab67218db0dc24cd"
            ],
            [
                "69fd7487a0bedd96"
            ]
        ]
    },
    {
        "id": "c083380b0fcb9146",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1570,
        "y": 3500,
        "wires": [
            [
                "ad39dbfe77e8ecc2"
            ],
            [
                "6f081828f0ec6778"
            ]
        ]
    },
    {
        "id": "35b1c4ca2eb3af48",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1570,
        "y": 3740,
        "wires": [
            [
                "aac93ae93e513f15"
            ],
            [
                "ba40305cbcbba997"
            ]
        ]
    },
    {
        "id": "ce0d8e5109f97cad",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "links": [
            "028dad41552f328b"
        ],
        "timeout": "30",
        "x": 740,
        "y": 1540,
        "wires": [
            [
                "b6319f0fda39cb79"
            ]
        ]
    },
    {
        "id": "edb66a07acdc3737",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "links": [
            "028dad41552f328b"
        ],
        "timeout": "30",
        "x": 740,
        "y": 1700,
        "wires": [
            [
                "40feba0296ecae54",
                "6b8c3f033ad19d1e"
            ]
        ]
    },
    {
        "id": "7a2ee1cbfe6b8098",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "links": [
            "028dad41552f328b"
        ],
        "timeout": "30",
        "x": 740,
        "y": 1840,
        "wires": [
            [
                "37ecb6415dae1ba4"
            ]
        ]
    },
    {
        "id": "51cf4966f317d03b",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "links": [
            "028dad41552f328b"
        ],
        "timeout": "30",
        "x": 820,
        "y": 2040,
        "wires": [
            [
                "8679430bf18eb090"
            ]
        ]
    },
    {
        "id": "39a7385ec50d8b42",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "links": [
            "028dad41552f328b"
        ],
        "timeout": "30",
        "x": 720,
        "y": 2200,
        "wires": [
            [
                "71725ec83749dba4"
            ]
        ]
    },
    {
        "id": "81803122abe17382",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "links": [
            "028dad41552f328b"
        ],
        "timeout": "30",
        "x": 760,
        "y": 2480,
        "wires": [
            [
                "146a26bef860e0d8"
            ]
        ]
    },
    {
        "id": "4d396be250d1a01f",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "links": [
            "028dad41552f328b"
        ],
        "timeout": "30",
        "x": 800,
        "y": 2600,
        "wires": [
            [
                "58cd421fe276f65b"
            ]
        ]
    },
    {
        "id": "2d2edeb30af428f7",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "links": [
            "028dad41552f328b"
        ],
        "timeout": "30",
        "x": 860,
        "y": 2700,
        "wires": [
            [
                "03349ee98966bb72"
            ]
        ]
    },
    {
        "id": "fd761a7fbc1a9c61",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "links": [
            "028dad41552f328b"
        ],
        "timeout": "30",
        "x": 860,
        "y": 2960,
        "wires": [
            [
                "16995814da7a73fe"
            ]
        ]
    },
    {
        "id": "ae2226d4fd5b338e",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "links": [
            "028dad41552f328b"
        ],
        "timeout": "30",
        "x": 880,
        "y": 3080,
        "wires": [
            [
                "7c0da10e869bc186"
            ]
        ]
    },
    {
        "id": "6710acc8e3d42527",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "links": [
            "028dad41552f328b"
        ],
        "timeout": "30",
        "x": 1100,
        "y": 3360,
        "wires": [
            [
                "8f06dd106510a025"
            ]
        ]
    },
    {
        "id": "fa4ba9500387779d",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "links": [
            "028dad41552f328b"
        ],
        "timeout": "30",
        "x": 1100,
        "y": 3480,
        "wires": [
            [
                "609addf784af00b7"
            ]
        ]
    },
    {
        "id": "48929bf538ec6070",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "links": [
            "028dad41552f328b"
        ],
        "timeout": "30",
        "x": 1100,
        "y": 3720,
        "wires": [
            [
                "db3f917a5796483f"
            ]
        ]
    },
    {
        "id": "104a9dd968244d0f",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "0fac75980c58fbdb",
        "name": "",
        "links": [
            "028dad41552f328b"
        ],
        "timeout": "30",
        "x": 900,
        "y": 4540,
        "wires": [
            [
                "60cc860236e60b72"
            ]
        ]
    },
    {
        "id": "47f05fd313f4ccb3",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "links": [
            "668dac8d463bac50"
        ],
        "timeout": "30",
        "x": 1220,
        "y": 1560,
        "wires": [
            [
                "c856f88f31e51f10"
            ]
        ]
    },
    {
        "id": "c522f507ff4f23e1",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "links": [
            "668dac8d463bac50"
        ],
        "timeout": "30",
        "x": 1200,
        "y": 1740,
        "wires": [
            [
                "62a42739a164544b"
            ]
        ]
    },
    {
        "id": "a92917c32b7180f6",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "links": [
            "668dac8d463bac50"
        ],
        "timeout": "30",
        "x": 1200,
        "y": 1880,
        "wires": [
            [
                "b5a5409f2420d524"
            ]
        ]
    },
    {
        "id": "3b3f4fc93109166b",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "links": [
            "668dac8d463bac50"
        ],
        "timeout": "30",
        "x": 1200,
        "y": 2080,
        "wires": [
            [
                "ffdd0673a3946e03"
            ]
        ]
    },
    {
        "id": "f30f14410bcc970d",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "8a144fdf9bad252a",
        "name": "",
        "links": [
            "668dac8d463bac50"
        ],
        "timeout": "30",
        "x": 1200,
        "y": 2260,
        "wires": [
            [
                "01b84d6b329489b3"
            ]
        ]
    },
    {
        "id": "fe42a81042c338ec",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "links": [
            "668dac8d463bac50"
        ],
        "timeout": "30",
        "x": 1220,
        "y": 2500,
        "wires": [
            [
                "782f6261a8144bc2"
            ]
        ]
    },
    {
        "id": "e6c85c76e10dc1e6",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "links": [
            "668dac8d463bac50"
        ],
        "timeout": "30",
        "x": 1220,
        "y": 2620,
        "wires": [
            [
                "680480a6ae064033"
            ]
        ]
    },
    {
        "id": "9229d4fd7b1e0436",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "links": [
            "668dac8d463bac50"
        ],
        "timeout": "30",
        "x": 1220,
        "y": 2720,
        "wires": [
            [
                "59303f1540a7f1df"
            ]
        ]
    },
    {
        "id": "b952ac79c54eb275",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "links": [
            "668dac8d463bac50"
        ],
        "timeout": "30",
        "x": 1220,
        "y": 2980,
        "wires": [
            [
                "7719205727882270"
            ]
        ]
    },
    {
        "id": "dbe3db1b6283e40b",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "links": [
            "668dac8d463bac50"
        ],
        "timeout": "30",
        "x": 1220,
        "y": 3100,
        "wires": [
            [
                "06d5b16016d1ae70"
            ]
        ]
    },
    {
        "id": "b7f591bcad4a4da3",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "links": [
            "668dac8d463bac50"
        ],
        "timeout": "30",
        "x": 1420,
        "y": 3400,
        "wires": [
            [
                "45e1540078269aca"
            ]
        ]
    },
    {
        "id": "fd160dbffadcfbf5",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "links": [
            "668dac8d463bac50"
        ],
        "timeout": "30",
        "x": 1420,
        "y": 3500,
        "wires": [
            [
                "c083380b0fcb9146"
            ]
        ]
    },
    {
        "id": "a46499a0c1dd027d",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "links": [
            "668dac8d463bac50"
        ],
        "timeout": "30",
        "x": 1420,
        "y": 3740,
        "wires": [
            [
                "35b1c4ca2eb3af48"
            ]
        ]
    },
    {
        "id": "45755ba482ef8b14",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "0fac75980c58fbdb",
        "name": "",
        "links": [
            "668dac8d463bac50"
        ],
        "timeout": "30",
        "x": 1260,
        "y": 4560,
        "wires": [
            [
                "c79a800354877d9d"
            ]
        ]
    },
    {
        "id": "f01fd6871209256c",
        "type": "debug",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 910,
        "y": 3580,
        "wires": []
    },
    {
        "id": "574ba7162260f0f8",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:submodelId/submodel/submodel-elements/:id",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 520,
        "y": 3620,
        "wires": [
            [
                "f01fd6871209256c",
                "551329bf592fad61"
            ]
        ]
    },
    {
        "id": "742efe76c70a8341",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2290,
        "y": 3520,
        "wires": []
    },
    {
        "id": "551329bf592fad61",
        "type": "set-defaults",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 930,
        "y": 3620,
        "wires": [
            [
                "aad349cac057622e"
            ]
        ]
    },
    {
        "id": "108fad53185784ae",
        "type": "subflow:56cb7422.e3d28c",
        "z": "eed7db33cbb15160",
        "name": "",
        "x": 2270,
        "y": 3560,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "534838d42d0a2913",
        "type": "link in",
        "z": "eed7db33cbb15160",
        "name": "15_In",
        "links": [
            "10f0a41e67b89b81"
        ],
        "x": 1875,
        "y": 3520,
        "wires": [
            [
                "742efe76c70a8341",
                "108fad53185784ae"
            ]
        ]
    },
    {
        "id": "530fb18b4a8a7653",
        "type": "link out",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "15_Out",
        "mode": "link",
        "links": [
            "274b7e10720a68e2"
        ],
        "x": 1695,
        "y": 3660,
        "wires": []
    },
    {
        "id": "aad349cac057622e",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "links": [
            "028dad41552f328b"
        ],
        "timeout": "30",
        "x": 1100,
        "y": 3620,
        "wires": [
            [
                "4d9e9559cddc1656"
            ]
        ]
    },
    {
        "id": "4d9e9559cddc1656",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1250,
        "y": 3620,
        "wires": [
            [
                "fcd9fdc63e697efb"
            ],
            [
                "fcd9fdc63e697efb"
            ],
            [
                "9d8068bde52995a8"
            ]
        ]
    },
    {
        "id": "fcd9fdc63e697efb",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1490,
        "y": 3600,
        "wires": [
            [
                "6a86c248c9dfff41"
            ]
        ]
    },
    {
        "id": "6a86c248c9dfff41",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1730,
        "y": 3600,
        "wires": []
    },
    {
        "id": "9d8068bde52995a8",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "links": [
            "668dac8d463bac50"
        ],
        "timeout": "30",
        "x": 1420,
        "y": 3640,
        "wires": [
            [
                "0e105558171a4d95"
            ]
        ]
    },
    {
        "id": "0e105558171a4d95",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "ee608b85f043d5c5",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1590,
        "y": 3640,
        "wires": [
            [
                "6a86c248c9dfff41"
            ],
            [
                "530fb18b4a8a7653"
            ]
        ]
    },
    {
        "id": "8045bc808b6bd428",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 350,
        "y": 2820,
        "wires": [
            [
                "a446fbc9b423996e"
            ]
        ]
    },
    {
        "id": "a446fbc9b423996e",
        "type": "set-defaults",
        "z": "eed7db33cbb15160",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 690,
        "y": 2820,
        "wires": [
            [
                "2b32a7d8e371f7a2"
            ]
        ]
    },
    {
        "id": "2b32a7d8e371f7a2",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "name": "",
        "links": [
            "028dad41552f328b"
        ],
        "timeout": "30",
        "x": 860,
        "y": 2820,
        "wires": [
            [
                "1c83e0f78e0a3e13"
            ]
        ]
    },
    {
        "id": "1c83e0f78e0a3e13",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1030,
        "y": 2820,
        "wires": [
            [
                "28e221bfd65d2406"
            ],
            [
                "28e221bfd65d2406"
            ],
            [
                "8072f036af9c3953"
            ]
        ]
    },
    {
        "id": "28e221bfd65d2406",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1290,
        "y": 2800,
        "wires": [
            [
                "53cb1c1bed12a2e3"
            ]
        ]
    },
    {
        "id": "8072f036af9c3953",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "links": [
            "668dac8d463bac50"
        ],
        "timeout": "30",
        "x": 1220,
        "y": 2840,
        "wires": [
            [
                "db352743e56fc61c"
            ]
        ]
    },
    {
        "id": "db352743e56fc61c",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 2840,
        "wires": [
            [
                "53cb1c1bed12a2e3"
            ],
            [
                "d5284e9b625c20c7"
            ]
        ]
    },
    {
        "id": "53cb1c1bed12a2e3",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1570,
        "y": 2820,
        "wires": []
    },
    {
        "id": "d5284e9b625c20c7",
        "type": "link out",
        "z": "eed7db33cbb15160",
        "g": "1f0558daa8aaf256",
        "name": "24_Out",
        "mode": "link",
        "links": [
            "1e8cfe7eb814a2e2"
        ],
        "x": 1545,
        "y": 2860,
        "wires": []
    },
    {
        "id": "178fb0f36470677d",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2270,
        "y": 2860,
        "wires": []
    },
    {
        "id": "bce455cbda6083b1",
        "type": "subflow:56cb7422.e3d28c",
        "z": "eed7db33cbb15160",
        "name": "",
        "x": 2250,
        "y": 2900,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "706a1d39def16eda",
        "type": "link in",
        "z": "eed7db33cbb15160",
        "name": "24_In",
        "links": [
            "b9042793cb5e0e4f"
        ],
        "x": 1735,
        "y": 2860,
        "wires": [
            [
                "178fb0f36470677d",
                "bce455cbda6083b1"
            ]
        ]
    },
    {
        "id": "a8b405fef50cd4ba",
        "type": "comment",
        "z": "eed7db33cbb15160",
        "g": "3072da72b5bc07c8",
        "name": "External Interface - LiveData - Request Properties",
        "info": "",
        "x": 370,
        "y": 3920,
        "wires": []
    },
    {
        "id": "5f1fd18f73d944a9",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "3072da72b5bc07c8",
        "name": "",
        "url": "/aasServer/subscriptions",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 4040,
        "wires": [
            [
                "be5cf3e322bd5103"
            ]
        ]
    },
    {
        "id": "b1c3a3161199728e",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "3072da72b5bc07c8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2430,
        "y": 4080,
        "wires": []
    },
    {
        "id": "8366887852b40b51",
        "type": "subflow:56cb7422.e3d28c",
        "z": "eed7db33cbb15160",
        "g": "3072da72b5bc07c8",
        "name": "",
        "env": [],
        "x": 2410,
        "y": 4120,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "98a5d8034f0579f9",
        "type": "link out",
        "z": "eed7db33cbb15160",
        "g": "3072da72b5bc07c8",
        "name": "22_Out",
        "mode": "link",
        "links": [
            "1489b45c1ef528c2"
        ],
        "x": 1875,
        "y": 4080,
        "wires": []
    },
    {
        "id": "8912034199b484e6",
        "type": "link in",
        "z": "eed7db33cbb15160",
        "g": "3072da72b5bc07c8",
        "name": "22_In",
        "links": [
            "049a96a511517cab"
        ],
        "x": 2135,
        "y": 4080,
        "wires": [
            [
                "b1c3a3161199728e",
                "8366887852b40b51"
            ]
        ]
    },
    {
        "id": "b581b7869b976cfa",
        "type": "unsafe-function",
        "z": "eed7db33cbb15160",
        "g": "3072da72b5bc07c8",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1670,
        "y": 4020,
        "wires": [
            [
                "e79024482467d339"
            ]
        ]
    },
    {
        "id": "0d64a180e4338849",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "3072da72b5bc07c8",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1430,
        "y": 4040,
        "wires": [
            [
                "b581b7869b976cfa"
            ],
            [
                "b581b7869b976cfa"
            ],
            [
                "9624cd73e024dcc7"
            ]
        ]
    },
    {
        "id": "be5cf3e322bd5103",
        "type": "set-defaults",
        "z": "eed7db33cbb15160",
        "g": "3072da72b5bc07c8",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 1010,
        "y": 4040,
        "wires": [
            [
                "56ffa6ce9db83ac0",
                "c6e91307b9a932f2"
            ]
        ]
    },
    {
        "id": "e79024482467d339",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "3072da72b5bc07c8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1910,
        "y": 4029,
        "wires": []
    },
    {
        "id": "f90841d2f742e8ff",
        "type": "switch",
        "z": "eed7db33cbb15160",
        "g": "3072da72b5bc07c8",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1770,
        "y": 4060,
        "wires": [
            [
                "e79024482467d339"
            ],
            [
                "98a5d8034f0579f9"
            ]
        ]
    },
    {
        "id": "56ffa6ce9db83ac0",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "3072da72b5bc07c8",
        "name": "",
        "links": [
            "028dad41552f328b"
        ],
        "timeout": "30",
        "x": 1200,
        "y": 4040,
        "wires": [
            [
                "0d64a180e4338849",
                "5023d15cce2db1a3"
            ]
        ]
    },
    {
        "id": "9624cd73e024dcc7",
        "type": "link call",
        "z": "eed7db33cbb15160",
        "g": "3072da72b5bc07c8",
        "name": "",
        "links": [
            "668dac8d463bac50"
        ],
        "timeout": "30",
        "x": 1600,
        "y": 4060,
        "wires": [
            [
                "f90841d2f742e8ff"
            ]
        ]
    },
    {
        "id": "a7385a594819f780",
        "type": "http in",
        "z": "eed7db33cbb15160",
        "g": "ddbb58547c33487a",
        "name": "",
        "url": "/aasServer/auth/discovery",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 290,
        "y": 260,
        "wires": [
            [
                "d2777a338729e163"
            ]
        ]
    },
    {
        "id": "b7bd5e3a48d17682",
        "type": "http response",
        "z": "eed7db33cbb15160",
        "g": "ddbb58547c33487a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1970,
        "y": 260,
        "wires": []
    },
    {
        "id": "d2777a338729e163",
        "type": "set-defaults",
        "z": "eed7db33cbb15160",
        "g": "ddbb58547c33487a",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 530,
        "y": 260,
        "wires": [
            [
                "691ee5978214d6c6",
                "03d15a94339afe3d"
            ]
        ]
    },
    {
        "id": "691ee5978214d6c6",
        "type": "debug",
        "z": "eed7db33cbb15160",
        "g": "ddbb58547c33487a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 180,
        "wires": []
    },
    {
        "id": "4e250d0aa934e8c5",
        "type": "subflow:56cb7422.e3d28c",
        "z": "eed7db33cbb15160",
        "g": "ddbb58547c33487a",
        "name": "",
        "env": [],
        "x": 1990,
        "y": 300,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "03d15a94339afe3d",
        "type": "link out",
        "z": "eed7db33cbb15160",
        "g": "ddbb58547c33487a",
        "name": "1_Out",
        "mode": "link",
        "links": [
            "9673e263e132408c"
        ],
        "x": 1105,
        "y": 260,
        "wires": []
    },
    {
        "id": "f573855b3884b433",
        "type": "link in",
        "z": "eed7db33cbb15160",
        "g": "ddbb58547c33487a",
        "name": "1_In",
        "links": [
            "2d978ec44fed2ce7"
        ],
        "x": 1585,
        "y": 260,
        "wires": [
            [
                "b7bd5e3a48d17682",
                "4e250d0aa934e8c5"
            ]
        ]
    },
    {
        "id": "5023d15cce2db1a3",
        "type": "debug",
        "z": "eed7db33cbb15160",
        "g": "3072da72b5bc07c8",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1420,
        "y": 3980,
        "wires": []
    },
    {
        "id": "c6e91307b9a932f2",
        "type": "debug",
        "z": "eed7db33cbb15160",
        "g": "3072da72b5bc07c8",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 3980,
        "wires": []
    },
    {
        "id": "fea14743f5068904",
        "type": "debug",
        "z": "292bbc7d396b4fee",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 260,
        "wires": []
    },
    {
        "id": "d9d29139d18e43d6",
        "type": "function",
        "z": "292bbc7d396b4fee",
        "name": "CheckRoleMapping",
        "func": "//get token details\nvar userClient = msg.payload.preferred_username;\nvar userRoles = [];\n//check Authenticated Organization\nvar securitySettings = context.global.get(env.get(\"SECURITY_SETTINGS_SUBMODEL_ID\"));\nvar submodelElements = securitySettings.submodelElements;\nfor(var element = 0; element < submodelElements.length; element++){\n    var submodelElement = submodelElements[element];\n    if(submodelElement.idShort == \"roleMapping\"){\n        var valueElements = submodelElement.value;\n        for(var valueElement = 0; valueElement < valueElements.length; valueElement++){\n            var roleMappingValues = valueElements[valueElement].value;\n            var roleMappingValueSize = 0;\n            var found = false;\n            var roleForUser = \"not_defined\";\n            for(var roleMappingValueElement = 0; roleMappingValueElement < roleMappingValues.length; roleMappingValueElement++){\n                if(roleMappingValues[roleMappingValueElement].idShort == \"subjects\"){\n                    roleMappingValueSize++;\n                    var subjectValues = roleMappingValues[roleMappingValueElement].value;\n                    for(var subjectValuesElement = 0; subjectValuesElement < subjectValues.length; subjectValuesElement++){\n                        var str = subjectValues[subjectValuesElement].value;\n                        if(str != \"\" && userClient.includes(str)){\n                            found = true;\n                            break;\n                        }\n                    }\n                } else {\n                    roleMappingValueSize++;\n                    roleForUser = roleMappingValues[roleMappingValueElement].value[0].idShort;\n                }\n                if((roleMappingValueSize == roleMappingValues.length)){\n                    if(found && roleForUser != \"not_defined\"){\n                        userRoles.push(roleForUser);\n                    }\n                    roleForUser = \"not_defined\";\n                    found = false;\n                    roleMappingValueSize = 0;\n                    \n                }\n            }\n        }\n    }\n}\nmsg.userRoles = userRoles;\nif(msg.userRoles.length > 0){\n    msg.statusCode = 200;\n} else {\n    msg.statusCode = 401;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nnode.status({text:\"CheckRoleMapping\"});",
        "finalize": "",
        "libs": [],
        "x": 1055,
        "y": 340,
        "wires": [
            [
                "f440fde12dbc695c",
                "054e56708ace311f"
            ]
        ],
        "l": false
    },
    {
        "id": "f440fde12dbc695c",
        "type": "debug",
        "z": "292bbc7d396b4fee",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 340,
        "wires": []
    },
    {
        "id": "6433a3b86e02d137",
        "type": "function",
        "z": "292bbc7d396b4fee",
        "name": "verify Server DefaultUserSubjectAttributes",
        "func": "var securityMetamodelSubmodel = context.global.get(\"SecurityMetaModelForServer\");\nvar securityMetamodelSubmodelElements = securityMetamodelSubmodel.submodelElements;\nfor(var element = 0; element < securityMetamodelSubmodelElements.length; element++){\n    if(securityMetamodelSubmodelElements[element].idShort == \"defaultUserSubjectAttributes\"){\n        var values = securityMetamodelSubmodelElements[element].value;\n        var supportedSubjectAttributes = [];\n        for(var valueElement = 0; valueElement < values.length; valueElement++){\n            var el = values[valueElement].idShort;\n            if(msg.userRoles.includes(el)){\n                supportedSubjectAttributes.push(el);\n            }\n        }\n        msg.userRoles = supportedSubjectAttributes;\n        return msg;\n    }\n}\nmsg.payload = \"Error submodel: defaultUserSubjectAttributes does not exist!!!\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nnode.status({text:\"verify Server DefaultUserSubjectAttributes\"});",
        "finalize": "",
        "libs": [],
        "x": 495,
        "y": 600,
        "wires": [
            [
                "0b9c9d4f592b418a"
            ]
        ],
        "l": false
    },
    {
        "id": "5c53e0498bd81701",
        "type": "switch",
        "z": "292bbc7d396b4fee",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 890,
        "y": 300,
        "wires": [
            [
                "9cc163cdbc1006a3",
                "054e56708ace311f"
            ],
            [
                "054e56708ace311f"
            ],
            [
                "d9d29139d18e43d6",
                "f021a259122bc923"
            ]
        ]
    },
    {
        "id": "f021a259122bc923",
        "type": "debug",
        "z": "292bbc7d396b4fee",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 360,
        "wires": []
    },
    {
        "id": "9cc163cdbc1006a3",
        "type": "debug",
        "z": "292bbc7d396b4fee",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 240,
        "wires": []
    },
    {
        "id": "27d385df6076de46",
        "type": "jsonata",
        "z": "292bbc7d396b4fee",
        "name": "jsonata",
        "property": "securityMetaModelJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 940,
        "y": 600,
        "wires": [
            [
                "cc8d6ebd5d98afcf"
            ]
        ]
    },
    {
        "id": "0b9c9d4f592b418a",
        "type": "function",
        "z": "292bbc7d396b4fee",
        "name": "prepare JSONata query",
        "func": "var securityMetaModel = context.global.get('SecurityMetaModelForServer');\n\nmsg.securityMetaModelJsonStr = JSON.stringify(securityMetaModel);\nmsg.payload = msg.securityMetaModelJsonStr;\n//context.global.set(\"test\", msg.securityMetaModelJsonStr);\n//msg.jsonata = \"$[identification.id='\" + ShellId +\"'].submodels.keys\";\nmsg.jsonata = \"submodelElements[idShort='accessControlPolicyPoints'].value[idShort='policyAdministrationPoint'].value[idShort='localAccessControl'].value[idShort='accessPermissionRules'].value\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nnode.status({text:\"prepare JSONata query\"});",
        "finalize": "",
        "libs": [],
        "x": 755,
        "y": 600,
        "wires": [
            [
                "27d385df6076de46"
            ]
        ],
        "l": false
    },
    {
        "id": "cc8d6ebd5d98afcf",
        "type": "function",
        "z": "292bbc7d396b4fee",
        "name": "process JSONata Result",
        "func": "if(msg.jsonataStatus == \"Success\"){\n    var accessPermissionRules = msg.jsonataResult;\n    var rulesToBeValidated = [];\n    for(var element = 0; element < accessPermissionRules.length; element++){\n        var rule = accessPermissionRules[element];\n        for(var elementValue = 0; elementValue < rule.value.length; elementValue++){\n            var subjectAttribute = rule.value[elementValue];\n            if(subjectAttribute.idShort == \"targetSubjectAttributes\"){\n                var userRoles = msg.userRoles;\n                for(var elementUserRole = 0; elementUserRole < userRoles.length; elementUserRole++){\n                    if(subjectAttribute.value[0].idShort == userRoles[elementUserRole]){\n                        rulesToBeValidated.push(rule);\n                    }\n                }\n            }\n        }\n    }\n    msg.jsonataResult = msg.jsonataResult.filter(function(val) {\n        return rulesToBeValidated.indexOf(val) != -1;\n    });\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nnode.status({text:\"process JSONata Result\"});",
        "finalize": "",
        "libs": [],
        "x": 1095,
        "y": 600,
        "wires": [
            [
                "9d846272096b0ea0"
            ]
        ],
        "l": false
    },
    {
        "id": "083b25bc8ae7f28a",
        "type": "inject",
        "z": "292bbc7d396b4fee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 100,
        "wires": [
            [
                "0ef538edcd68a113"
            ]
        ]
    },
    {
        "id": "0ef538edcd68a113",
        "type": "function",
        "z": "292bbc7d396b4fee",
        "name": "",
        "func": "var httpVerbs2CRUD = {};\n\nhttpVerbs2CRUD[\"POST\"] = \"CREATE\";\nhttpVerbs2CRUD[\"GET\"] = \"READ\";\nhttpVerbs2CRUD[\"PUT\"] = \"UPDATE\";\nhttpVerbs2CRUD[\"DELETE\"] = \"DELETE\";\n\ncontext.flow.set(\"httpVerbs2CRUD\", httpVerbs2CRUD);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "9d846272096b0ea0",
        "type": "function",
        "z": "292bbc7d396b4fee",
        "name": "process JSONata Result",
        "func": "var verify = function(request, object, permission){\n    for(var element = 0; element < permission.length; element++){\n        if(object == \"API:*\" || object.includes(request.url)){\n            if(permission[element].idShort == \"kindOfPermission\"){\n                if(permission[element].value == \"Deny\" || permission[element].value == \"NotApplicable\" || permission[element].value == \"Undefined\"){\n                    return false;\n                }\n            } else if(permission[element].idShort.includes(\"permission\")){\n                var propertyKeys = permission[element].value.keys;\n                for(var key = 0; key < propertyKeys.length; key++){\n                    if(propertyKeys[key].type == \"Property\"){\n                        var httpVerbs2CRUD = context.flow.get(\"httpVerbs2CRUD\");\n                        if(propertyKeys[key].value == httpVerbs2CRUD[request.method]){\n                            return true;\n                        }\n                    }\n                }\n            }\n        } else {\n            return false;\n        }\n    }\n}\n\nvar permissionsPerUser = msg.jsonataResult;\nfor(var permissionElement = 0; permissionElement < permissionsPerUser.length; permissionElement++){\n    var permissionsValue = permissionsPerUser[permissionElement].value;\n    for(var permissionsValueElement = 0; permissionsValueElement < permissionsValue.length; permissionsValueElement++){\n        if(permissionsValue[permissionsValueElement].idShort == \"permissionsPerObject\"){\n            var permissionsPerObjectValue = permissionsValue[permissionsValueElement].value;\n            for (var permissionsPerObjectValueElement = 0; permissionsPerObjectValueElement < permissionsPerObjectValue.length; permissionsPerObjectValueElement++){\n                var object = \"\";\n                var permission = \"\";\n                var permissionPerObjectValue = permissionsPerObjectValue[permissionsPerObjectValueElement].value;\n                for (var permissionPerObjectValueElement = 0; permissionPerObjectValueElement < permissionPerObjectValue.length; permissionPerObjectValueElement++){\n                    if(permissionPerObjectValue[permissionPerObjectValueElement].idShort == \"object\"){\n                        object = permissionPerObjectValue[permissionPerObjectValueElement].value;\n                    } else if (permissionPerObjectValue[permissionPerObjectValueElement].idShort == \"permission\"){\n                        permission = permissionPerObjectValue[permissionPerObjectValueElement].value;\n                    }\n                }\n                //Verify permisisons\n                var request = {url: msg.req.url, method: msg.req.method}\n                if(verify(request, object, permission)){\n                    msg.validatedPermission = true;\n                    return msg;\n                }\n            }\n        }\n    }\n}\nmsg.validatedPermission = false;\n                \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nnode.status({text:\"verify permission rules\"});",
        "finalize": "",
        "libs": [],
        "x": 1255,
        "y": 600,
        "wires": [
            [
                "1a09dcf6705a31c2"
            ]
        ],
        "l": false
    },
    {
        "id": "e08a0b04f9a9e880",
        "type": "debug",
        "z": "292bbc7d396b4fee",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 520,
        "wires": []
    },
    {
        "id": "1a09dcf6705a31c2",
        "type": "function",
        "z": "292bbc7d396b4fee",
        "name": "",
        "func": "if(msg.validatedPermission){\n    msg.statusCode = \"200\";\n} else {\n    msg.statusCode = \"403\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nnode.status({text:\"create msg status\"});",
        "finalize": "",
        "libs": [],
        "x": 1415,
        "y": 600,
        "wires": [
            [
                "e08a0b04f9a9e880",
                "3cea5e09c966659b"
            ]
        ],
        "l": false
    },
    {
        "id": "78fb45aa35654d5e",
        "type": "debug",
        "z": "292bbc7d396b4fee",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 520,
        "wires": []
    },
    {
        "id": "028dad41552f328b",
        "type": "link in",
        "z": "292bbc7d396b4fee",
        "name": "validateToken in",
        "links": [],
        "x": 265,
        "y": 380,
        "wires": [
            [
                "762eb442e398333e",
                "f7c82c68d3f205e6"
            ]
        ]
    },
    {
        "id": "4f3259efc003fe47",
        "type": "link out",
        "z": "292bbc7d396b4fee",
        "name": "validateToken out",
        "mode": "return",
        "links": [],
        "x": 1635,
        "y": 380,
        "wires": []
    },
    {
        "id": "668dac8d463bac50",
        "type": "link in",
        "z": "292bbc7d396b4fee",
        "name": "validateRoles in",
        "links": [],
        "x": 275,
        "y": 600,
        "wires": [
            [
                "78fb45aa35654d5e",
                "6433a3b86e02d137"
            ]
        ]
    },
    {
        "id": "3cea5e09c966659b",
        "type": "link out",
        "z": "292bbc7d396b4fee",
        "name": "validateRoles out",
        "mode": "return",
        "links": [],
        "x": 1675,
        "y": 600,
        "wires": []
    },
    {
        "id": "762eb442e398333e",
        "type": "function",
        "z": "292bbc7d396b4fee",
        "name": "Getting the token",
        "func": "if (typeof msg.req.headers.authorization != \"undefined\"){\n    var splitted = msg.req.headers.authorization.split(\" \");\n    msg.payload = splitted[1];\n    return [msg, null];\n}\nmsg.statusCode = 403;\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 380,
        "wires": [
            [
                "fea14743f5068904",
                "d6ae0c050d8d8e37"
            ],
            [
                "bd68b988bc67a857"
            ]
        ]
    },
    {
        "id": "d6ae0c050d8d8e37",
        "type": "jwt verify",
        "z": "292bbc7d396b4fee",
        "name": "",
        "alg": [
            "RS256"
        ],
        "jwkurl": "http://localhost:1880/aasServer/auth/discovery",
        "secret": "",
        "key": "",
        "signvar": "payload",
        "storetoken": "payload",
        "x": 650,
        "y": 300,
        "wires": [
            [
                "5c53e0498bd81701",
                "ef0f30b61068d703"
            ]
        ]
    },
    {
        "id": "a8caa975b0a2c5d5",
        "type": "catch",
        "z": "292bbc7d396b4fee",
        "name": "",
        "scope": [
            "d6ae0c050d8d8e37"
        ],
        "uncaught": false,
        "x": 770,
        "y": 240,
        "wires": [
            [
                "915b2be21fa8e1b8",
                "5c53e0498bd81701"
            ]
        ]
    },
    {
        "id": "915b2be21fa8e1b8",
        "type": "debug",
        "z": "292bbc7d396b4fee",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 240,
        "wires": []
    },
    {
        "id": "f7c82c68d3f205e6",
        "type": "debug",
        "z": "292bbc7d396b4fee",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 280,
        "wires": []
    },
    {
        "id": "ef0f30b61068d703",
        "type": "debug",
        "z": "292bbc7d396b4fee",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 360,
        "wires": []
    },
    {
        "id": "69b25adc4c3f1a48",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "1_In",
        "links": [
            "06f919cb0a0cc796",
            "a1a9bedc209c5d83"
        ],
        "x": 235,
        "y": 340,
        "wires": [
            [
                "3a79310e42dbad4c",
                "40817761befb05cb"
            ]
        ]
    },
    {
        "id": "65ac305fc8be2734",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "1_Out",
        "mode": "link",
        "links": [
            "091d8ff21e18d320"
        ],
        "x": 3115,
        "y": 340,
        "wires": []
    },
    {
        "id": "2751f3ca7f360e77",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "3_In",
        "links": [
            "acf520d7.dad7a",
            "2f77b324.8f4834",
            "43acf4e847f8dfd5"
        ],
        "x": 235,
        "y": 996,
        "wires": [
            [
                "9e689e66ae853e07"
            ]
        ]
    },
    {
        "id": "16e3f2dd6d817e49",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "3_Out",
        "links": [
            "327f8fdad6071ab6",
            "2c990cd.ab65f74"
        ],
        "x": 3135,
        "y": 996,
        "wires": []
    },
    {
        "id": "5619a3cc8a7cd0ce",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "4_In",
        "links": [
            "c34ae37f.12318",
            "3bb19eca.92cfd2",
            "f59ca19dd1265e4d"
        ],
        "x": 235,
        "y": 1068,
        "wires": [
            [
                "05d17a3703d39e87"
            ]
        ]
    },
    {
        "id": "7d6c849bc29f7872",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "4_Out",
        "links": [
            "30cacf373c9314be",
            "5304bdc8.6dda34"
        ],
        "x": 3135,
        "y": 1068,
        "wires": []
    },
    {
        "id": "05e49069e4cc8276",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "5_In",
        "links": [
            "bbf9bf7d.66354",
            "883acf9b.5a7a2",
            "0e2b6fea44f4aede"
        ],
        "x": 235,
        "y": 1216,
        "wires": [
            [
                "a6a53395234487fc"
            ]
        ]
    },
    {
        "id": "e858602356a8bbe3",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "5_Out",
        "links": [
            "f2578227d8ddbfd6"
        ],
        "x": 3135,
        "y": 1216,
        "wires": []
    },
    {
        "id": "746b85d4832cdbf9",
        "type": "switch",
        "z": "75985a5477ba24aa",
        "name": "IF_Error_Detected",
        "property": "payload.errors",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1630,
        "y": 1480,
        "wires": [
            [
                "ed546a28497e9667"
            ],
            [
                "35f2107c231258c2"
            ]
        ]
    },
    {
        "id": "bb30e76f08b1953a",
        "type": "unsafe-function",
        "z": "75985a5477ba24aa",
        "name": "preparingCheckingRules",
        "func": "var errors = [];\nmsg.payload = {};\nvar NOVAAS_Overall_St = context.global.get(\"NOVAAS_Overall_St\");\nif((NOVAAS_Overall_St === false))\n   {\n        errors.push(\"Asset Administration Shell not configured\");\n       \n   } \n \nmsg.payload.errors = errors;\n    \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 1480,
        "wires": [
            [
                "746b85d4832cdbf9",
                "e5d53ab517ef74c2"
            ]
        ]
    },
    {
        "id": "ed546a28497e9667",
        "type": "unsafe-function",
        "z": "75985a5477ba24aa",
        "name": "createOutputMsg",
        "func": "msg.statusCode = 200;\nmsg.payload = \"ok\";\nmsg.headers = {};\nmsg.headers['content-type'] = 'text/plain';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1890,
        "y": 1440,
        "wires": [
            [
                "bdbbee562ff96f15"
            ]
        ]
    },
    {
        "id": "35f2107c231258c2",
        "type": "unsafe-function",
        "z": "75985a5477ba24aa",
        "name": "createOutputMsg",
        "func": "msg.statusCode = 503;\nmsg.payload = msg.payload.errors;\nmsg.headers = {};\nmsg.headers['content-type'] = 'text/plain';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1890,
        "y": 1485,
        "wires": [
            [
                "bdbbee562ff96f15"
            ]
        ]
    },
    {
        "id": "c083a97a21d997de",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "6_In",
        "links": [
            "ed86c127fdb0e6c2"
        ],
        "x": 235,
        "y": 1480,
        "wires": [
            [
                "bb30e76f08b1953a"
            ]
        ]
    },
    {
        "id": "bdbbee562ff96f15",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "6_Out",
        "links": [
            "5a819a8542636e72"
        ],
        "x": 3135,
        "y": 1480,
        "wires": []
    },
    {
        "id": "ea5cfefea6c6744a",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 990,
        "y": 1560,
        "wires": []
    },
    {
        "id": "23f52b53b163c2cb",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "7_In",
        "links": [
            "2fa79041.17ff8",
            "17da0b60.6a2f3d",
            "fe18a52eca040bc3"
        ],
        "x": 235,
        "y": 1580,
        "wires": [
            [
                "ba74b6133467cb61"
            ]
        ]
    },
    {
        "id": "700785eef8b4b329",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "7_Out",
        "links": [
            "dfb22023b0d99566",
            "caa59972.e5a99"
        ],
        "x": 3135,
        "y": 1580,
        "wires": []
    },
    {
        "id": "75e632516ba69656",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 990,
        "y": 1820,
        "wires": []
    },
    {
        "id": "7b50cd644155c5fd",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "8_Out",
        "links": [
            "8e39befdad4eef79",
            "e2acf77b.dc7f68"
        ],
        "x": 3135,
        "y": 1840,
        "wires": []
    },
    {
        "id": "7caac457b06a4506",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "8_In",
        "links": [
            "b859d557.e838d8",
            "e2af5e8a.78213",
            "b86733db2b8aa6e2"
        ],
        "x": 235,
        "y": 1840,
        "wires": [
            [
                "308927235d0f0a02"
            ]
        ]
    },
    {
        "id": "e9eb5cfc22d54872",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1650,
        "y": 2000,
        "wires": []
    },
    {
        "id": "efead11b6356ea12",
        "type": "msg-router",
        "z": "75985a5477ba24aa",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2030,
        "y": 2040,
        "wires": [
            [
                "b9042793cb5e0e4f"
            ],
            [
                "2d37835612fd907a"
            ]
        ]
    },
    {
        "id": "b9042793cb5e0e4f",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "9_Out",
        "links": [
            "74e66928.59585",
            "706a1d39def16eda"
        ],
        "x": 3135,
        "y": 2040,
        "wires": []
    },
    {
        "id": "1e8cfe7eb814a2e2",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "9_In",
        "links": [
            "786ee408.b667c4",
            "d5284e9b625c20c7"
        ],
        "x": 235,
        "y": 2040,
        "wires": [
            [
                "488d6f0c6c5ebe8e"
            ]
        ]
    },
    {
        "id": "07cceddfb643f00f",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1670,
        "y": 2080,
        "wires": []
    },
    {
        "id": "2d2685496d73558d",
        "type": "msg-router",
        "z": "75985a5477ba24aa",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2030,
        "y": 2120,
        "wires": [
            [
                "63ed4fad3a0e3106"
            ],
            [
                "1d1157358f0d4373"
            ]
        ]
    },
    {
        "id": "63ed4fad3a0e3106",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "10_Out",
        "links": [
            "5a8f7d4734233d71",
            "d5e2a42c.8dffb8"
        ],
        "x": 3135,
        "y": 2120,
        "wires": []
    },
    {
        "id": "f15504bca78f54a3",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "10_In",
        "links": [
            "969e8410e6e17d20",
            "b636e41a.e74f28"
        ],
        "x": 235,
        "y": 2120,
        "wires": [
            [
                "99ee85a5c0325339"
            ]
        ]
    },
    {
        "id": "952bb83e6db28811",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1670,
        "y": 2200,
        "wires": []
    },
    {
        "id": "e13a09a1f6d1e660",
        "type": "msg-router",
        "z": "75985a5477ba24aa",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2030,
        "y": 2260,
        "wires": [
            [
                "77f597f89a0c5eb4"
            ],
            [
                "64c80d04abf73dd7"
            ]
        ]
    },
    {
        "id": "77f597f89a0c5eb4",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "11_Out",
        "links": [
            "d932c8d.cf79c38",
            "51031ae7.2a3aa4",
            "ae51a91b4518f134"
        ],
        "x": 3135,
        "y": 2238,
        "wires": []
    },
    {
        "id": "509b047804c68343",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "11_In",
        "links": [
            "d50a98f1.b0b938",
            "1e00e0ac.7b7297",
            "ba11767adf90354d"
        ],
        "x": 235,
        "y": 2258,
        "wires": [
            [
                "b161791335f912c0"
            ]
        ]
    },
    {
        "id": "7abea6cc0bc7809e",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1790,
        "y": 2360,
        "wires": []
    },
    {
        "id": "4a86dc0c1a938c8a",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "12_Out",
        "links": [
            "59e805fe43604c70",
            "c659a5d0.7355b8"
        ],
        "x": 3115,
        "y": 2400,
        "wires": []
    },
    {
        "id": "4c39d757e5235f53",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "12_In",
        "links": [
            "69fd7487a0bedd96",
            "a0c9ccc4.12d298"
        ],
        "x": 235,
        "y": 2400,
        "wires": [
            [
                "8e95ebca930cd738"
            ]
        ]
    },
    {
        "id": "3a13519f6d9442a3",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1730,
        "y": 2520,
        "wires": []
    },
    {
        "id": "62c87038f86e6c77",
        "type": "msg-router",
        "z": "75985a5477ba24aa",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2030,
        "y": 2580,
        "wires": [
            [
                "130852b18fec348b"
            ],
            [
                "0641b68da24b78d3"
            ]
        ]
    },
    {
        "id": "130852b18fec348b",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "13_Out",
        "links": [
            "bf8cd90c953031f4",
            "bcb152e2.608288"
        ],
        "x": 3115,
        "y": 2560,
        "wires": []
    },
    {
        "id": "7658d91718d1c5fb",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "13_In",
        "links": [
            "6f081828f0ec6778",
            "df1cae54.a6ed38"
        ],
        "x": 235,
        "y": 2580,
        "wires": [
            [
                "42a6b527b557a24e"
            ]
        ]
    },
    {
        "id": "0e199b2d5278ca8c",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1730,
        "y": 2700,
        "wires": []
    },
    {
        "id": "92a3111cb0ee91be",
        "type": "msg-router",
        "z": "75985a5477ba24aa",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2030,
        "y": 2740,
        "wires": [
            [
                "3f760ab2ca42b99c"
            ],
            [
                "3cb977d7bc3f637f"
            ]
        ]
    },
    {
        "id": "3f760ab2ca42b99c",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "14_Out",
        "links": [
            "e1f1bd16b5b68a20",
            "b6041910.8e7b8"
        ],
        "x": 3115,
        "y": 2720,
        "wires": []
    },
    {
        "id": "fd1e4f235d5a4f9d",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "14_In",
        "links": [
            "ba40305cbcbba997",
            "e2cbc28f.14c87"
        ],
        "x": 235,
        "y": 2740,
        "wires": [
            [
                "023af9c3c9c4c2a5"
            ]
        ]
    },
    {
        "id": "a9c34f34501c6dc7",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1730,
        "y": 2860,
        "wires": []
    },
    {
        "id": "8371ecdd85eac3f8",
        "type": "msg-router",
        "z": "75985a5477ba24aa",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2030,
        "y": 2920,
        "wires": [
            [
                "10f0a41e67b89b81"
            ],
            [
                "6c74104b30ee1e23"
            ]
        ]
    },
    {
        "id": "10f0a41e67b89b81",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "15_Out",
        "mode": "link",
        "links": [
            "534838d42d0a2913"
        ],
        "x": 3115,
        "y": 2900,
        "wires": []
    },
    {
        "id": "274b7e10720a68e2",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "15_In",
        "links": [
            "530fb18b4a8a7653"
        ],
        "x": 235,
        "y": 2920,
        "wires": [
            [
                "eeccf61946618278"
            ]
        ]
    },
    {
        "id": "e5d53ab517ef74c2",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1230,
        "y": 1440,
        "wires": []
    },
    {
        "id": "934e9405d63e07b4",
        "type": "comment",
        "z": "75985a5477ba24aa",
        "name": "AAS Rosource Monitoring - Component Manger",
        "info": "",
        "x": 600,
        "y": 4623,
        "wires": []
    },
    {
        "id": "3a79310e42dbad4c",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 550,
        "y": 320,
        "wires": []
    },
    {
        "id": "8ac3c81899b445fa",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "g": "1b283c783c77a415",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 750,
        "y": 4343,
        "wires": []
    },
    {
        "id": "61bc1006bf5561e8",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1170,
        "y": 300,
        "wires": []
    },
    {
        "id": "5c93986fd9c7d8c0",
        "type": "comment",
        "z": "75985a5477ba24aa",
        "g": "1b283c783c77a415",
        "name": "Interaction with AAS - NBI",
        "info": "",
        "x": 530,
        "y": 4283,
        "wires": []
    },
    {
        "id": "3ee230f96969f778",
        "type": "comment",
        "z": "75985a5477ba24aa",
        "g": "abdf379e4293a040",
        "name": "Interaction with AAS - SBI",
        "info": "",
        "x": 390,
        "y": 3580,
        "wires": []
    },
    {
        "id": "be7a0f99521f4f11",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "18_In",
        "links": [
            "48ef191e.d28c98",
            "655d81f8ce3006f5"
        ],
        "x": 235,
        "y": 4183,
        "wires": [
            [
                "065591aceff8e10a"
            ]
        ]
    },
    {
        "id": "76bd28f2ddc9d189",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "18_Out",
        "links": [
            "e7a9e126.1cef",
            "3a1cecce2b2bfbe1"
        ],
        "x": 3115,
        "y": 4183,
        "wires": []
    },
    {
        "id": "6c96c5cbee86650b",
        "type": "inject",
        "z": "75985a5477ba24aa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 40,
        "wires": [
            [
                "75344bb9d5653cce"
            ]
        ]
    },
    {
        "id": "75344bb9d5653cce",
        "type": "unsafe-function",
        "z": "75985a5477ba24aa",
        "name": "Set Global Context",
        "func": "\nvar os = context.global.get('os');\nvar path = context.global.get('path');\nvar fs = context.global.get('fs');\n\ncontext.global.set(\"Drivers\", []);\n\nvar interfaces = os.networkInterfaces();\nvar addresses = [];\nmsg.interfaces = interfaces;\nfor (var k in interfaces) {\n    for (var k2 = 0; k2 < interfaces[k].length; k2++) {\n        var address = interfaces[k][k2];\n        msg.address = address;\n        if (address.family === 'IPv4' && !address.internal) {\n            addresses.push(address.address);\n        }\n    }\n}\n\nvar host = addresses[0];\nvar port = context.global.get('uiPort');\n\n\ncontext.global.set('namespace',\"http://\" + host + \":\" + port);\n\n                   \n//Retrieving the home directory\nvar homedirectory = context.global.get('staticDocs');\nvar asmodelfolderRef = \"aasx/_rels/aasx-origin.rels\";\n\nvar modelDirRef = path.join(homedirectory, asmodelfolderRef);\ncontext.global.set(\"ModelDirRef\", modelDirRef);\nmsg.filename = modelDirRef;\n\nvar msg2 = {};\nvar thumbnailRef = \"_rels/.rels\";\n\nvar thumbnailDirRef = path.join(homedirectory, thumbnailRef);\ncontext.global.set(\"AssetThumbnailRef\", thumbnailDirRef);\nmsg2.filename = thumbnailDirRef;\n\n\n\n\nvar novaasIdentifier = context.global.get(\"AASIdentifier\") || \"\";\nif(novaasIdentifier === \"\"){\n    novaasIdentifier = \"http://novaas@\" + host + \":\" + port + \"/aas\";\n}\n\ncontext.global.set(\"AASIdentifier\", novaasIdentifier);\n\nreturn [msg, msg2];",
        "outputs": 2,
        "noerr": 0,
        "x": 630,
        "y": 40,
        "wires": [
            [
                "9c24f0bffd139358"
            ],
            [
                "9eaa88dc9ea3dde2"
            ]
        ]
    },
    {
        "id": "0cd05f79110508bf",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1650,
        "y": 20,
        "wires": []
    },
    {
        "id": "1fad318dc73b96af",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "19_In",
        "links": [
            "23e7fb8f.11fddc",
            "363e4381be198141"
        ],
        "x": 235,
        "y": 1136,
        "wires": [
            [
                "35df8e132fa417e2"
            ]
        ]
    },
    {
        "id": "95617cac0ab95078",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "19_Out",
        "links": [
            "3461fa42c5e8a4df"
        ],
        "x": 3135,
        "y": 1136,
        "wires": []
    },
    {
        "id": "cf4b0c21006b2d20",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 950,
        "y": 1300,
        "wires": []
    },
    {
        "id": "ad0fe0d1d2eb8a52",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "20_In",
        "links": [
            "6e70f1cef0eec522"
        ],
        "x": 235,
        "y": 1320,
        "wires": [
            [
                "e5849cb5b9b140aa"
            ]
        ]
    },
    {
        "id": "694498192c48fe2e",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "20_Out",
        "links": [
            "0fb6ffc99bc3c418"
        ],
        "x": 3135,
        "y": 1340,
        "wires": []
    },
    {
        "id": "8cfda92b812c5445",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1710,
        "y": 1720,
        "wires": []
    },
    {
        "id": "fddf6602c8f94113",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "21_In",
        "links": [
            "727480a5.4236c",
            "2a49545b9d945e4b"
        ],
        "x": 225,
        "y": 1740,
        "wires": [
            [
                "e2178b52617b3c0a"
            ]
        ]
    },
    {
        "id": "2af11f1b5219d380",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "21_Out",
        "links": [
            "f291d1d876934273"
        ],
        "x": 3135,
        "y": 1740,
        "wires": []
    },
    {
        "id": "1489b45c1ef528c2",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "g": "abdf379e4293a040",
        "name": "22_In",
        "links": [
            "98a5d8034f0579f9",
            "400d9646.413fe8"
        ],
        "x": 238,
        "y": 3900,
        "wires": [
            [
                "482403047fcf00cd"
            ]
        ]
    },
    {
        "id": "049a96a511517cab",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "g": "abdf379e4293a040",
        "name": "22_Out",
        "links": [
            "8912034199b484e6",
            "7acbb909.02b518"
        ],
        "x": 3114,
        "y": 3900,
        "wires": []
    },
    {
        "id": "8c3f42ffe492f7e3",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "g": "1b283c783c77a415",
        "name": "CallbackIn",
        "links": [
            "e05fcd52.be3ca8",
            "84b54255.d93878",
            "e660318fd192afea"
        ],
        "x": 235,
        "y": 4363,
        "wires": [
            [
                "8ac3c81899b445fa",
                "b93ce41f45d38e7c"
            ]
        ]
    },
    {
        "id": "48a2a663e58ed400",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "g": "1b283c783c77a415",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2370,
        "y": 4363,
        "wires": []
    },
    {
        "id": "ee990a7f5736a5fe",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "g": "abdf379e4293a040",
        "name": "status_SBI_In",
        "links": [
            "796fdeb5.8f68b8",
            "898d8bc.861cc78",
            "9b6b87ad61de2a87"
        ],
        "x": 235,
        "y": 4060,
        "wires": [
            [
                "3522f329ee671e38"
            ]
        ]
    },
    {
        "id": "a41694bb1a9053b3",
        "type": "unsafe-function",
        "z": "75985a5477ba24aa",
        "g": "abdf379e4293a040",
        "name": "check AAS Status",
        "func": "var manifest = msg.payload;\nif(manifest != \"\" && manifest.submodels.length > 0){\n    var statusCheckSBI = context.global.get(\"statusCheckSBI\");\n    if(statusCheckSBI.connected){\n        if(statusCheckSBI.nrOfDataSources > 0){\n            if((typeof context.global.get('namespace') !== \"undefined\")){\n                context.global.set(\"NOVAAS_Overall_Status\", \"ok\");\n                msg.payload = context.global.get(\"NOVAAS_Overall_Status\");\n                return msg;\n            }\n        }\n    }\n}\ncontext.global.set(\"NOVAAS_Overall_Status\", \"not_ok\");\nmsg.payload = context.global.get(\"NOVAAS_Overall_Status\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 4060,
        "wires": [
            [
                "92efeed3ca645aa5"
            ]
        ]
    },
    {
        "id": "ab392cc9de431c12",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "g": "abdf379e4293a040",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 4020,
        "wires": []
    },
    {
        "id": "92efeed3ca645aa5",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "g": "abdf379e4293a040",
        "name": "NOVAAS_status_UI_out",
        "links": [
            "b3d953ee.708f1",
            "831fbce5bb893554"
        ],
        "x": 3115,
        "y": 4060,
        "wires": []
    },
    {
        "id": "e257b86303d14612",
        "type": "OS",
        "z": "75985a5477ba24aa",
        "name": "",
        "x": 1850,
        "y": 4900,
        "wires": [
            [
                "84d4dd212201c543",
                "178be159227f2b4d"
            ]
        ]
    },
    {
        "id": "db3c9cac5182eb69",
        "type": "inject",
        "z": "75985a5477ba24aa",
        "name": "Test",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1650,
        "y": 4800,
        "wires": [
            [
                "e257b86303d14612"
            ]
        ]
    },
    {
        "id": "84d4dd212201c543",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2240,
        "y": 4820,
        "wires": []
    },
    {
        "id": "32cdeae632f7273c",
        "type": "unsafe-function",
        "z": "75985a5477ba24aa",
        "name": "set Model Filepath",
        "func": "var modelFilePath = context.global.get(\"staticDocs\").slice(0, -1) + msg.payload.Relationships.Relationship[0].$.Target;\ncontext.global.set(\"ModelFilePath\", modelFilePath);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1410,
        "y": 40,
        "wires": [
            [
                "0cd05f79110508bf",
                "a1a9bedc209c5d83"
            ]
        ]
    },
    {
        "id": "9c24f0bffd139358",
        "type": "file in",
        "z": "75985a5477ba24aa",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1070,
        "y": 40,
        "wires": [
            [
                "2d5a6b568f67014f"
            ]
        ]
    },
    {
        "id": "2d5a6b568f67014f",
        "type": "xml",
        "z": "75985a5477ba24aa",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1210,
        "y": 40,
        "wires": [
            [
                "32cdeae632f7273c"
            ]
        ]
    },
    {
        "id": "9eaa88dc9ea3dde2",
        "type": "file in",
        "z": "75985a5477ba24aa",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1070,
        "y": 100,
        "wires": [
            [
                "c83003df6926ab3a"
            ]
        ]
    },
    {
        "id": "c83003df6926ab3a",
        "type": "xml",
        "z": "75985a5477ba24aa",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1210,
        "y": 100,
        "wires": [
            [
                "d7560b24f7e41acd"
            ]
        ]
    },
    {
        "id": "d7560b24f7e41acd",
        "type": "unsafe-function",
        "z": "75985a5477ba24aa",
        "name": "set Thumbnail Filepath",
        "func": "var thumbnailFilePath = msg.payload.Relationships.Relationship[1].$.Target;\ncontext.global.set(\"ThumbnailFilePath\", thumbnailFilePath);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1420,
        "y": 100,
        "wires": [
            [
                "f2feb610281edc4d"
            ]
        ]
    },
    {
        "id": "f2feb610281edc4d",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1630,
        "y": 100,
        "wires": []
    },
    {
        "id": "065591aceff8e10a",
        "type": "unsafe-function",
        "z": "75985a5477ba24aa",
        "name": "PrepareOutput",
        "func": "//msg.filename = msg.payload.value;\n//msg.staticDocs = \"/home/gido/.node-red-novaas/\";\nvar fn = msg.req.params.fn;\n//msg.filename = context.global.get('staticDocs') + \"aasx/Document/\" + fn;\nmsg.payload = \"-name\" + \" \" + fn;\n//msg.payload = \"aasx/4830902_DPDM-6-15-PA---_0_.pdf\";\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 980,
        "y": 4180,
        "wires": [
            [
                "e44fcdd2ec737d95"
            ]
        ]
    },
    {
        "id": "5dc55a7e79eb994d",
        "type": "file in",
        "z": "75985a5477ba24aa",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1850,
        "y": 4160,
        "wires": [
            [
                "76bd28f2ddc9d189"
            ]
        ]
    },
    {
        "id": "4205793a390032d8",
        "type": "change",
        "z": "75985a5477ba24aa",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1670,
        "y": 4160,
        "wires": [
            [
                "5dc55a7e79eb994d"
            ]
        ]
    },
    {
        "id": "e44fcdd2ec737d95",
        "type": "exec",
        "z": "75985a5477ba24aa",
        "command": "find",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1250,
        "y": 4180,
        "wires": [
            [
                "173ac5b14b1fef5e",
                "0f5b10f1fdd1cc9f"
            ],
            [],
            []
        ]
    },
    {
        "id": "173ac5b14b1fef5e",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 4140,
        "wires": []
    },
    {
        "id": "0f5b10f1fdd1cc9f",
        "type": "unsafe-function",
        "z": "75985a5477ba24aa",
        "name": "PrepareOutput",
        "func": "//msg.filename = msg.payload.value;\n//msg.staticDocs = \"/home/gido/.node-red-novaas/\";\nif(msg.payload != \"\"){\n    msg.filename = msg.payload;\n    //msg.payload = \"aasx/4830902_DPDM-6-15-PA---_0_.pdf\";\n    return [msg, null];\n} else {\n    msg.payload = \"document Not found\"\n    return [null, msg];\n}\n\n\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "x": 1480,
        "y": 4180,
        "wires": [
            [
                "4205793a390032d8"
            ],
            [
                "76bd28f2ddc9d189"
            ]
        ]
    },
    {
        "id": "a1a9bedc209c5d83",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "init_model_path_out",
        "mode": "link",
        "links": [
            "69b25adc4c3f1a48"
        ],
        "x": 1815,
        "y": 40,
        "wires": []
    },
    {
        "id": "40817761befb05cb",
        "type": "unsafe-function",
        "z": "75985a5477ba24aa",
        "name": "Read File ",
        "func": "var fs = context.global.get('fs');\nvar content = \"\";\nfs.readFile(context.global.get('ModelFilePath'), \"utf8\", function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    content = data;\n\n    // Invoke the next step here however you like\n    //console.log(content);   // Put all of the code here (not the best solution)\n    processFile();          // Or put the next step in a function and invoke it\n});\n\nfunction processFile() {\n    msg.payload = content;\n    node.send(msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 340,
        "wires": [
            [
                "61bc1006bf5561e8",
                "8c94c52e4b14b83c"
            ]
        ]
    },
    {
        "id": "d6062c2d4af1614b",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "25b6bff18045b93f"
        ],
        "x": 2720,
        "y": 400,
        "wires": [],
        "l": true
    },
    {
        "id": "2d37835612fd907a",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "25b6bff18045b93f"
        ],
        "x": 2320,
        "y": 2060,
        "wires": [],
        "l": true
    },
    {
        "id": "1d1157358f0d4373",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "25b6bff18045b93f"
        ],
        "x": 2340,
        "y": 2140,
        "wires": [],
        "l": true
    },
    {
        "id": "64c80d04abf73dd7",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "25b6bff18045b93f"
        ],
        "x": 2340,
        "y": 2280,
        "wires": [],
        "l": true
    },
    {
        "id": "0641b68da24b78d3",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "25b6bff18045b93f"
        ],
        "x": 2340,
        "y": 2600,
        "wires": [],
        "l": true
    },
    {
        "id": "3cb977d7bc3f637f",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "25b6bff18045b93f"
        ],
        "x": 2340,
        "y": 2760,
        "wires": [],
        "l": true
    },
    {
        "id": "6c74104b30ee1e23",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "25b6bff18045b93f"
        ],
        "x": 2340,
        "y": 2940,
        "wires": [],
        "l": true
    },
    {
        "id": "8c94c52e4b14b83c",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "name": "",
        "links": [
            "1cb697e136105270"
        ],
        "timeout": "30",
        "x": 1400,
        "y": 340,
        "wires": [
            [
                "65ac305fc8be2734",
                "d6062c2d4af1614b"
            ]
        ]
    },
    {
        "id": "9e689e66ae853e07",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "name": "",
        "links": [
            "4b45b982539cccba"
        ],
        "timeout": "30",
        "x": 1480,
        "y": 1000,
        "wires": [
            [
                "16e3f2dd6d817e49"
            ]
        ]
    },
    {
        "id": "05d17a3703d39e87",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "name": "",
        "links": [
            "0d2ab6d7b02c236e"
        ],
        "timeout": "30",
        "x": 1480,
        "y": 1060,
        "wires": [
            [
                "7d6c849bc29f7872"
            ]
        ]
    },
    {
        "id": "35df8e132fa417e2",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "name": "",
        "links": [
            "b14c0b0499bc8ac6"
        ],
        "timeout": "30",
        "x": 1480,
        "y": 1140,
        "wires": [
            [
                "14932610de2f9eca"
            ]
        ]
    },
    {
        "id": "a6a53395234487fc",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "name": "",
        "links": [
            "f46078f9931be277"
        ],
        "timeout": "30",
        "x": 1500,
        "y": 1220,
        "wires": [
            [
                "bfbb66b97dbf0830"
            ]
        ]
    },
    {
        "id": "e5849cb5b9b140aa",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "name": "",
        "links": [
            "2c06f0799c94d6b9"
        ],
        "timeout": "30",
        "x": 790,
        "y": 1320,
        "wires": [
            [
                "cf4b0c21006b2d20",
                "7540b688d1ccfbd8"
            ]
        ]
    },
    {
        "id": "ba74b6133467cb61",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "name": "",
        "links": [
            "3eb3764a0a0f9847"
        ],
        "timeout": "30",
        "x": 830,
        "y": 1580,
        "wires": [
            [
                "ea5cfefea6c6744a",
                "d57f58bc77ffcb8b"
            ]
        ]
    },
    {
        "id": "e2178b52617b3c0a",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "name": "",
        "links": [
            "1e0feb88457467a8"
        ],
        "timeout": "30",
        "x": 1520,
        "y": 1740,
        "wires": [
            [
                "8cfda92b812c5445",
                "90b5ad6e4fb90166"
            ]
        ]
    },
    {
        "id": "308927235d0f0a02",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "name": "",
        "links": [
            "384ba421ea747453"
        ],
        "timeout": "30",
        "x": 830,
        "y": 1840,
        "wires": [
            [
                "75e632516ba69656",
                "de98fa9db5e7edf4"
            ]
        ]
    },
    {
        "id": "99ee85a5c0325339",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "name": "",
        "links": [
            "84ff9edf08617db5"
        ],
        "timeout": "30",
        "x": 1520,
        "y": 2120,
        "wires": [
            [
                "07cceddfb643f00f",
                "2d2685496d73558d"
            ]
        ]
    },
    {
        "id": "488d6f0c6c5ebe8e",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "",
        "func": "var headers = msg.req.headers;\nif (headers[\"content-type\"] == \"application/json\") {\n        return [msg, null];\n} else {\n    msg.statusCode = 400;\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 2040,
        "wires": [
            [
                "fc1d0032aa9b948e"
            ],
            [
                "efead11b6356ea12"
            ]
        ]
    },
    {
        "id": "fc1d0032aa9b948e",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "name": "",
        "links": [
            "1609d819e97d5cf2"
        ],
        "timeout": "30",
        "x": 1480,
        "y": 2020,
        "wires": [
            [
                "e9eb5cfc22d54872",
                "efead11b6356ea12"
            ]
        ]
    },
    {
        "id": "b161791335f912c0",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "",
        "func": "var headers = msg.req.headers;\nif (headers[\"content-type\"] == \"application/json\") {\n        return [msg, null];\n} else {\n    msg.statusCode = 400;\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 2260,
        "wires": [
            [
                "a136e312e23dc560"
            ],
            [
                "e13a09a1f6d1e660"
            ]
        ]
    },
    {
        "id": "a136e312e23dc560",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "name": "",
        "links": [
            "1a5d5da5082c9a4b"
        ],
        "timeout": "30",
        "x": 1500,
        "y": 2220,
        "wires": [
            [
                "952bb83e6db28811",
                "e13a09a1f6d1e660"
            ]
        ]
    },
    {
        "id": "42a6b527b557a24e",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "",
        "func": "var headers = msg.req.headers;\nif (headers[\"content-type\"] == \"application/json\") {\n        return [msg, null];\n} else {\n    msg.statusCode = 400;\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 2580,
        "wires": [
            [
                "d2803c6b974c1feb"
            ],
            [
                "62c87038f86e6c77"
            ]
        ]
    },
    {
        "id": "d2803c6b974c1feb",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "name": "",
        "links": [
            "56ca63915cd6f36a"
        ],
        "timeout": "30",
        "x": 1540,
        "y": 2540,
        "wires": [
            [
                "3a13519f6d9442a3",
                "62c87038f86e6c77"
            ]
        ]
    },
    {
        "id": "023af9c3c9c4c2a5",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "name": "",
        "links": [
            "d484f5d1ace6cd5d"
        ],
        "timeout": "30",
        "x": 1560,
        "y": 2740,
        "wires": [
            [
                "0e199b2d5278ca8c",
                "92a3111cb0ee91be"
            ]
        ]
    },
    {
        "id": "eeccf61946618278",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "",
        "func": "var headers = msg.req.headers;\nif (headers[\"content-type\"] == \"application/json\") {\n        return [msg, null];\n} else {\n    msg.statusCode = 400;\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2920,
        "wires": [
            [
                "db35f37e998005a3"
            ],
            [
                "8371ecdd85eac3f8"
            ]
        ]
    },
    {
        "id": "db35f37e998005a3",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "name": "",
        "links": [
            "7c3cc231d7bef553"
        ],
        "timeout": "30",
        "x": 1560,
        "y": 2900,
        "wires": [
            [
                "a9c34f34501c6dc7",
                "8371ecdd85eac3f8"
            ]
        ]
    },
    {
        "id": "3522f329ee671e38",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "g": "abdf379e4293a040",
        "name": "",
        "links": [
            "0d2ab6d7b02c236e"
        ],
        "timeout": "30",
        "x": 700,
        "y": 4060,
        "wires": [
            [
                "ab392cc9de431c12",
                "a41694bb1a9053b3"
            ]
        ]
    },
    {
        "id": "482403047fcf00cd",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "g": "abdf379e4293a040",
        "name": "",
        "links": [
            "80a1dd75dff93a47"
        ],
        "timeout": "30",
        "x": 1640,
        "y": 3900,
        "wires": [
            [
                "049a96a511517cab"
            ]
        ]
    },
    {
        "id": "b93ce41f45d38e7c",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "g": "1b283c783c77a415",
        "name": "",
        "links": [
            "845847eeac0f59c6"
        ],
        "timeout": "30",
        "x": 1400,
        "y": 4360,
        "wires": [
            [
                "48a2a663e58ed400"
            ]
        ]
    },
    {
        "id": "b9a62249e001d9e7",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "OSsysDscr in",
        "links": [],
        "x": 735,
        "y": 4900,
        "wires": [
            [
                "e257b86303d14612"
            ]
        ]
    },
    {
        "id": "178be159227f2b4d",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "OSsysDscr out",
        "mode": "return",
        "links": [],
        "x": 2795,
        "y": 4900,
        "wires": []
    },
    {
        "id": "8e95ebca930cd738",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "name": "",
        "links": [
            "9c082c01ee94eb9b"
        ],
        "timeout": "30",
        "x": 1360,
        "y": 2400,
        "wires": [
            [
                "7abea6cc0bc7809e",
                "9659f4de2d5a533f"
            ]
        ]
    },
    {
        "id": "091d8ff21e18d320",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "authDiscovery_In",
        "links": [
            "207077f5a8ec039d",
            "65ac305fc8be2734"
        ],
        "x": 225,
        "y": 660,
        "wires": [
            [
                "4150c548180e5fd8"
            ]
        ]
    },
    {
        "id": "4150c548180e5fd8",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "",
        "func": "var securityShellId = env.get(\"SECURITY_SHELL_ID\");\n\nvar securityMetamodelSubmodelId = env.get(\"SECURITY_METAMODEL_SUBMODEL_ID\");\n\nmsg.req = {params: {aasid: securityShellId, \n                    id: securityMetamodelSubmodelId\n}}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 660,
        "wires": [
            [
                "559cd99ee9a6da5a",
                "8b7a957834a88d1a"
            ]
        ]
    },
    {
        "id": "559cd99ee9a6da5a",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 600,
        "wires": []
    },
    {
        "id": "6b4aee717b31aa75",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "",
        "func": "if(msg.statusCode == \"200\"){\n    var submodel = msg.payload;\n    context.global.set(submodel.idShort, submodel);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 830,
        "y": 660,
        "wires": [
            [
                "b0e241e64343e82e"
            ]
        ]
    },
    {
        "id": "693383e4bfab630a",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 600,
        "wires": []
    },
    {
        "id": "b0e241e64343e82e",
        "type": "switch",
        "z": "75985a5477ba24aa",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1000,
        "y": 660,
        "wires": [
            [
                "8c61cbe1c28a8f5e"
            ],
            [
                "419327fec910c194"
            ]
        ]
    },
    {
        "id": "8c61cbe1c28a8f5e",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "",
        "func": "var securityShellId = env.get(\"SECURITY_SHELL_ID\");\n\nvar securitySettingsSubmodelId = env.get(\"SECURITY_SETTINGS_SUBMODEL_ID\");\n\nmsg.req = {params: {aasid: securityShellId, \n                    id: securitySettingsSubmodelId\n}}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1170,
        "y": 620,
        "wires": [
            [
                "cc457cc8b6b009d2"
            ]
        ]
    },
    {
        "id": "a8b8c8e20dae3718",
        "type": "http request",
        "z": "75985a5477ba24aa",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2280,
        "y": 600,
        "wires": [
            [
                "6d33ba5cab0caa48",
                "419327fec910c194"
            ]
        ]
    },
    {
        "id": "262dd8b1f591d4fc",
        "type": "switch",
        "z": "75985a5477ba24aa",
        "name": "",
        "property": "url",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1900,
        "y": 620,
        "wires": [
            [
                "a8b8c8e20dae3718"
            ],
            [
                "419327fec910c194"
            ]
        ]
    },
    {
        "id": "1d8215d559361495",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 580,
        "wires": []
    },
    {
        "id": "7287b64399b1e802",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "",
        "func": "if(msg.statusCode == \"200\"){\n    var submodel = msg.payload;\n    var submodelElements = submodel.submodelElements;\n    msg.url = \"\";\n    for (var element = 0; element < submodelElements.length; element++){\n        if(submodelElements[element].idShort == \"authenticationServer\") {\n            var values = submodelElements[element].value;\n            for (var valueElement = 0; valueElement < values.length; valueElement++){\n                if (values[valueElement].idShort == \"endpoint\"){\n                    context.global.set(\"authenticationServerEndpoint\", values[valueElement].value);\n                } else if(values[valueElement].idShort == \"serverDiscoveryDocument\"){\n                    msg.url = values[valueElement].value;\n                    context.global.set(submodel.idShort, submodel);\n                } else if(values[valueElement].idShort == \"authenticationServerClient\"){\n                    context.global.set(values[valueElement].idShort, values[valueElement].value);\n                }\n            }\n            if(msg.url != \"\"){\n                return msg;\n            }\n        }\n    }\n    msg.statusCode = 400;\n    msg.payload = \"Error, serverDiscoveryDocument element does not exist\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 620,
        "wires": [
            [
                "262dd8b1f591d4fc",
                "f3d7659cd320bb23"
            ]
        ]
    },
    {
        "id": "f3d7659cd320bb23",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1820,
        "y": 580,
        "wires": []
    },
    {
        "id": "8b7a957834a88d1a",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "name": "",
        "links": [
            "384ba421ea747453"
        ],
        "timeout": "30",
        "x": 640,
        "y": 660,
        "wires": [
            [
                "6b4aee717b31aa75",
                "693383e4bfab630a"
            ]
        ]
    },
    {
        "id": "cc457cc8b6b009d2",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "name": "",
        "links": [
            "384ba421ea747453"
        ],
        "timeout": "30",
        "x": 1440,
        "y": 620,
        "wires": [
            [
                "1d8215d559361495",
                "7287b64399b1e802"
            ]
        ]
    },
    {
        "id": "fe530b549528d690",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "g": "1b283c783c77a415",
        "name": "updateValueCallbackIn",
        "links": [
            "1fc06f6a8f3492b8",
            "0b524a58fefb9583"
        ],
        "x": 235,
        "y": 4460,
        "wires": [
            [
                "e01f122e60adcb09",
                "4de223f59a8a78bb"
            ]
        ]
    },
    {
        "id": "e01f122e60adcb09",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "g": "1b283c783c77a415",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 450,
        "y": 4400,
        "wires": []
    },
    {
        "id": "8863187f65553f45",
        "type": "link call",
        "z": "75985a5477ba24aa",
        "g": "1b283c783c77a415",
        "name": "",
        "links": [
            "7c3cc231d7bef553"
        ],
        "timeout": "30",
        "x": 860,
        "y": 4460,
        "wires": [
            [
                "324a3bc1307cdce1"
            ]
        ]
    },
    {
        "id": "324a3bc1307cdce1",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "g": "1b283c783c77a415",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2350,
        "y": 4460,
        "wires": []
    },
    {
        "id": "4de223f59a8a78bb",
        "type": "function",
        "z": "75985a5477ba24aa",
        "g": "1b283c783c77a415",
        "name": "prepareUpdate",
        "func": "let splittedLink = [];\nsplittedLink = msg.link.split(\"/\");\nlet submodelId = splittedLink[splittedLink.length - 2];\nlet id = splittedLink[splittedLink.length - 1];\nlet aasId = msg.link.replace(\"/\" + submodelId + \"/\" + id, \"\");\nmsg.req = {\n    \"params\": { \"id\": id, \"submodelId\": submodelId, \"aasid\": aasId },\n    \"query\": { \"content\": msg.content }\n};\nif (Array.isArray(msg.value)) {\n    msg.value = msg.value.join(\";\");\n}\nmsg.payload = {};\nmsg.payload[id] = msg.value;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 4460,
        "wires": [
            [
                "11f085d3ac9482bc",
                "8863187f65553f45"
            ]
        ]
    },
    {
        "id": "11f085d3ac9482bc",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "g": "1b283c783c77a415",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 690,
        "y": 4420,
        "wires": []
    },
    {
        "id": "c7628d3f84e0b3ae",
        "type": "comment",
        "z": "75985a5477ba24aa",
        "name": "Interaction with the AASUI, to be checked",
        "info": "",
        "x": 560,
        "y": 3200,
        "wires": []
    },
    {
        "id": "97ed83699ddd3dfe",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "newLogin in",
        "links": [],
        "x": 815,
        "y": 3440,
        "wires": [
            [
                "da656586e4e26932",
                "aa016abfb64bafe2"
            ]
        ]
    },
    {
        "id": "f173ca082217def1",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "newConfiguration out",
        "mode": "return",
        "links": [],
        "x": 2785,
        "y": 3440,
        "wires": []
    },
    {
        "id": "da656586e4e26932",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "prepare INSERT Statement",
        "func": "// Process msg payload\n\nlet logEvent = {};\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.timestamp = msg.payload.accessAt;\nlogEvent.payload = msg.payload.username;\n\nmsg.topic = \"INSERT INTO accountLogs (accessAt, username) VALUES ($accessAt, $username)\";\nmsg.payload = [logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 3440,
        "wires": [
            [
                "03087db4fabfcc8a",
                "8ee8937316c39223"
            ]
        ]
    },
    {
        "id": "03087db4fabfcc8a",
        "type": "sqlite",
        "z": "75985a5477ba24aa",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 1810,
        "y": 3440,
        "wires": [
            [
                "f173ca082217def1"
            ]
        ]
    },
    {
        "id": "8ee8937316c39223",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1690,
        "y": 3380,
        "wires": []
    },
    {
        "id": "aa016abfb64bafe2",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1329.7222900390625,
        "y": 3388.0556640625,
        "wires": []
    },
    {
        "id": "14932610de2f9eca",
        "type": "msg-router",
        "z": "75985a5477ba24aa",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2350,
        "y": 1140,
        "wires": [
            [
                "95617cac0ab95078"
            ],
            [
                "26bfc42b476a9510"
            ]
        ]
    },
    {
        "id": "26bfc42b476a9510",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\nlet splittedUrl = msg.req.url.split(\"/\");\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"\";\nlogEvent.observableReference = decodeURIComponent(msg.req.url);\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = \"Requested: \" + splittedUrl[splittedUrl.length - 1];\n\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\"; \nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2620,
        "y": 1160,
        "wires": [
            [
                "62a20a822988f9a5"
            ]
        ]
    },
    {
        "id": "62a20a822988f9a5",
        "type": "sqlite",
        "z": "75985a5477ba24aa",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2950,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "bfbb66b97dbf0830",
        "type": "msg-router",
        "z": "75985a5477ba24aa",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2350,
        "y": 1220,
        "wires": [
            [
                "e858602356a8bbe3"
            ],
            [
                "53f68a593f29aa4c"
            ]
        ]
    },
    {
        "id": "53f68a593f29aa4c",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\nlet splittedUrl = msg.req.url.split(\"/\");\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"\";\nlogEvent.observableReference = decodeURIComponent(msg.req.url);\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = \"Requested: \" + splittedUrl[splittedUrl.length - 1];\n\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\"; \nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2600,
        "y": 1260,
        "wires": [
            [
                "4324c27d653d4b76"
            ]
        ]
    },
    {
        "id": "4324c27d653d4b76",
        "type": "sqlite",
        "z": "75985a5477ba24aa",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2950,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "718506d0a62e49a5",
        "type": "msg-router",
        "z": "75985a5477ba24aa",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2350,
        "y": 1340,
        "wires": [
            [
                "694498192c48fe2e"
            ],
            [
                "2a3bbd59a905c4cc"
            ]
        ]
    },
    {
        "id": "2a3bbd59a905c4cc",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\nlet splittedUrl = msg.req.url.split(\"/\");\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"\";\nlogEvent.observableReference = decodeURIComponent(msg.req.url);\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = \"Requested: \" + decodeURIComponent(splittedUrl[splittedUrl.length - 1]);\n\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\"; \nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2600,
        "y": 1360,
        "wires": [
            [
                "9c83c90aef3a5c39"
            ]
        ]
    },
    {
        "id": "9c83c90aef3a5c39",
        "type": "sqlite",
        "z": "75985a5477ba24aa",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2950,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "64f4b5e338cef46a",
        "type": "msg-router",
        "z": "75985a5477ba24aa",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2350,
        "y": 1580,
        "wires": [
            [
                "700785eef8b4b329"
            ],
            [
                "290588ae09b3f16b"
            ]
        ]
    },
    {
        "id": "290588ae09b3f16b",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\nlet splittedUrl = msg.req.url.split(\"/\");\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"\";\nlogEvent.observableReference = decodeURIComponent(msg.req.url);\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = \"Requested: \" + decodeURIComponent(splittedUrl[splittedUrl.length - 1]);\n\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\"; \nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2620,
        "y": 1600,
        "wires": [
            [
                "a36549d9c92c8792"
            ]
        ]
    },
    {
        "id": "a36549d9c92c8792",
        "type": "sqlite",
        "z": "75985a5477ba24aa",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2950,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "90b5ad6e4fb90166",
        "type": "msg-router",
        "z": "75985a5477ba24aa",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2350,
        "y": 1740,
        "wires": [
            [
                "2af11f1b5219d380"
            ],
            [
                "fc3e4548f4ab3b10"
            ]
        ]
    },
    {
        "id": "fc3e4548f4ab3b10",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\nlet splittedUrl = msg.req.url.split(\"/\");\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"\";\nlogEvent.observableReference = decodeURIComponent(msg.req.url);\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = \"Requested: \" + decodeURIComponent(splittedUrl[splittedUrl.length - 1]);\n\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\"; \nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2620,
        "y": 1760,
        "wires": [
            [
                "c2f72c7e407e1c04"
            ]
        ]
    },
    {
        "id": "c2f72c7e407e1c04",
        "type": "sqlite",
        "z": "75985a5477ba24aa",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2950,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "97a246f7b044cc91",
        "type": "msg-router",
        "z": "75985a5477ba24aa",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2350,
        "y": 1840,
        "wires": [
            [
                "7b50cd644155c5fd"
            ],
            [
                "dbf6d57e2b465f14"
            ]
        ]
    },
    {
        "id": "dbf6d57e2b465f14",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\nlet splittedUrl = msg.req.url.split(\"/\");\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"\";\nlogEvent.observableReference = decodeURIComponent(msg.req.url);\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = \"Requested: \" + decodeURIComponent(splittedUrl[splittedUrl.length - 1]);\n\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\"; \nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2600,
        "y": 1860,
        "wires": [
            [
                "c4da2433b5a13ebf"
            ]
        ]
    },
    {
        "id": "c4da2433b5a13ebf",
        "type": "sqlite",
        "z": "75985a5477ba24aa",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2950,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "9659f4de2d5a533f",
        "type": "msg-router",
        "z": "75985a5477ba24aa",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 1870,
        "y": 2400,
        "wires": [
            [
                "4a86dc0c1a938c8a"
            ],
            [
                "54a48344f39c93c3"
            ]
        ]
    },
    {
        "id": "54a48344f39c93c3",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\n\nlet filterNamespaceUrl = msg.req.url.replace(context.global.get('namespace'), \"\");\nlet filterAPIElements1Url = filterNamespaceUrl.replace(\"/aasServer/shells/\", \"\");\nlet filterAPIElements2Url = filterAPIElements1Url.replace(\"/aas/submodels\", \"\");\nlet filterAPIElements3Url = filterAPIElements2Url.replace(\"/submodel/submodel-elements\", \"\");\n\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"Output\";\nlogEvent.observableReference = decodeURIComponent(filterAPIElements3Url.trim());\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = msg.payload.value;\n\nif(msg.payload.modelType.name == \"Property\"){\n    msg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\";\n} else if (msg.payload.modelType.name == \"File\"){\n    msg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, link) VALUES ($aasId, $observableRef, $timestamp, $link)\";\n}\nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2140,
        "y": 2440,
        "wires": [
            [
                "709d9ee536e71618"
            ]
        ]
    },
    {
        "id": "709d9ee536e71618",
        "type": "sqlite",
        "z": "75985a5477ba24aa",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2490,
        "y": 2440,
        "wires": [
            []
        ]
    },
    {
        "id": "57c267cf027d5327",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2920,
        "y": 580,
        "wires": []
    },
    {
        "id": "6d33ba5cab0caa48",
        "type": "json",
        "z": "75985a5477ba24aa",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2540,
        "y": 580,
        "wires": [
            [
                "1ad8de685ae8263e"
            ]
        ]
    },
    {
        "id": "1ad8de685ae8263e",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "save the jwks_uri",
        "func": "let jwks_ks = msg.payload.jwks_uri\ncontext.global.set(\"jwks_ks\", jwks_ks);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2720,
        "y": 580,
        "wires": [
            [
                "57c267cf027d5327"
            ]
        ]
    },
    {
        "id": "9673e263e132408c",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "1_In",
        "links": [
            "03d15a94339afe3d"
        ],
        "x": 235,
        "y": 800,
        "wires": [
            [
                "f425bb1bc7727f37"
            ]
        ]
    },
    {
        "id": "2d978ec44fed2ce7",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "1_Out",
        "mode": "link",
        "links": [
            "f573855b3884b433"
        ],
        "x": 3115,
        "y": 820,
        "wires": []
    },
    {
        "id": "f425bb1bc7727f37",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "function 3",
        "func": "msg.url = context.global.get(\"jwks_ks\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 800,
        "wires": [
            [
                "4a8b5d7dab258739",
                "d1ce6d9b8ab8dd20"
            ]
        ]
    },
    {
        "id": "5a31a544dd84e0a2",
        "type": "http request",
        "z": "75985a5477ba24aa",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1810,
        "y": 820,
        "wires": [
            [
                "3fc2284fd132e191",
                "2d978ec44fed2ce7"
            ]
        ]
    },
    {
        "id": "3fc2284fd132e191",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2020,
        "y": 800,
        "wires": []
    },
    {
        "id": "4a8b5d7dab258739",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 760,
        "wires": []
    },
    {
        "id": "168dca91931fa2d1",
        "type": "link out",
        "z": "75985a5477ba24aa",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "d549d0df611883fd"
        ],
        "x": 3105,
        "y": 660,
        "wires": []
    },
    {
        "id": "d1ce6d9b8ab8dd20",
        "type": "change",
        "z": "75985a5477ba24aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "paths[\"path_jwks1\"]",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "pathsCorrelationId",
                "pt": "msg",
                "to": "jwks",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 800,
        "wires": [
            [
                "4af6941bf91a57e9"
            ]
        ]
    },
    {
        "id": "2d82f531db808c58",
        "type": "change",
        "z": "75985a5477ba24aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "paths[\"path_jwks2\"]",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "pathsCorrelationId",
                "pt": "msg",
                "to": "jwks",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 840,
        "wires": [
            [
                "4af6941bf91a57e9"
            ]
        ]
    },
    {
        "id": "d549d0df611883fd",
        "type": "link in",
        "z": "75985a5477ba24aa",
        "name": "init_ok",
        "links": [
            "12763a373adde3b1",
            "168dca91931fa2d1"
        ],
        "x": 895,
        "y": 840,
        "wires": [
            [
                "2d82f531db808c58",
                "e975aebec90246fd"
            ]
        ]
    },
    {
        "id": "4af6941bf91a57e9",
        "type": "wait-paths",
        "z": "75985a5477ba24aa",
        "name": "",
        "paths": "[\"path_jwks1\",\"path_jwks2\"]",
        "timeout": 15000,
        "finalTimeout": 60000,
        "x": 1630,
        "y": 820,
        "wires": [
            [
                "5a31a544dd84e0a2"
            ]
        ]
    },
    {
        "id": "e975aebec90246fd",
        "type": "debug",
        "z": "75985a5477ba24aa",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 880,
        "wires": []
    },
    {
        "id": "7540b688d1ccfbd8",
        "type": "switch",
        "z": "75985a5477ba24aa",
        "name": "",
        "property": "req.query.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Normal",
                "vt": "str"
            },
            {
                "t": "istype",
                "v": "undefined",
                "vt": "undefined"
            },
            {
                "t": "eq",
                "v": "Trimmed",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reference",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 1130,
        "y": 1320,
        "wires": [
            [
                "bf8d1775bedc9126"
            ],
            [
                "bf8d1775bedc9126"
            ],
            [
                "87bce6429de98178"
            ],
            [
                "2d2b37ca7cbfdbc1"
            ],
            [
                "76be2c591d65fa6f"
            ]
        ]
    },
    {
        "id": "87bce6429de98178",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "Creating Trimmed Shells",
        "func": "let shell = msg.payload;\nlet trimmedShell = {};\ntrimmedShell.hasDataSpecification = shell.hasDataSpecification;\ntrimmedShell.derivedFrom = shell.derivedFrom;\ntrimmedShell.conceptDictionaries = shell.conceptDictionaries;\ntrimmedShell.identification = shell.identification;\ntrimmedShell.administration = shell.administration;\ntrimmedShell.idShort = shell.idShort;\ntrimmedShell.modelType = shell.modelType;\n\nmsg.payload = trimmedShell;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 1320,
        "wires": [
            [
                "0cf42e9cc5365c9d"
            ]
        ]
    },
    {
        "id": "2d2b37ca7cbfdbc1",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "Creating Reference to Shells",
        "func": "let shell = msg.payload;\nlet referenceShell = {};\nreferenceShell.idShort = shell.idShort;\n    \nmsg.payload = referenceShell;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1360,
        "wires": [
            [
                "0cf42e9cc5365c9d"
            ]
        ]
    },
    {
        "id": "76be2c591d65fa6f",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "Bad Request",
        "func": "msg.statusCode = 400;\nmsg.payload = \"Bad Request\";\nmsg.headers = {};\nmsg.headers['content-type'] = 'text/plain';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 1400,
        "wires": [
            [
                "0cf42e9cc5365c9d"
            ]
        ]
    },
    {
        "id": "d57f58bc77ffcb8b",
        "type": "switch",
        "z": "75985a5477ba24aa",
        "name": "",
        "property": "req.query.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Normal",
                "vt": "str"
            },
            {
                "t": "istype",
                "v": "undefined",
                "vt": "undefined"
            },
            {
                "t": "eq",
                "v": "Trimmed",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reference",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Value",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 6,
        "x": 1130,
        "y": 1580,
        "wires": [
            [
                "4f66f53de68a468a"
            ],
            [
                "4f66f53de68a468a"
            ],
            [
                "da901f7ac6c9bcfb"
            ],
            [
                "56f89495c40f9077"
            ],
            [
                "764d3739e6d35d5f"
            ],
            [
                "406069fe371c496c"
            ]
        ]
    },
    {
        "id": "da901f7ac6c9bcfb",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "Creating Trimmed Submodels",
        "func": "let submodels = msg.payload;\nlet trimmedSubmodels = [];\nfor(let index = 0; index < submodels.length; index++){\n    let submodel = submodels[index];\n    let trimmedSubmodel = {};\n    trimmedSubmodel.semanticId = submodel.semanticId;\n    trimmedSubmodel.qualifiers = submodel.qualifiers;\n    trimmedSubmodel.hasDataSpecification = submodel.hasDataSpecification;\n    trimmedSubmodel.identification = submodel.identification;\n    trimmedSubmodel.idShort = submodel.idShort;\n    trimmedSubmodel.modelType = submodel.modelType;\n    trimmedSubmodels.push(trimmedSubmodel);\n}\n\nmsg.payload = trimmedSubmodels;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 1580,
        "wires": [
            [
                "32e4c48636bc81e8"
            ]
        ]
    },
    {
        "id": "56f89495c40f9077",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "Creating Reference to Submodels",
        "func": "let submodels = msg.payload;\nlet referenceSubmodels = [];\nfor(let index = 0; index < submodels.length; index++){\n    let submodel = submodels[index];\n    let referenceSubmodel = {};\n    referenceSubmodel.idShort = submodel.idShort;\n    referenceSubmodels.push(referenceSubmodel)\n}\n\nmsg.payload = referenceSubmodels;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "764d3739e6d35d5f",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "Not yet Supported",
        "func": "msg.payload = \"Not yet Supported\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 1660,
        "wires": [
            [
                "32e4c48636bc81e8"
            ]
        ]
    },
    {
        "id": "406069fe371c496c",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "Bad Request",
        "func": "msg.statusCode = 400;\nmsg.payload = \"Bad Request\";\nmsg.headers = {};\nmsg.headers['content-type'] = 'text/plain';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 1700,
        "wires": [
            [
                "32e4c48636bc81e8"
            ]
        ]
    },
    {
        "id": "de98fa9db5e7edf4",
        "type": "switch",
        "z": "75985a5477ba24aa",
        "name": "",
        "property": "req.query.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Normal",
                "vt": "str"
            },
            {
                "t": "istype",
                "v": "undefined",
                "vt": "undefined"
            },
            {
                "t": "eq",
                "v": "Trimmed",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reference",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Value",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 6,
        "x": 1130,
        "y": 1840,
        "wires": [
            [
                "d2fa44933ad7f7bc"
            ],
            [
                "d2fa44933ad7f7bc"
            ],
            [
                "e28fcc33c52a273f"
            ],
            [
                "eaf8e273f0c5a16d"
            ],
            [
                "c1c22f4c94942222"
            ],
            [
                "078534f3f21e5749"
            ]
        ]
    },
    {
        "id": "e28fcc33c52a273f",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "Creating Trimmed Submodel",
        "func": "let submodel = msg.payload;\nlet trimmedSubmodel = {};\n\ntrimmedSubmodel.semanticId = submodel.semanticId;\ntrimmedSubmodel.qualifiers = submodel.qualifiers;\ntrimmedSubmodel.hasDataSpecification = submodel.hasDataSpecification;\ntrimmedSubmodel.identification = submodel.identification;\ntrimmedSubmodel.idShort = submodel.idShort;\ntrimmedSubmodel.modelType = submodel.modelType;\n\nmsg.payload = trimmedSubmodel;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1840,
        "wires": [
            [
                "273b7e8259322a05"
            ]
        ]
    },
    {
        "id": "eaf8e273f0c5a16d",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "Creating Reference to Submodel",
        "func": "let submodel = msg.payload;\nlet referenceSubmodel = {};\nreferenceSubmodel.idShort = submodel.idShort;\n    \nmsg.payload = referenceSubmodel;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 1880,
        "wires": [
            [
                "273b7e8259322a05"
            ]
        ]
    },
    {
        "id": "c1c22f4c94942222",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "Not yet Supported",
        "func": "msg.payload = \"Not yet Supported\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 1920,
        "wires": [
            [
                "273b7e8259322a05"
            ]
        ]
    },
    {
        "id": "078534f3f21e5749",
        "type": "function",
        "z": "75985a5477ba24aa",
        "name": "Bad Request",
        "func": "msg.statusCode = 400;\nmsg.payload = \"Bad Request\";\nmsg.headers = {};\nmsg.headers['content-type'] = 'text/plain';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 1960,
        "wires": [
            [
                "273b7e8259322a05"
            ]
        ]
    },
    {
        "id": "96d9a0104dd7f277",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "PersistModel",
        "func": "var manifest = context.flow.get('manifest');\nvar manifestJsonStr = JSON.stringify(manifest);\nmsg.payload = manifestJsonStr;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 1720,
        "wires": [
            [
                "eb8449ba3d618d2f"
            ]
        ]
    },
    {
        "id": "95cc43ba12a545e0",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "RetrievingModelFilePath",
        "func": "msg.filename = context.global.get(\"ModelFilePath\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 1720,
        "wires": [
            [
                "96d9a0104dd7f277"
            ]
        ]
    },
    {
        "id": "68c6ad7df1b48557",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "RetrievingSubmodels...",
        "func": "var manifest = context.flow.get(\"manifest\");\nmsg.payload = manifest.submodels;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 500,
        "wires": [
            [
                "a420e478a8583d95"
            ]
        ]
    },
    {
        "id": "4795551dc5982bc1",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "BuildingJsonataQuery...",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\nmsg.shellsJsonStr = JSON.stringify(shells);\nmsg.jsonata = \"$[identification.id='\" + ShellId +\"'].submodels.keys\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 640,
        "wires": [
            [
                "c39bce6a4d273526"
            ]
        ]
    },
    {
        "id": "d6887b6df8d5ddab",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "BuildingJsonataQuery...",
        "func": "var ShellId = msg.req.params.aasid;\nvar submodel = msg.payload;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\nmsg.shellsJsonStr = JSON.stringify(shells);\nmsg.jsonata = \"$[identification.id='\" + ShellId + \"'].submodels.keys[value='\" + submodel.identification.id + \"']\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 720,
        "wires": [
            [
                "a598c83f4411544a"
            ]
        ]
    },
    {
        "id": "4f956ff5e24ff552",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "BuildingJsonataQuery...",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\nmsg.shellsJsonStr = JSON.stringify(shells);\nmsg.jsonata = \"$[identification.id='\" + ShellId +\"'].submodels\";\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 840,
        "wires": [
            [
                "ecf799d73da2a9f5"
            ]
        ]
    },
    {
        "id": "c371036bf8172775",
        "type": "switch",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1440,
        "y": 837,
        "wires": [
            [
                "56ae8f5448d5e5af",
                "90ceb7297f324056"
            ],
            [
                "56ae8f5448d5e5af"
            ]
        ]
    },
    {
        "id": "3e9a9dc077e63cdd",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "UpdatingSubmodel...",
        "func": "var submodel = msg.payload;\n\nif(msg.jsonataStatus == \"Success\"){\n    var manifest = context.flow.get(\"manifest\");\n    var submodels = manifest.submodels;\n    for(var element = 0; element < submodels.length; element++){\n        if(submodels[element].identification.id == submodel.identification.id){\n            submodels[element] = submodel;\n            msg.statusCode = \"200\";\n            context.flow.set(\"manifest\", manifest);\n            return msg;\n        }\n    }\n} else {\n   msg.payload = \"Error submodel not found\";\n    msg.statusCode = \"409\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1140,
        "y": 1000,
        "wires": [
            [
                "38a952165ed5f2c5"
            ]
        ]
    },
    {
        "id": "38a952165ed5f2c5",
        "type": "switch",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1350,
        "y": 1000,
        "wires": [
            [
                "f624774cef36915c",
                "f8a11d6ac5c16b12"
            ],
            [
                "f8a11d6ac5c16b12"
            ]
        ]
    },
    {
        "id": "7364bcea3f730e6b",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "RetrievingEnvironment...",
        "func": "msg.payload = context.flow.get(\"manifest\");\nmsg.AASID = context.flow.get('AASIdentifier');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 240,
        "wires": [
            [
                "c9276f3914977e48"
            ]
        ]
    },
    {
        "id": "0e2bab16b4517641",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "AddSubmodelElement",
        "func": "if(msg.jsonataStatus == \"Success\"){\n    msg.payload = \"Error submodelElement ID already exists\";\n    msg.statusCode = \"409\";\n    return msg;\n} else {\n    var submodel = JSON.parse(msg.submodelJsonStr);\n    submodel.submodelElements.push(msg.submodelElement);\n    msg.payload = submodel;\n    return msg;\n    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1640,
        "y": 1180,
        "wires": [
            [
                "e2b8fda577ef6e51"
            ]
        ]
    },
    {
        "id": "e2b8fda577ef6e51",
        "type": "switch",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "409",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1840,
        "y": 1180,
        "wires": [
            [
                "4050c51a045d37fe"
            ],
            [
                "68b896906c26be67"
            ]
        ]
    },
    {
        "id": "78b98e8cb2a7b3f7",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "RetrievingAssets...",
        "func": "var ShellId = msg.req.params.aasid;\nif(msg.jsonataStatus == \"Success\"){\n    var keys = msg.jsonataResult;\n    var manifest = context.flow.get(\"manifest\");\n    var assets = manifest.assets;\n    for(var index1 = 0; index1 < keys.length; index1++){\n        var key = keys[index1];\n        for(var index2 = 0; index2 < assets.length; index2++){\n            var asset = assets[index2];\n            if(asset.identification.id === key.value){\n                msg.payload = asset;\n                msg.statusCode = \"200\";\n                return msg;\n            }\n        }\n    }\n    msg.payload = \"Asset not found\";\n    msg.statusCode = \"400\";\n} else {\n    msg.statusCode = \"404\";\n    msg.payload = \"Asset Administration Shell with id:\" + ShellId + \" not found\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 360,
        "wires": [
            [
                "71bec0670bacb4c2"
            ]
        ]
    },
    {
        "id": "e08c19690608ae01",
        "type": "inject",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 461,
        "y": 57.500030517578125,
        "wires": [
            [
                "a91f812ef872d735"
            ]
        ]
    },
    {
        "id": "a91f812ef872d735",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "IntializeVariables",
        "func": "//Initialize flow variables\n/*var uuid = context.global.get('AASIdentifier')||'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });*/\n/*var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });*/\n\nvar manifest = context.flow.get(\"manifest\") || \"\";\n//var submodels = context.flow.get(\"submodels\") || \"\";\n//var properties = context.flow.get(\"properties\") || \"\";\n\ncontext.flow.set(\"manifest\", manifest);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 778.1428527832031,
        "y": 57.500030517578125,
        "wires": [
            []
        ]
    },
    {
        "id": "ee42e6d919e50fc7",
        "type": "json",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 140,
        "wires": [
            [
                "9477aba9f4591beb",
                "ae8f401b555fe57d"
            ]
        ]
    },
    {
        "id": "9477aba9f4591beb",
        "type": "debug",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 910,
        "y": 100,
        "wires": []
    },
    {
        "id": "ae8f401b555fe57d",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "CreateInMemoryManifest",
        "func": "var manifest = msg.payload;\ncontext.flow.set(\"manifest\", manifest);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 140,
        "wires": [
            [
                "8bb0b9213d3f2956"
            ]
        ]
    },
    {
        "id": "f22ac91e9a236340",
        "type": "wait-paths",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "paths": "[\"path_2\",\"path_1\"]",
        "timeout": 15000,
        "finalTimeout": 60000,
        "x": 1430,
        "y": 180,
        "wires": [
            [
                "65d04e380b7f5e66"
            ]
        ]
    },
    {
        "id": "8bb0b9213d3f2956",
        "type": "change",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "paths[\"path_1\"]",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 140,
        "wires": [
            [
                "f22ac91e9a236340"
            ]
        ]
    },
    {
        "id": "dbe810747a0b204f",
        "type": "change",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "paths[\"path_2\"]",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 180,
        "wires": [
            [
                "f22ac91e9a236340"
            ]
        ]
    },
    {
        "id": "c39bce6a4d273526",
        "type": "jsonata",
        "z": "1f8fca6e95b1a2a9",
        "name": "jsonata",
        "property": "shellsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 950,
        "y": 640,
        "wires": [
            [
                "b532149d9e69e69d"
            ]
        ]
    },
    {
        "id": "b532149d9e69e69d",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "ReadSubmodel",
        "func": "var ShellId = msg.req.params.aasid;\nvar submodelId = msg.req.params.id;\nif (msg.jsonataStatus == \"Success\") {\n    var keys = msg.jsonataResult;\n    var manifest = context.flow.get(\"manifest\");\n    var submodels = manifest.submodels;\n    for (var index1 = 0;  index1 < keys.length; index1++) {\n        var key = keys[index1];\n        for (var index2 = 0; index2 < submodels.length; index2++) {\n            var submodel = submodels[index2];\n            if (submodel.identification.id === key.value) {\n                if (submodel.idShort === submodelId) {\n                    msg.payload = submodel;\n                    msg.statusCode = \"200\";\n                    return msg;\n                }\n            }\n\n        }\n    }\n    msg.payload = \"Submodel with id:\" + submodelId + \" not found\";\n    msg.statusCode = \"400\";\n} else {\n    msg.statusCode = \"404\";\n    msg.payload = \"Asset Administration Shell with id:\" + ShellId + \" not found\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 640,
        "wires": [
            [
                "912caceebae97124"
            ]
        ]
    },
    {
        "id": "a598c83f4411544a",
        "type": "jsonata",
        "z": "1f8fca6e95b1a2a9",
        "name": "jsonata",
        "property": "shellsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 940,
        "y": 720,
        "wires": [
            [
                "66c6e081266c7249"
            ]
        ]
    },
    {
        "id": "66c6e081266c7249",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "Add Submodel",
        "func": "var submodel = msg.payload;\nvar shellId = msg.req.params.aasid;\nif (msg.jsonataStatus == \"Success\") {\n    msg.statusCode = \"409\";\n    msg.payload = \"Error! submodel already exists!\";\n    return msg;\n} else {\n    // Verify IdShort\n    let manifest = context.flow.get(\"manifest\");\n    let submodels = manifest.submodels;\n    for (let index1 = 0; index1 < submodels.length; index1++) {\n        var submodelElement = submodels[index1];\n        if (submodel.idShort == submodelElement.idShort) {\n            msg.statusCode = \"409\";\n            msg.payload = \"Error! submodel with idShort: \" + submodel.idShort + \" already exists!\";\n            return msg;\n        }\n    }\n    // Add Submodel after IdShort Verification\n    msg.statusCode = \"201\";\n    //var manifest = context.flow.get(\"manifest\");\n    manifest.submodels.push(msg.payload);\n    var shells = manifest.assetAdministrationShells;\n    for (var element = 0; element < shells.length; element++) {\n        if (shells[element].identification.id == shellId) {\n            var submodelRef = {};\n            // @ts-ignore\n            var keys = [];\n            var ref = {};\n            ref.type = \"Submodel\";\n            ref.local = true;\n            ref.value = submodel.identification.id;\n            ref.index = 0;\n            ref.idType = submodel.identification.idType;\n            keys.push(ref);\n            submodelRef.keys = keys;\n            shells[element].submodels.push(submodelRef);\n            context.flow.set(\"manifest\", manifest);\n        }\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 720,
        "wires": [
            [
                "2c25b72890524ca1",
                "eba5df2d05fcdf1e"
            ]
        ]
    },
    {
        "id": "dd3d011fd5ef78e3",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "BuildingJsonataQuery...",
        "func": "//var xml_string = msg.payload;\n//var XML = context.global.get('XML');\n\nvar submodel = msg.payload;\nvar manifest = context.flow.get(\"manifest\");\nmsg.submodelsJsonStr = JSON.stringify(manifest.submodels);\nmsg.jsonata = \"$[identification.id='\" + submodel.identification.id +\"']\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 1000,
        "wires": [
            [
                "fea928f6c3db8e0f"
            ]
        ]
    },
    {
        "id": "fea928f6c3db8e0f",
        "type": "jsonata",
        "z": "1f8fca6e95b1a2a9",
        "name": "jsonata",
        "property": "submodelsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 940,
        "y": 1000,
        "wires": [
            [
                "3e9a9dc077e63cdd"
            ]
        ]
    },
    {
        "id": "3fe67a0cc320c7cc",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "BuildingJsonataQuery...",
        "func": "//var xml_string = msg.payload;\n//var XML = context.global.get('XML');\n\nvar conceptDescription = msg.payload;\nvar manifest = context.flow.get(\"manifest\");\nmsg.conceptDescriptionsJsonStr = JSON.stringify(manifest.conceptDescriptions);\nmsg.jsonata = \"$[identification.id='\" + conceptDescription.identification.id +\"']\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 1620,
        "wires": [
            [
                "c86f7bef4fd737c9"
            ]
        ]
    },
    {
        "id": "c86f7bef4fd737c9",
        "type": "jsonata",
        "z": "1f8fca6e95b1a2a9",
        "name": "jsonata",
        "property": "conceptDescriptionsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 940,
        "y": 1620,
        "wires": [
            [
                "80e5106edf51aedd"
            ]
        ]
    },
    {
        "id": "80e5106edf51aedd",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "AddConceptDescription",
        "func": "if(msg.jsonataStatus == \"Success\"){\n    msg.payload = \"Error Concept Description with ID already exists\";\n    msg.statusCode = \"409\";\n} else {\n    msg.statusCode = \"201\";\n    var manifest = context.flow.get(\"manifest\");\n    manifest.conceptDescriptions.push(msg.payload);\n    context.flow.set(\"manifest\", manifest);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 1620,
        "wires": [
            [
                "8e5a0ce6d18b904f"
            ]
        ]
    },
    {
        "id": "8e5a0ce6d18b904f",
        "type": "switch",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "409",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1350,
        "y": 1620,
        "wires": [
            [
                "2d5e7ccb9a59c8d1",
                "d7f83c2d0a137eb2"
            ],
            [
                "d7f83c2d0a137eb2"
            ]
        ]
    },
    {
        "id": "15f4d3145a7359af",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "BuildingJsonataQuery...",
        "func": "var submodelElement = msg.submodelElement;\nmsg.submodelJsonStr = JSON.stringify(msg.payload);\nmsg.jsonata = \"$.submodelElements[idShort='\" + submodelElement.idShort + \"']\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1210,
        "y": 1180,
        "wires": [
            [
                "3de3122e08d4cfbb"
            ]
        ]
    },
    {
        "id": "56d2c0c8cab1ad18",
        "type": "switch",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 1260,
        "wires": [
            [
                "15f4d3145a7359af"
            ],
            [
                "4050c51a045d37fe"
            ]
        ]
    },
    {
        "id": "d19dde782f0a916a",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "submodelElement",
        "func": "msg.submodelElement = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 1260,
        "wires": [
            [
                "3556b6b4886de60a"
            ]
        ]
    },
    {
        "id": "3de3122e08d4cfbb",
        "type": "jsonata",
        "z": "1f8fca6e95b1a2a9",
        "name": "jsonata",
        "property": "submodelJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 1440,
        "y": 1180,
        "wires": [
            [
                "0e2bab16b4517641"
            ]
        ]
    },
    {
        "id": "7e30582919600461",
        "type": "switch",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 1360,
        "wires": [
            [
                "244b7e6c1cb66f3f"
            ],
            [
                "ec50f33710effd52"
            ]
        ]
    },
    {
        "id": "244b7e6c1cb66f3f",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "RemoveSubmodelElement",
        "func": "var manifest = context.flow.get(\"manifest\");\nvar submodels = manifest.submodels;\nfor(var elementSub = 0; elementSub < submodels.length; elementSub++){\n    var submodelElements = submodels[elementSub].submodelElements;\n    for(var elementSubElem = 0; elementSubElem < submodelElements.length; elementSubElem++){\n        if(submodelElements[elementSubElem].idShort == msg.payload.idShort){\n            submodelElements.splice(elementSubElem, 1);\n            context.flow.set(\"manifest\", manifest);\n            msg.statusCode = \"200\";\n            return msg;\n        }\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 1340,
        "wires": [
            [
                "ec50f33710effd52"
            ]
        ]
    },
    {
        "id": "e99cc60cb0b368f6",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "RetrievingShells...",
        "func": "var manifest = context.flow.get(\"manifest\");\nmsg.payload = manifest.assetAdministrationShells;;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1127.4263916015625,
        "y": 299.59288024902344,
        "wires": [
            [
                "ce0224acb323d2aa"
            ]
        ]
    },
    {
        "id": "10d29ea8c1c4bd65",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "RetrievingAas...",
        "func": "var ShellId = msg.req.params.id;\nif(msg.jsonataStatus == \"Success\"){\n    msg.payload = msg.jsonataResult;\n    msg.statusCode = \"200\";\n} else {\n    msg.statusCode = \"404\";\n    msg.payload = \"Asset Adminsitration Shell with id:\" + ShellId + \" not found\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 440,
        "wires": [
            [
                "ad37ad1f23d43948"
            ]
        ]
    },
    {
        "id": "b0f23e2ba87503ef",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "BuildingJsonataQuery...",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\nmsg.shellsJsonStr = JSON.stringify(shells);\nmsg.jsonata = \"$[identification.id='\" + ShellId +\"']\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 440,
        "wires": [
            [
                "f3e260ba8fd3444d"
            ]
        ]
    },
    {
        "id": "f3e260ba8fd3444d",
        "type": "jsonata",
        "z": "1f8fca6e95b1a2a9",
        "name": "jsonata",
        "property": "shellsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 900,
        "y": 440,
        "wires": [
            [
                "10d29ea8c1c4bd65"
            ]
        ]
    },
    {
        "id": "7c06aa0db51b0849",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "BuildingJsonataQuery...",
        "func": "var ShellId = msg.req.params.id;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\nmsg.shellsJsonStr = JSON.stringify(shells);\nmsg.jsonata = \"$[identification.id='\" + ShellId +\"'].submodels\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 560,
        "wires": [
            [
                "c60883ac86f603e7"
            ]
        ]
    },
    {
        "id": "c60883ac86f603e7",
        "type": "jsonata",
        "z": "1f8fca6e95b1a2a9",
        "name": "jsonata",
        "property": "shellsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 950,
        "y": 560,
        "wires": [
            [
                "f534e5db94837582"
            ]
        ]
    },
    {
        "id": "f534e5db94837582",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "ReadSubmodel",
        "func": "var ShellId = msg.req.params.id;\nif(msg.jsonataStatus == \"Success\"){\n    msg.payload = msg.jsonataResult;\n    msg.statusCode = \"200\";\n} else {\n    msg.statusCode = \"404\";\n    msg.payload = \"Asset Administration Shell with id:\" + ShellId + \" not found\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 560,
        "wires": [
            [
                "bfda125079b39bde"
            ]
        ]
    },
    {
        "id": "b65b765fafca38ec",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "Remove Submodel",
        "func": "var submodel = msg.payload;\nvar submodelId = msg.req.params.id;\nvar shellId = msg.req.params.aasid;\n\nif(msg.jsonataStatus == \"Success\"){\n    var refs = msg.jsonataResult;\n    var manifest = context.flow.get(\"manifest\");\n    var submodels = manifest.submodels;\n    var deletedSubmodelRef = \"\";\n    for(var index1 = 0; index1 < refs.length; index1++){\n        var ref = refs[index1];\n        for(var index2 = 0; index2 < submodels.length; index2++){\n            var submodel = submodels[index2];\n            if(submodel.identification.id === ref.keys[0].value){\n                if(submodel.idShort === submodelId){\n                    submodels.splice(index2, 1);\n                    deletedSubmodelRef = submodel.identification.id;\n                    break;\n                }\n            }\n        }\n    }\n    if(deletedSubmodelRef !== \"\"){\n        var shells = manifest.assetAdministrationShells;\n        for(var index3 = 0; index3 < shells.length; index3++){\n            var shell = shells[index3];\n            if(shell.identification.id == shellId){\n                var submodelRefs = shell.submodels;\n                for(var index4 = 0; index4 < submodelRefs.length; index4++){\n                    var submodelRef = submodelRefs[index4];\n                    if(submodelRef.keys[0].value === deletedSubmodelRef){\n                        submodelRefs.splice(index4, 1);\n                        break;\n                    }\n                }\n            }\n        }\n        msg.statusCode = \"200\";\n        context.flow.set(\"manifest\", manifest);\n    } else {\n        msg.statusCode = \"400\";\n        msg.payload = \"Submodel with id: \" + submodelId + \" not found\";\n    }\n    \n} else {\n    msg.statusCode = \"400\";\n    msg.payload = \"Asset Administration Shell with id:\" + shellId + \" not found\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1190,
        "y": 837,
        "wires": [
            [
                "c371036bf8172775"
            ]
        ]
    },
    {
        "id": "ecf799d73da2a9f5",
        "type": "jsonata",
        "z": "1f8fca6e95b1a2a9",
        "name": "jsonata",
        "property": "shellsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 960,
        "y": 840,
        "wires": [
            [
                "b65b765fafca38ec"
            ]
        ]
    },
    {
        "id": "b849037d6289d8ae",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "BuildingJsonataQuery...",
        "func": "var submodelId = msg.req.params.submodelId;\nvar submodelCollectionId = [];\nsubmodelCollectionId = msg.req.params.submodelId.split(\".\");\nvar jsonataQuery = \"[$[idShort=\\\"\" + submodelId + \"\\\"]]\";\n\nvar manifest = context.flow.get('manifest');\n    \nvar submodels = manifest.submodels;\nmsg.submodelsJsonStr = JSON.stringify(submodels);\nmsg.jsonata = jsonataQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 1100,
        "wires": [
            [
                "6a8241c204f48133",
                "4f714280c69d42b2"
            ]
        ]
    },
    {
        "id": "6a8241c204f48133",
        "type": "jsonata",
        "z": "1f8fca6e95b1a2a9",
        "name": "jsonata",
        "property": "submodelsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 990,
        "y": 1100,
        "wires": [
            [
                "bcf612911b8af1c1",
                "51265fb6d7c29580"
            ]
        ]
    },
    {
        "id": "7547db951e6e796d",
        "type": "debug",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1520,
        "y": 1040,
        "wires": []
    },
    {
        "id": "4f714280c69d42b2",
        "type": "debug",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1040,
        "y": 1060,
        "wires": []
    },
    {
        "id": "bcf612911b8af1c1",
        "type": "debug",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1300,
        "y": 1060,
        "wires": []
    },
    {
        "id": "51265fb6d7c29580",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "ReadSubmodelElement",
        "func": "var iterate = function (submodelElementId, collectionIds, submodelElements) {\n    for (var index = 0; index < submodelElements.length; index++) {\n        var submodelElement = submodelElements[index];\n        if (submodelElement.modelType.name !== \"SubmodelElementCollection\" || (submodelElement.modelType.name === \"SubmodelElementCollection\" && collectionIds.length < 1)) {\n            if (submodelElement.idShort === submodelElementId) {\n                return submodelElement;\n\n            }\n\n        } else {\n            for (var collIndex = 0; collIndex < collectionIds.length; collIndex++) {\n                var collectionId = collectionIds[collIndex];\n                if (submodelElement.idShort === collectionId) {\n                    collectionIds.splice(collIndex, 1);\n                    var result = iterate(submodelElementId, collectionIds, submodelElement.value);\n                    return result;\n                }\n            }\n\n        }\n    }\n    return \"\";\n}\n\nvar submodelElementId = msg.req.params.id;\nvar submodelId = msg.req.params.submodelId;\n\nvar submodelCollectionId = [];\nvar splittedSubmodel = submodelElementId.split(\".\");\n//submodelId = splittedSubmodel[0];\nmsg.test1 = splittedSubmodel;\n\nif (splittedSubmodel.length > 1) {\n    for (let index = 0; index < splittedSubmodel.length; index++){\n        if (index == (splittedSubmodel.length - 1)){\n            submodelElementId = splittedSubmodel[index];\n        } else {\n            submodelCollectionId.push(splittedSubmodel[index]);\n        }\n    }\n    /*for (var index of splittedSubmodel) {\n        // @ts-ignore\n        if (index < (splittedSubmodel.length - 1)) {\n            submodelCollectionId.push(splittedSubmodel[index]);\n        } else {\n            submodelElementId = splittedSubmodel[index];\n        }\n    }*/\n}\n\nvar selectedSubmodels = [];\nvar selctedSubmodelElements = [];\nif (msg.jsonataStatus == \"Success\") {\n    var submodels = msg.jsonataResult;\n    for (var index1 = 0; index1 < submodels.length; index1++) {\n        var submodelElements = submodels[index1].submodelElements;\n        var result = iterate(submodelElementId, submodelCollectionId, submodelElements);\n        if (result != \"\") {\n            selectedSubmodels.push(submodels[index1]);\n            selctedSubmodelElements.push(result);\n        }\n    }\n    if (selectedSubmodels.length > 0) {\n        var manifest = context.flow.get(\"manifest\");\n        var shells = manifest.assetAdministrationShells;\n        var ShellId = msg.req.params.aasid;\n        for (var index3 = 0; index3 < shells.length; index3++) {\n            if (shells[index3].identification.id === ShellId) {\n                var submodelRefs = shells[index3].submodels;\n                for (var index4 = 0; index4 < submodelRefs.length; index4++) {\n                    var ref = submodelRefs[index4];\n                    for (var index5 = 0; index5 < selectedSubmodels.length; index5++) {\n                        if (ref.keys[0].value === selectedSubmodels[index5].identification.id) {\n                            msg.statusCode = \"200\";\n                            msg.payload = selctedSubmodelElements[index5];\n                            return msg;\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        msg.statusCode = \"404\";\n        msg.payload = \"SubmodelElement with id:\" + submodelElementId + \" not found\";\n    }\n\n\n} else {\n    msg.statusCode = \"404\";\n    msg.payload = \"Submodel with id:\" + submodelId + \" not found\";\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1100,
        "wires": [
            [
                "7547db951e6e796d",
                "c9ba38184db18eae"
            ]
        ]
    },
    {
        "id": "4b948681885ae37c",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "BuildingJsonataQuery...",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\nmsg.shellsJsonStr = JSON.stringify(shells);\nmsg.jsonata = \"$[identification.id='\" + ShellId +\"'].asset.keys\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 360,
        "wires": [
            [
                "f2767107c4657763"
            ]
        ]
    },
    {
        "id": "f2767107c4657763",
        "type": "jsonata",
        "z": "1f8fca6e95b1a2a9",
        "name": "jsonata",
        "property": "shellsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 900,
        "y": 360,
        "wires": [
            [
                "78b98e8cb2a7b3f7",
                "6b950dc878ee9349"
            ]
        ]
    },
    {
        "id": "6b950dc878ee9349",
        "type": "debug",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 400,
        "wires": []
    },
    {
        "id": "1cb697e136105270",
        "type": "link in",
        "z": "1f8fca6e95b1a2a9",
        "name": "createEnv in",
        "links": [],
        "x": 315,
        "y": 180,
        "wires": [
            [
                "dbe810747a0b204f",
                "ee42e6d919e50fc7"
            ]
        ]
    },
    {
        "id": "65d04e380b7f5e66",
        "type": "link out",
        "z": "1f8fca6e95b1a2a9",
        "name": "createEnv out",
        "mode": "return",
        "links": [],
        "x": 2465,
        "y": 180,
        "wires": []
    },
    {
        "id": "4b45b982539cccba",
        "type": "link in",
        "z": "1f8fca6e95b1a2a9",
        "name": "persistEnv in",
        "links": [],
        "x": 315,
        "y": 1720,
        "wires": [
            [
                "95cc43ba12a545e0"
            ]
        ]
    },
    {
        "id": "7fbabdd86a0fe9fe",
        "type": "link out",
        "z": "1f8fca6e95b1a2a9",
        "name": "persistEnv out",
        "mode": "return",
        "links": [],
        "x": 2465,
        "y": 1720,
        "wires": []
    },
    {
        "id": "0d2ab6d7b02c236e",
        "type": "link in",
        "z": "1f8fca6e95b1a2a9",
        "name": "readEnv in",
        "links": [],
        "x": 315,
        "y": 240,
        "wires": [
            [
                "7364bcea3f730e6b"
            ]
        ]
    },
    {
        "id": "c9276f3914977e48",
        "type": "link out",
        "z": "1f8fca6e95b1a2a9",
        "name": "readEnv out",
        "mode": "return",
        "links": [],
        "x": 2465,
        "y": 240,
        "wires": []
    },
    {
        "id": "b14c0b0499bc8ac6",
        "type": "link in",
        "z": "1f8fca6e95b1a2a9",
        "name": "readShells in",
        "links": [],
        "x": 315,
        "y": 300,
        "wires": [
            [
                "e99cc60cb0b368f6"
            ]
        ]
    },
    {
        "id": "ce0224acb323d2aa",
        "type": "link out",
        "z": "1f8fca6e95b1a2a9",
        "name": "readShells out",
        "mode": "return",
        "links": [],
        "x": 2465,
        "y": 300,
        "wires": []
    },
    {
        "id": "f46078f9931be277",
        "type": "link in",
        "z": "1f8fca6e95b1a2a9",
        "name": "readAssets in",
        "links": [],
        "x": 315,
        "y": 360,
        "wires": [
            [
                "4b948681885ae37c"
            ]
        ]
    },
    {
        "id": "71bec0670bacb4c2",
        "type": "link out",
        "z": "1f8fca6e95b1a2a9",
        "name": "readAssets out",
        "mode": "return",
        "links": [],
        "x": 2465,
        "y": 360,
        "wires": []
    },
    {
        "id": "2c06f0799c94d6b9",
        "type": "link in",
        "z": "1f8fca6e95b1a2a9",
        "name": "readAas in",
        "links": [],
        "x": 315,
        "y": 440,
        "wires": [
            [
                "b0f23e2ba87503ef"
            ]
        ]
    },
    {
        "id": "ad37ad1f23d43948",
        "type": "link out",
        "z": "1f8fca6e95b1a2a9",
        "name": "readAas out",
        "mode": "return",
        "links": [],
        "x": 2465,
        "y": 440,
        "wires": []
    },
    {
        "id": "3eb3764a0a0f9847",
        "type": "link in",
        "z": "1f8fca6e95b1a2a9",
        "name": "readSubmodels in",
        "links": [],
        "x": 315,
        "y": 500,
        "wires": [
            [
                "68c6ad7df1b48557"
            ]
        ]
    },
    {
        "id": "a420e478a8583d95",
        "type": "link out",
        "z": "1f8fca6e95b1a2a9",
        "name": "readSubmodels out",
        "mode": "return",
        "links": [],
        "x": 2465,
        "y": 500,
        "wires": []
    },
    {
        "id": "1e0feb88457467a8",
        "type": "link in",
        "z": "1f8fca6e95b1a2a9",
        "name": "readAasSubmodels in",
        "links": [],
        "x": 315,
        "y": 560,
        "wires": [
            [
                "7c06aa0db51b0849"
            ]
        ]
    },
    {
        "id": "bfda125079b39bde",
        "type": "link out",
        "z": "1f8fca6e95b1a2a9",
        "name": "readAasSubmodels out",
        "mode": "return",
        "links": [],
        "x": 2465,
        "y": 560,
        "wires": []
    },
    {
        "id": "384ba421ea747453",
        "type": "link in",
        "z": "1f8fca6e95b1a2a9",
        "name": "readSubmodel in",
        "links": [],
        "x": 315,
        "y": 640,
        "wires": [
            [
                "4795551dc5982bc1"
            ]
        ]
    },
    {
        "id": "912caceebae97124",
        "type": "link out",
        "z": "1f8fca6e95b1a2a9",
        "name": "readSubmodel out",
        "mode": "return",
        "links": [],
        "x": 2465,
        "y": 640,
        "wires": []
    },
    {
        "id": "1609d819e97d5cf2",
        "type": "link in",
        "z": "1f8fca6e95b1a2a9",
        "name": "addSubmodel in",
        "links": [],
        "x": 315,
        "y": 720,
        "wires": [
            [
                "d6887b6df8d5ddab"
            ]
        ]
    },
    {
        "id": "2c25b72890524ca1",
        "type": "link out",
        "z": "1f8fca6e95b1a2a9",
        "name": "addSubmodel out",
        "mode": "return",
        "links": [],
        "x": 2465,
        "y": 720,
        "wires": []
    },
    {
        "id": "eba5df2d05fcdf1e",
        "type": "link call",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "links": [
            "4b45b982539cccba"
        ],
        "timeout": "30",
        "x": 1410,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "84ff9edf08617db5",
        "type": "link in",
        "z": "1f8fca6e95b1a2a9",
        "name": "removeSubmodel in",
        "links": [],
        "x": 315,
        "y": 840,
        "wires": [
            [
                "4f956ff5e24ff552"
            ]
        ]
    },
    {
        "id": "56ae8f5448d5e5af",
        "type": "link out",
        "z": "1f8fca6e95b1a2a9",
        "name": "removeSubmodel out",
        "mode": "return",
        "links": [],
        "x": 2465,
        "y": 840,
        "wires": []
    },
    {
        "id": "90ceb7297f324056",
        "type": "link call",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "links": [
            "4b45b982539cccba"
        ],
        "timeout": "30",
        "x": 1610,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "f624774cef36915c",
        "type": "link call",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "links": [
            "4b45b982539cccba"
        ],
        "timeout": "30",
        "x": 1530,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "1a5d5da5082c9a4b",
        "type": "link in",
        "z": "1f8fca6e95b1a2a9",
        "name": "updateSubmodel in",
        "links": [],
        "x": 315,
        "y": 1000,
        "wires": [
            [
                "dd3d011fd5ef78e3"
            ]
        ]
    },
    {
        "id": "f8a11d6ac5c16b12",
        "type": "link out",
        "z": "1f8fca6e95b1a2a9",
        "name": "updateSubmodel out",
        "mode": "return",
        "links": [],
        "x": 2465,
        "y": 1000,
        "wires": []
    },
    {
        "id": "9c082c01ee94eb9b",
        "type": "link in",
        "z": "1f8fca6e95b1a2a9",
        "name": "readSubmodelElement in",
        "links": [],
        "x": 315,
        "y": 1100,
        "wires": [
            [
                "b849037d6289d8ae"
            ]
        ]
    },
    {
        "id": "c9ba38184db18eae",
        "type": "link out",
        "z": "1f8fca6e95b1a2a9",
        "name": "readSubmodelElement out",
        "mode": "return",
        "links": [],
        "x": 2465,
        "y": 1100,
        "wires": []
    },
    {
        "id": "56ca63915cd6f36a",
        "type": "link in",
        "z": "1f8fca6e95b1a2a9",
        "name": "addSubmodelElement in",
        "links": [],
        "x": 315,
        "y": 1260,
        "wires": [
            [
                "d19dde782f0a916a"
            ]
        ]
    },
    {
        "id": "4050c51a045d37fe",
        "type": "link out",
        "z": "1f8fca6e95b1a2a9",
        "name": "addSubmodelElement out",
        "mode": "return",
        "links": [],
        "x": 2465,
        "y": 1260,
        "wires": []
    },
    {
        "id": "68b896906c26be67",
        "type": "link call",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "links": [
            "1a5d5da5082c9a4b"
        ],
        "timeout": "30",
        "x": 1910,
        "y": 1240,
        "wires": [
            [
                "4050c51a045d37fe"
            ]
        ]
    },
    {
        "id": "d484f5d1ace6cd5d",
        "type": "link in",
        "z": "1f8fca6e95b1a2a9",
        "name": "removeSubmodelElement in",
        "links": [],
        "x": 315,
        "y": 1360,
        "wires": [
            [
                "ce18a334af6da792"
            ]
        ]
    },
    {
        "id": "ec50f33710effd52",
        "type": "link out",
        "z": "1f8fca6e95b1a2a9",
        "name": "removeSubmodelElement out",
        "mode": "return",
        "links": [],
        "x": 2465,
        "y": 1360,
        "wires": []
    },
    {
        "id": "ce18a334af6da792",
        "type": "link call",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "links": [
            "9c082c01ee94eb9b"
        ],
        "timeout": "30",
        "x": 850,
        "y": 1360,
        "wires": [
            [
                "7e30582919600461"
            ]
        ]
    },
    {
        "id": "3556b6b4886de60a",
        "type": "link call",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "links": [
            "384ba421ea747453"
        ],
        "timeout": "30",
        "x": 910,
        "y": 1260,
        "wires": [
            [
                "56d2c0c8cab1ad18"
            ]
        ]
    },
    {
        "id": "2d5e7ccb9a59c8d1",
        "type": "link call",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "links": [
            "4b45b982539cccba"
        ],
        "timeout": "30",
        "x": 1570,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "7c3cc231d7bef553",
        "type": "link in",
        "z": "1f8fca6e95b1a2a9",
        "name": "updateSubmodelElement in",
        "links": [],
        "x": 315,
        "y": 1500,
        "wires": [
            [
                "b33034fc882e1ebf"
            ]
        ]
    },
    {
        "id": "afd8e1af9832c136",
        "type": "link out",
        "z": "1f8fca6e95b1a2a9",
        "name": "updateSubmodelElement out",
        "mode": "return",
        "links": [],
        "x": 2465,
        "y": 1500,
        "wires": []
    },
    {
        "id": "de0925a0d9626237",
        "type": "link in",
        "z": "1f8fca6e95b1a2a9",
        "name": "addConceptDescription in",
        "links": [],
        "x": 315,
        "y": 1620,
        "wires": [
            [
                "3fe67a0cc320c7cc"
            ]
        ]
    },
    {
        "id": "d7f83c2d0a137eb2",
        "type": "link out",
        "z": "1f8fca6e95b1a2a9",
        "name": "addConceptDescription out",
        "mode": "return",
        "links": [],
        "x": 2465,
        "y": 1620,
        "wires": []
    },
    {
        "id": "eb8449ba3d618d2f",
        "type": "file",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1340,
        "y": 1720,
        "wires": [
            [
                "7fbabdd86a0fe9fe"
            ]
        ]
    },
    {
        "id": "f7d8bf52c7961833",
        "type": "switch",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1510,
        "y": 1460,
        "wires": [
            [
                "f8e1fb4217960468",
                "9d52563a1d0e86d3"
            ],
            [
                "afd8e1af9832c136"
            ]
        ]
    },
    {
        "id": "b33034fc882e1ebf",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "BuildingJsonataQuery...",
        "func": "//var xml_string = msg.payload;\n//var XML = context.global.get('XML');\n\nmsg.submodelElement = msg.payload;\nmsg.submodelElementId = msg.req.params.id;\nmsg.req.params.id = msg.req.params.submodelId;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 1500,
        "wires": [
            [
                "ae05b3b367e7539f"
            ]
        ]
    },
    {
        "id": "f8e1fb4217960468",
        "type": "debug",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1490,
        "y": 1400,
        "wires": []
    },
    {
        "id": "f90461574c80e20f",
        "type": "link call",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "links": [
            "9c082c01ee94eb9b"
        ],
        "timeout": "30",
        "x": 1310,
        "y": 1460,
        "wires": [
            [
                "f7d8bf52c7961833"
            ]
        ]
    },
    {
        "id": "19a8fa8afdf6b4da",
        "type": "debug",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 1420,
        "wires": []
    },
    {
        "id": "ae05b3b367e7539f",
        "type": "link call",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "links": [
            "384ba421ea747453"
        ],
        "timeout": "30",
        "x": 730,
        "y": 1500,
        "wires": [
            [
                "19a8fa8afdf6b4da",
                "49cd6600b366eb08"
            ]
        ]
    },
    {
        "id": "49cd6600b366eb08",
        "type": "switch",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 1500,
        "wires": [
            [
                "474a5356a6eda3ae"
            ],
            [
                "afd8e1af9832c136"
            ]
        ]
    },
    {
        "id": "474a5356a6eda3ae",
        "type": "change",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "req.params.id",
                "pt": "msg",
                "to": "submodelElementId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 1460,
        "wires": [
            [
                "f90461574c80e20f"
            ]
        ]
    },
    {
        "id": "8d4f6e35629bfc07",
        "type": "link call",
        "z": "1f8fca6e95b1a2a9",
        "name": "",
        "links": [
            "4b45b982539cccba"
        ],
        "timeout": "30",
        "x": 2370,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "9d52563a1d0e86d3",
        "type": "function",
        "z": "1f8fca6e95b1a2a9",
        "name": "preprocessing and flattening JSON",
        "func": "function getFlatObject(object) {\n    function iter(o, p) {\n        if (o && typeof o === 'object') {\n            Object.keys(o).forEach(function (k) {\n                iter(o[k], p.concat(k));\n            });\n            return;\n        }\n        path[p.join('.')] = o;\n    }\n\n    var path = {};\n    iter(object, []);\n    return path;\n}\n\n\nlet flattenObject = getFlatObject(JSON.parse(msg.value));\nlet keys = Object.keys(flattenObject);\nmsg.flattenObject = flattenObject;\nfor(let keyIndex = 0; keyIndex < keys.length; keyIndex++){\n    let substringsArray = keys[keyIndex].split(\".\");\n    keys[keyIndex] = keys[keyIndex].replace(\".\" + substringsArray[substringsArray.length - 1], \"\");\n}\nlet uniqueKeys = Array.from(new Set(keys));\nlet pathsToUpdate = [];\nif(uniqueKeys.length > 1){\n    for (let uniqueKeyIndex = 0; uniqueKeyIndex < uniqueKeys.length; uniqueKeyIndex++){\n        uniqueKeys[uniqueKeyIndex] = msg.submodelElementId + \".\" + uniqueKeys[uniqueKeyIndex];\n        pathsToUpdate.push(uniqueKeys[uniqueKeyIndex]);\n    }\n} else {\n    uniqueKeys[0] = msg.submodelElementId;\n    pathsToUpdate.push(uniqueKeys[0]);\n}\nmsg.pathsToUpdate = pathsToUpdate;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 1440,
        "wires": [
            [
                "8b9a4bcfa15c7cc3",
                "d01d9f96630562be"
            ]
        ]
    },
    {
        "id": "d01d9f96630562be",
        "type": "unsafe-function",
        "z": "1f8fca6e95b1a2a9",
        "name": "UpdatingSubmodelElement...",
        "func": "let submodelElement = \"\";\nlet submodelElementId = msg.req.params.id;\nlet submodelId = msg.req.params.submodelId;\nlet persist = \"false\";\nif (msg.req.query.content == \"value\") {\n\n    msg.payload.value = msg.submodelElement[msg.submodelElementId];\n    submodelElement = msg.payload;\n\n} else {\n    submodelElement = msg.submodelElement;\n    persist = \"true\";\n}\n\n\nlet updateSubmodelElementValues = function (submodelElements, indexIdPath, collectionIds, value) {\n\n    if (indexIdPath < collectionIds.length) {\n\n        let idPath = collectionIds[indexIdPath];\n\n        for (let submodelElement = 0; submodelElement < submodelElements.length; submodelElement++) {\n\n            let submodelElementIdentifier = submodelElements[submodelElement].idShort;\n\n            let modelType = submodelElements[submodelElement].modelType.name;\n\n            if (submodelElementIdentifier === idPath && modelType === \"SubmodelElementCollection\" && indexIdPath < (collectionIds.length - 1)) {\n\n                indexIdPath = indexIdPath + 1;\n\n                return updateSubmodelElementValues(submodelElements[submodelElement].value, indexIdPath, collectionIds, value);\n\n            } else if (submodelElementIdentifier === idPath && modelType === \"SubmodelElementCollection\" && indexIdPath === (collectionIds.length - 1)) {\n\n                let values = JSON.parse(value);\n\n                let keys = Object.keys(values);\n\n                for (let keyIndex = 0; keyIndex < keys.length; keyIndex++) {\n\n                    let selectedValue = 0;\n\n                    selectedValue = values[keys[keyIndex]];\n                    //msg.debug15 = selectedValue;\n\n                    //msg.debug15 = selectedValue;\n                    if (typeof selectedValue != 'object') {\n                        for (let valuesIndex = 0; valuesIndex < submodelElements[submodelElement].value.length; valuesIndex++) {\n                            if (submodelElements[submodelElement].value[valuesIndex].idShort == keys[keyIndex]) {\n                                submodelElements[submodelElement].value[valuesIndex].value = selectedValue;\n                                break;\n\n                            }\n                        }\n                    }\n\n\n                }\n\n                return true;\n\n            }\n            else if (submodelElementIdentifier === idPath && modelType === \"Property\") {\n                //msg.debug11 = \"Entrei \" + submodelElements[submodelElement].idShort + \" and \" + idPath + \" \" + value;\n                submodelElements[submodelElement].value = value;\n\n                return true;\n\n            }\n\n        }\n\n    } else {\n\n        return false;\n\n    }\n\n}\n\nvar submodelCollectionId = [];\n\nlet manifest = context.flow.get(\"manifest\");\nif (msg.jsonataStatus == \"Success\") {\n\n    let submodelRoot = msg.jsonataResult[0];\n\n    let pathsToSubmodelElements = msg.pathsToUpdate;\n\n    let submodelRootIdentifier = submodelRoot.identification.id;\n\n    let manifestSubmodels = manifest.submodels;\n\n    let manifestSubmodelElements = {};\n\n    let stratingJsonDecomposition = msg.submodelElementId.split(\".\");\n\n    for (let manifestSubmodel = 0; manifestSubmodel < manifestSubmodels.length; manifestSubmodel++) {\n\n        let manifestSubmodelIdentifier = manifestSubmodels[manifestSubmodel].identification.id;\n\n        if (submodelRootIdentifier === manifestSubmodelIdentifier) {\n\n            manifestSubmodelElements = manifestSubmodels[manifestSubmodel].submodelElements;\n\n        }\n\n    }\n\n    for (let pathIndex = 0; pathIndex < pathsToSubmodelElements.length; pathIndex++) {\n\n        let collectionIds = pathsToSubmodelElements[pathIndex].split(\".\");\n\n        let value = msg.submodelElement[msg.submodelElementId];\n\n        let jsonObjectValue = {};\n\n        let processedValue = {};\n\n        if (collectionIds.length > 1) {\n            jsonObjectValue = JSON.parse(value);\n            let decomposeJsonObj = jsonObjectValue;\n            for (let index = stratingJsonDecomposition.length; index < collectionIds.length; index++) {\n                decomposeJsonObj = decomposeJsonObj[collectionIds[index]];\n            }\n            processedValue = JSON.stringify(decomposeJsonObj)\n\n        } else {\n            processedValue = msg.value;\n        }\n\n        updateSubmodelElementValues(manifestSubmodelElements, 0, collectionIds, processedValue);\n\n    }\n    context.flow.set(\"manifest\", manifest);\n\n    if (persist == \"true\") {\n\n        return [msg, null];\n\n    } else {\n\n        return [null, msg];\n    }\n\n} else {\n    msg.statusCode = \"404\";\n    msg.payload = \"Submodel with id:\" + submodelId + \" not found\";\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 2090,
        "y": 1440,
        "wires": [
            [
                "8d4f6e35629bfc07",
                "afd8e1af9832c136"
            ],
            [
                "afd8e1af9832c136"
            ]
        ]
    },
    {
        "id": "8b9a4bcfa15c7cc3",
        "type": "debug",
        "z": "1f8fca6e95b1a2a9",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1920,
        "y": 1400,
        "wires": []
    },
    {
        "id": "df569e54e7a4a526",
        "type": "comment",
        "z": "9d0a4a1a731ec486",
        "name": "Internal Interface Entry Point",
        "info": "",
        "x": 260,
        "y": 20,
        "wires": []
    },
    {
        "id": "e0dd61d280abb8c6",
        "type": "inject",
        "z": "9d0a4a1a731ec486",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 225.952392578125,
        "y": 75.857177734375,
        "wires": [
            [
                "642d69a929672990"
            ]
        ]
    },
    {
        "id": "642d69a929672990",
        "type": "unsafe-function",
        "z": "9d0a4a1a731ec486",
        "name": "flowVariables",
        "func": "context.flow.set('subscriptions', []);\ncontext.global.set('statusCheckSBI', \"\");",
        "outputs": 1,
        "noerr": 0,
        "x": 810.3273315429688,
        "y": 75.85719299316406,
        "wires": [
            []
        ]
    },
    {
        "id": "6d701f7990f575fe",
        "type": "debug",
        "z": "9d0a4a1a731ec486",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 660,
        "wires": []
    },
    {
        "id": "b1998196941bb397",
        "type": "unsafe-function",
        "z": "9d0a4a1a731ec486",
        "name": "getSubscriptions",
        "func": "var subscriptions = context.flow.get(\"subscriptions\") || [];\nmsg.payload = subscriptions;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 900,
        "wires": [
            [
                "fbc26ba37b5264ad"
            ]
        ]
    },
    {
        "id": "e7d6071e58b5f8ed",
        "type": "msg-speed",
        "z": "9d0a4a1a731ec486",
        "name": "",
        "frequency": "min",
        "interval": "1",
        "estimation": true,
        "ignore": false,
        "x": 910,
        "y": 620,
        "wires": [
            [
                "f3948591a0beefe1"
            ],
            [
                "d472df093e9733c0"
            ]
        ]
    },
    {
        "id": "b2e64e25d8e236b4",
        "type": "unsafe-function",
        "z": "9d0a4a1a731ec486",
        "name": "stats",
        "func": "let subscriptions = context.flow.get(\"subscriptions\");\nif(subscriptions.length > 0){\n    let stats = context.global.get(\"statsNBI\");\n    let msgSize = msg.averageMsgSize;\n    let msgSizeIntervalAndFrequency = msg.intervalAndFrequency;\n    stats.msgSize = msgSize;\n    stats.msgSizeIntervalAndFrequency = msgSizeIntervalAndFrequency;\n    context.global.set(\"statsNBI\", stats);\n} else {\n    let stats = context.global.get(\"statsNBI\");\n    let msgSize = 0;\n    let msgSizeIntervalAndFrequency = \"n/a\";\n    stats.msgSize = msgSize;\n    stats.msgSizeIntervalAndFrequency = msgSizeIntervalAndFrequency;\n    context.global.set(\"statsNBI\", stats);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1950,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "bc0a92aa1b05a5dc",
        "type": "unsafe-function",
        "z": "9d0a4a1a731ec486",
        "name": "set Stats SBI Variable",
        "func": "context.global.set(\"statsSBI\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 700,
        "wires": [
            [
                "0b5c606adde7f987"
            ]
        ]
    },
    {
        "id": "0b5c606adde7f987",
        "type": "debug",
        "z": "9d0a4a1a731ec486",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 700,
        "wires": []
    },
    {
        "id": "3752c6116fba6c49",
        "type": "unsafe-function",
        "z": "9d0a4a1a731ec486",
        "name": "checkHealthStatus",
        "func": "var statusCheck = msg.payload.statusCheck;\ncontext.global.set(\"statusCheckSBI\", statusCheck);\nmsg.payload = { \"statusCheckSBI\": statusCheck };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1440,
        "y": 1160,
        "wires": [
            [
                "9b6b87ad61de2a87"
            ]
        ]
    },
    {
        "id": "3151238eaa4fd414",
        "type": "inject",
        "z": "9d0a4a1a731ec486",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "connectionStatusCheck",
        "payloadType": "str",
        "x": 370,
        "y": 1160,
        "wires": [
            [
                "815fd50a35b7ade0"
            ]
        ]
    },
    {
        "id": "c41750f33ed7b45b",
        "type": "debug",
        "z": "9d0a4a1a731ec486",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 1060,
        "wires": []
    },
    {
        "id": "9b6b87ad61de2a87",
        "type": "link out",
        "z": "9d0a4a1a731ec486",
        "name": "status_SBI_Out",
        "mode": "link",
        "links": [
            "ee990a7f5736a5fe"
        ],
        "x": 1885,
        "y": 1160,
        "wires": []
    },
    {
        "id": "6693855381dc97b0",
        "type": "unsafe-function",
        "z": "9d0a4a1a731ec486",
        "name": "prepare Observation",
        "func": "//var observation = JSON.parse(msg.payload);\nvar subscriptions = context.flow.get(\"subscriptions\");\nvar outMsgs = [];\nfor (var subscription = 0; subscription < subscriptions.length; subscription++) {\n    //var splittedSubscription = subscriptions[subscription].split(\";\");\n    //if (msg.payload.source.includes(splittedSubscription[0]) && msg.payload.source.includes(splittedSubscription[1]) && msg.payload.source.includes(splittedSubscription[2])){\n    if (msg.payload.source.includes(subscription)) {\n        var observation = msg.payload;\n        //observation.source = context.global.get(\"AASIdentifier\");\n        var outMsg = observation;\n        outMsgs.push(outMsg);\n        //msg.topic = splittedSubscription[3];\n    }\n}\n//var observation = msg.payload;\n//observation.source = context.global.get(\"AASIdentifier\");\n//msg.payload = observation;\n//return msg;\nreturn [outMsgs];",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 600,
        "wires": [
            [
                "1915db9ffc9d04f1",
                "630eda9e78ca1fd0"
            ]
        ]
    },
    {
        "id": "1915db9ffc9d04f1",
        "type": "debug",
        "z": "9d0a4a1a731ec486",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1590,
        "y": 560,
        "wires": []
    },
    {
        "id": "e660318fd192afea",
        "type": "link out",
        "z": "9d0a4a1a731ec486",
        "name": "CallbackOut",
        "mode": "link",
        "links": [
            "8c3f42ffe492f7e3"
        ],
        "x": 1995,
        "y": 620,
        "wires": []
    },
    {
        "id": "630eda9e78ca1fd0",
        "type": "msg-size",
        "z": "9d0a4a1a731ec486",
        "name": "",
        "frequency": "min",
        "interval": 1,
        "statusContent": "avg",
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "humanReadableStatus": true,
        "x": 1700,
        "y": 600,
        "wires": [
            [
                "b2e64e25d8e236b4"
            ],
            [
                "e660318fd192afea"
            ]
        ]
    },
    {
        "id": "f3948591a0beefe1",
        "type": "unsafe-function",
        "z": "9d0a4a1a731ec486",
        "name": "stats",
        "func": "let subscriptions = context.flow.get(\"subscriptions\");\nif(subscriptions.length > 0){\n    let stats = context.global.get(\"statsNBI\") || {};\n    let msgSpeed = msg.payload;\n    let msgIntervalAndFrequency = msg.intervalAndFrequency;\n    stats.msgSpeed = msgSpeed;\n    stats.IntervalAndFrequency = msgIntervalAndFrequency;\n    context.global.set(\"statsNBI\", stats);\n} else {\n    let stats = context.global.get(\"statsNBI\") || {};\n    let msgSpeed = 0;\n    let msgIntervalAndFrequency = \"n/a\";\n    stats.msgSpeed = msgSpeed;\n    stats.IntervalAndFrequency = msgIntervalAndFrequency;\n    context.global.set(\"statsNBI\", stats);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "dcb6162414f4c417",
        "type": "sub-link-output",
        "z": "9d0a4a1a731ec486",
        "inputs": 0,
        "name": "",
        "topic": "metrics",
        "link": "d2edf304.fdfa2",
        "priority": "0",
        "aliasType": "str",
        "alias": "",
        "clone": false,
        "x": 210,
        "y": 700,
        "wires": [
            [
                "bc0a92aa1b05a5dc"
            ],
            [
                "e7f131f4936d354e"
            ]
        ]
    },
    {
        "id": "e7f131f4936d354e",
        "type": "debug",
        "z": "9d0a4a1a731ec486",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 740,
        "wires": []
    },
    {
        "id": "40878416e43b7c1d",
        "type": "sub-link-output",
        "z": "9d0a4a1a731ec486",
        "inputs": 0,
        "name": "",
        "topic": "routed",
        "link": "d2edf304.fdfa2",
        "priority": "0",
        "aliasType": "str",
        "alias": "",
        "clone": false,
        "x": 210,
        "y": 620,
        "wires": [
            [
                "e7d6071e58b5f8ed"
            ],
            [
                "6d701f7990f575fe"
            ]
        ]
    },
    {
        "id": "d472df093e9733c0",
        "type": "Load Balance",
        "z": "9d0a4a1a731ec486",
        "defaultcapacity": 100,
        "dynamic": "d7e6d6dc.d37318",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 3,
        "routes": "2",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 1120,
        "y": 620,
        "wires": [
            [],
            [
                "6693855381dc97b0"
            ],
            [
                "50076283c3718680"
            ]
        ]
    },
    {
        "id": "50076283c3718680",
        "type": "unsafe-function",
        "z": "9d0a4a1a731ec486",
        "name": "prepare Observation",
        "func": "//var observation = JSON.parse(msg.payload);\nvar subscriptions = context.flow.get(\"subscriptions\");\nvar outMsgs = [];\nfor (var subscription = 0; subscription < subscriptions.length; subscription++) {\n    //var splittedSubscription = subscriptions[subscription].split(\";\");\n    //if (msg.payload.source.includes(splittedSubscription[0]) && msg.payload.source.includes(splittedSubscription[1]) && msg.payload.source.includes(splittedSubscription[2])){\n    if (msg.payload.source.includes(subscription)) {\n        var observation = msg.payload;\n        //observation.source = context.global.get(\"AASIdentifier\");\n        var outMsg = observation;\n        outMsgs.push(outMsg);\n        //msg.topic = splittedSubscription[3];\n    }\n}\n//var observation = msg.payload;\n//observation.source = context.global.get(\"AASIdentifier\");\n//msg.payload = observation;\n//return msg;\nreturn [outMsgs];",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 640,
        "wires": [
            [
                "630eda9e78ca1fd0"
            ]
        ]
    },
    {
        "id": "80a1dd75dff93a47",
        "type": "link in",
        "z": "9d0a4a1a731ec486",
        "name": "callSBIReadSubscriptions in",
        "links": [],
        "x": 205,
        "y": 900,
        "wires": [
            [
                "b1998196941bb397"
            ]
        ]
    },
    {
        "id": "fbc26ba37b5264ad",
        "type": "link out",
        "z": "9d0a4a1a731ec486",
        "name": "callSBIReadSubscriptions out",
        "mode": "return",
        "links": [],
        "x": 1885,
        "y": 900,
        "wires": []
    },
    {
        "id": "70803aaf1f9c3d39",
        "type": "sub-link-output",
        "z": "9d0a4a1a731ec486",
        "inputs": 0,
        "name": "",
        "topicType": "string",
        "topic": "updateValue",
        "link": "d2edf304.fdfa2",
        "hasdatainput": false,
        "priorityType": "num",
        "priority": "0",
        "aliasType": "string",
        "alias": "",
        "outputstat": "",
        "outputstatType": "string",
        "aliasMatchAll": false,
        "clone": false,
        "x": 230,
        "y": 800,
        "wires": [
            [
                "27712032c4eddaf1"
            ],
            []
        ]
    },
    {
        "id": "27712032c4eddaf1",
        "type": "unsafe-function",
        "z": "9d0a4a1a731ec486",
        "name": "prepareUpdate",
        "func": "var update = {};\nupdate.link = msg.payload.link;\nupdate.value = msg.payload.data;\nupdate.content = \"value\";\nreturn update;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 800,
        "wires": [
            [
                "24dc26374930b1c6",
                "0b524a58fefb9583"
            ]
        ]
    },
    {
        "id": "24dc26374930b1c6",
        "type": "debug",
        "z": "9d0a4a1a731ec486",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 780,
        "wires": []
    },
    {
        "id": "0b524a58fefb9583",
        "type": "link out",
        "z": "9d0a4a1a731ec486",
        "name": "updateValueCallback",
        "mode": "link",
        "links": [
            "fe530b549528d690"
        ],
        "x": 1895,
        "y": 800,
        "wires": []
    },
    {
        "id": "97b60a3d5fa206c9",
        "type": "unsafe-function",
        "z": "9d0a4a1a731ec486",
        "name": "UpdateSubscriptions",
        "func": "var subscriptions = context.flow.get(\"subscriptions\");\nvar subscription = msg.payload.source;\nif (msg.topic === \"observe\") {\n    if (subscriptions.includes(subscription)) return null;\n    else {\n        subscriptions.push(subscription);\n        context.flow.set(\"subscriptions\", subscriptions);\n        return msg;\n    }\n} else if (msg.topic === \"unobserve\") {\n    if (subscriptions.length > 0) {\n        for (var index = 0; index < subscriptions.length; index++) {\n            if (subscriptions[index] === subscription) {\n                subscriptions.splice(index, 1);\n                context.flow.set(\"subscriptions\", subscriptions);\n                return msg;\n            }\n        }\n    }\n    return msg;\n\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 1300,
        "wires": [
            [
                "f87267f94c39aa45"
            ]
        ]
    },
    {
        "id": "a58077a81d8cfa04",
        "type": "unsafe-function",
        "z": "9d0a4a1a731ec486",
        "name": "ResetSubscriptions",
        "func": "context.flow.set(\"subscriptions\", []);\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 1380,
        "wires": [
            [
                "c5a4012521020951"
            ]
        ]
    },
    {
        "id": "dba8a48c1bcf050e",
        "type": "debug",
        "z": "9d0a4a1a731ec486",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 1240,
        "wires": []
    },
    {
        "id": "91d2d05cf9a93292",
        "type": "function",
        "z": "9d0a4a1a731ec486",
        "name": "prepare INSERT Statement",
        "func": "let observation = msg.payload;\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\";\nmsg.payload = [context.global.get('AASIdentifier'), observation.observableReference, observation.timestamp, observation.payload];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1240,
        "wires": [
            [
                "37faf8281e1dea17"
            ]
        ]
    },
    {
        "id": "37faf8281e1dea17",
        "type": "sqlite",
        "z": "9d0a4a1a731ec486",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 1090,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "815fd50a35b7ade0",
        "type": "actionflows",
        "z": "9d0a4a1a731ec486",
        "info": "Describe your action API here.",
        "untilproptype": "num",
        "proptype": "msg",
        "name": "driver.connection.check",
        "prop": "loop",
        "untilprop": 0,
        "until": "gt",
        "loop": "none",
        "scope": "global",
        "perf": false,
        "seq": false,
        "x": 1130,
        "y": 1160,
        "wires": [
            [
                "3752c6116fba6c49",
                "c41750f33ed7b45b"
            ]
        ]
    },
    {
        "id": "836bdd4cdf3177cf",
        "type": "actionflows_in",
        "z": "9d0a4a1a731ec486",
        "name": "southbound.resetSubscriptions in",
        "priority": "50",
        "links": [],
        "scope": "global",
        "x": 280,
        "y": 1380,
        "wires": [
            [
                "a58077a81d8cfa04"
            ]
        ]
    },
    {
        "id": "c5a4012521020951",
        "type": "actionflows_out",
        "z": "9d0a4a1a731ec486",
        "name": "southbound.resetSubscriptions out",
        "links": [],
        "x": 1760,
        "y": 1380,
        "wires": []
    },
    {
        "id": "bcbf21e0c279a595",
        "type": "actionflows_in",
        "z": "9d0a4a1a731ec486",
        "name": "southbound.updateSubscriptions in",
        "priority": "50",
        "links": [],
        "scope": "global",
        "x": 280,
        "y": 1300,
        "wires": [
            [
                "dba8a48c1bcf050e",
                "91d2d05cf9a93292",
                "97b60a3d5fa206c9"
            ]
        ]
    },
    {
        "id": "f87267f94c39aa45",
        "type": "actionflows_out",
        "z": "9d0a4a1a731ec486",
        "name": "southbound.updateSubscriptions out",
        "links": [],
        "x": 1770,
        "y": 1300,
        "wires": []
    },
    {
        "id": "dd6fb1672ec38d5d",
        "type": "unsafe-function",
        "z": "2bb36f52570181cc",
        "name": "PayloadProcessing",
        "func": "var msg1 = {};\nlet observation = {};\nobservation.id = msg.id;\nobservation.source = msg.source;\nobservation.direction = msg.direction;\nobservation.observableReference = msg.observableReference;\nobservation.timestamp = msg.timestamp;\nobservation.payload = msg.payload;\nobservation.topic = \"observation\";\nmsg1.topic = msg.payload.observableReference;\nmsg1.payload = observation;\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 620,
        "wires": [
            [
                "6952100cf092a1ce",
                "69dc89062b2adbca"
            ]
        ]
    },
    {
        "id": "6952100cf092a1ce",
        "type": "debug",
        "z": "2bb36f52570181cc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1230,
        "y": 580,
        "wires": []
    },
    {
        "id": "8f63603a7968c92b",
        "type": "debug",
        "z": "2bb36f52570181cc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 990,
        "y": 460,
        "wires": []
    },
    {
        "id": "302ba36c1b24cc96",
        "type": "mqtt out",
        "z": "2bb36f52570181cc",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "e70d9188.7d95e",
        "x": 2150,
        "y": 620,
        "wires": []
    },
    {
        "id": "c1b013149082185b",
        "type": "comment",
        "z": "2bb36f52570181cc",
        "name": "To MQTT",
        "info": "",
        "x": 760,
        "y": 440,
        "wires": []
    },
    {
        "id": "e7d2140a6ffad7a9",
        "type": "Load Balance",
        "z": "2bb36f52570181cc",
        "defaultcapacity": 100,
        "dynamic": "d7e6d6dc.d37318",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 3,
        "routes": "2",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 1920,
        "y": 620,
        "wires": [
            [],
            [
                "b12b6bcf73655799",
                "302ba36c1b24cc96"
            ],
            [
                "78f1b5cd9e8fa507"
            ]
        ]
    },
    {
        "id": "78f1b5cd9e8fa507",
        "type": "mqtt out",
        "z": "2bb36f52570181cc",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "e70d9188.7d95e",
        "x": 2150,
        "y": 700,
        "wires": []
    },
    {
        "id": "b12b6bcf73655799",
        "type": "debug",
        "z": "2bb36f52570181cc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1950,
        "y": 560,
        "wires": []
    },
    {
        "id": "80bb0ea5fd5039f5",
        "type": "link in",
        "z": "2bb36f52570181cc",
        "name": "MQTT in",
        "links": [],
        "x": 775,
        "y": 540,
        "wires": [
            [
                "dd6fb1672ec38d5d",
                "8f63603a7968c92b",
                "5dba91ad3657b9d2"
            ]
        ]
    },
    {
        "id": "5dba91ad3657b9d2",
        "type": "link out",
        "z": "2bb36f52570181cc",
        "name": "MQTT out",
        "mode": "return",
        "links": [],
        "x": 2215,
        "y": 540,
        "wires": []
    },
    {
        "id": "69dc89062b2adbca",
        "type": "switch",
        "z": "2bb36f52570181cc",
        "name": "",
        "property": "encrypt",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1230,
        "y": 620,
        "wires": [
            [
                "e7d2140a6ffad7a9"
            ],
            [
                "1b61ca6df06e72bf"
            ]
        ]
    },
    {
        "id": "1d7b14bb401fe1ba",
        "type": "inject",
        "z": "2bb36f52570181cc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 670,
        "y": 740,
        "wires": [
            [
                "a61e47ad25c9924a"
            ]
        ]
    },
    {
        "id": "a61e47ad25c9924a",
        "type": "unsafe-function",
        "z": "2bb36f52570181cc",
        "name": "PayloadProcessing",
        "func": "var msg1 = {};\nlet observation = {};\nobservation.id = \"test\";\nobservation.source = \"myAAS\";\nobservation.direction = \"out\";\nobservation.observableReference = \"msg.observableReference\";\nobservation.timestamp = \"msg.timestamp\";\nobservation.payload = \"msg.payload\";\nobservation.topic = \"msg.topic\";\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 740,
        "wires": [
            [
                "69dc89062b2adbca"
            ]
        ]
    },
    {
        "id": "9b9cb4038193d1bc",
        "type": "unsafe-function",
        "z": "2bb36f52570181cc",
        "name": "PayloadProcessing",
        "func": "var msg1 = {};\nlet observation = {};\nobservation.id = msg.id;\nobservation.source = msg.source;\nobservation.direction = msg.direction;\nobservation.observableReference = msg.observableReference;\nobservation.timestamp = msg.timestamp;\nobservation.payload = msg.payload;\nobservation.topic = \"observation\";\n//msg1.topic = msg.payload.observableReference;\nmsg1.payload = observation;\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 1100,
        "wires": [
            [
                "0a4f0d6897869f20",
                "2a6c84c652f6ddcb"
            ]
        ]
    },
    {
        "id": "b3b3730ce57a7c03",
        "type": "debug",
        "z": "2bb36f52570181cc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 910,
        "y": 1020,
        "wires": []
    },
    {
        "id": "0a4f0d6897869f20",
        "type": "debug",
        "z": "2bb36f52570181cc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1570,
        "y": 1100,
        "wires": []
    },
    {
        "id": "2b0b7d6e642ceb09",
        "type": "link in",
        "z": "2bb36f52570181cc",
        "name": "KAFKA in",
        "links": [],
        "x": 775,
        "y": 1060,
        "wires": [
            [
                "32a6b2c8521831fe",
                "b3b3730ce57a7c03",
                "9b9cb4038193d1bc"
            ]
        ]
    },
    {
        "id": "32a6b2c8521831fe",
        "type": "link out",
        "z": "2bb36f52570181cc",
        "name": "KAFKA out",
        "mode": "return",
        "links": [],
        "x": 2255,
        "y": 1060,
        "wires": []
    },
    {
        "id": "2a6c84c652f6ddcb",
        "type": "switch",
        "z": "2bb36f52570181cc",
        "name": "",
        "property": "encrypt",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 1140,
        "wires": [
            [
                "b69559c80391feef"
            ],
            [
                "99afa4795e2a8103",
                "31f7caf21b01a7d1"
            ]
        ]
    },
    {
        "id": "7cdc10162d9c94f1",
        "type": "debug",
        "z": "2bb36f52570181cc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1750,
        "y": 1400,
        "wires": []
    },
    {
        "id": "2b8ce0d9cb66702d",
        "type": "debug",
        "z": "2bb36f52570181cc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1750,
        "y": 1440,
        "wires": []
    },
    {
        "id": "89a1860fb014494e",
        "type": "debug",
        "z": "2bb36f52570181cc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1770,
        "y": 1660,
        "wires": []
    },
    {
        "id": "bbb6590861265717",
        "type": "inject",
        "z": "2bb36f52570181cc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "listTopics",
        "payload": "",
        "payloadType": "date",
        "x": 1300,
        "y": 1420,
        "wires": [
            [
                "ee09a0963da38b3d"
            ]
        ]
    },
    {
        "id": "b69559c80391feef",
        "type": "Load Balance",
        "z": "2bb36f52570181cc",
        "defaultcapacity": 100,
        "dynamic": "5fdfa5823b539d92",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "discard",
        "nocapacity": "admin",
        "outputs": 3,
        "routes": "2",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 1900,
        "y": 1140,
        "wires": [
            [],
            [
                "fc069e84dbfb132f"
            ],
            [
                "ee964050e5427525"
            ]
        ]
    },
    {
        "id": "99afa4795e2a8103",
        "type": "debug",
        "z": "2bb36f52570181cc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1450,
        "y": 1160,
        "wires": []
    },
    {
        "id": "11f0729c8cf17024",
        "type": "debug",
        "z": "2bb36f52570181cc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1710,
        "y": 1300,
        "wires": []
    },
    {
        "id": "7c04ba43a0287cc9",
        "type": "link in",
        "z": "2bb36f52570181cc",
        "name": "encrypt in",
        "links": [],
        "x": 795,
        "y": 1920,
        "wires": [
            [
                "3e59d0f890180f95"
            ]
        ]
    },
    {
        "id": "94aa9a90f0b398cb",
        "type": "link out",
        "z": "2bb36f52570181cc",
        "name": "encrypt out",
        "mode": "return",
        "links": [],
        "x": 2035,
        "y": 1920,
        "wires": []
    },
    {
        "id": "3e59d0f890180f95",
        "type": "encrypt",
        "z": "2bb36f52570181cc",
        "name": "",
        "algorithm": "AES",
        "key": "bd4nrg",
        "x": 1400,
        "y": 1920,
        "wires": [
            [
                "94aa9a90f0b398cb"
            ]
        ]
    },
    {
        "id": "31f7caf21b01a7d1",
        "type": "link call",
        "z": "2bb36f52570181cc",
        "name": "",
        "links": [
            "7c04ba43a0287cc9"
        ],
        "timeout": "30",
        "x": 1500,
        "y": 1220,
        "wires": [
            [
                "11f0729c8cf17024",
                "b69559c80391feef"
            ]
        ]
    },
    {
        "id": "1b61ca6df06e72bf",
        "type": "link call",
        "z": "2bb36f52570181cc",
        "name": "",
        "links": [
            "7c04ba43a0287cc9"
        ],
        "timeout": "30",
        "x": 1520,
        "y": 680,
        "wires": [
            [
                "e7d2140a6ffad7a9"
            ]
        ]
    },
    {
        "id": "ee09a0963da38b3d",
        "type": "Kafka Admin",
        "z": "2bb36f52570181cc",
        "name": "",
        "broker": "ee329406e3eb7f0e",
        "x": 1550,
        "y": 1420,
        "wires": [
            [
                "7cdc10162d9c94f1"
            ],
            [
                "2b8ce0d9cb66702d"
            ]
        ]
    },
    {
        "id": "fc069e84dbfb132f",
        "type": "Kafka Producer",
        "z": "2bb36f52570181cc",
        "name": "",
        "broker": "ee329406e3eb7f0e",
        "topic": "bd4nrg.LSP09.datastreamer",
        "topicSlash2dot": false,
        "requireAcks": 1,
        "ackTimeoutMs": 100,
        "partitionerType": 0,
        "key": "",
        "partition": 0,
        "attributes": 0,
        "connectionType": "Producer",
        "convertFromJson": false,
        "x": 2160,
        "y": 1140,
        "wires": []
    },
    {
        "id": "ee964050e5427525",
        "type": "Kafka Producer",
        "z": "2bb36f52570181cc",
        "name": "",
        "broker": "ee329406e3eb7f0e",
        "topic": "bd4nrg.LSP09.datastreamer",
        "topicSlash2dot": false,
        "requireAcks": 1,
        "ackTimeoutMs": 100,
        "partitionerType": 0,
        "key": "",
        "partition": 0,
        "attributes": 0,
        "connectionType": "Producer",
        "convertFromJson": false,
        "x": 2160,
        "y": 1200,
        "wires": []
    },
    {
        "id": "4ef530627615c638",
        "type": "Kafka Consumer",
        "z": "2bb36f52570181cc",
        "name": "",
        "broker": "ee329406e3eb7f0e",
        "regex": false,
        "topics": [
            {
                "topic": "bd4nrg.LSP09.datastreamer",
                "offset": 0,
                "partition": 0
            }
        ],
        "groupId": "kafka-node-group",
        "autoCommit": "true",
        "autoCommitIntervalMs": 5000,
        "fetchMaxWaitMs": 100,
        "fetchMinBytes": 1,
        "fetchMaxBytes": 1048576,
        "fromOffset": 0,
        "encoding": "utf8",
        "keyEncoding": "utf8",
        "connectionType": "Consumer",
        "convertToJson": false,
        "x": 1510,
        "y": 1660,
        "wires": [
            [
                "89a1860fb014494e"
            ]
        ]
    },
    {
        "id": "f52bde02d0ea76eb",
        "type": "msg-router",
        "z": "2bb36f52570181cc",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": false,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": false,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 870,
        "y": 200,
        "wires": [
            [
                "b6178b8917b71713"
            ],
            [
                "fb94f2a04659f6e1"
            ],
            []
        ]
    },
    {
        "id": "845847eeac0f59c6",
        "type": "link in",
        "z": "2bb36f52570181cc",
        "name": "callNBI in",
        "links": [],
        "x": 535,
        "y": 200,
        "wires": [
            [
                "f52bde02d0ea76eb"
            ]
        ]
    },
    {
        "id": "3f28b866e64c2330",
        "type": "link out",
        "z": "2bb36f52570181cc",
        "name": "callNBI out",
        "mode": "return",
        "links": [],
        "x": 2475,
        "y": 220,
        "wires": []
    },
    {
        "id": "b6178b8917b71713",
        "type": "link call",
        "z": "2bb36f52570181cc",
        "name": "",
        "links": [
            "80bb0ea5fd5039f5"
        ],
        "timeout": "30",
        "x": 1440,
        "y": 160,
        "wires": [
            [
                "3f28b866e64c2330"
            ]
        ]
    },
    {
        "id": "fb94f2a04659f6e1",
        "type": "link call",
        "z": "2bb36f52570181cc",
        "name": "",
        "links": [
            "2b0b7d6e642ceb09"
        ],
        "timeout": "30",
        "x": 1440,
        "y": 200,
        "wires": [
            [
                "3f28b866e64c2330"
            ]
        ]
    },
    {
        "id": "f9b5420cad128eaf",
        "type": "inject",
        "z": "2bb36f52570181cc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "encrypt_cmd",
        "payload": "on",
        "payloadType": "str",
        "x": 1120,
        "y": 2100,
        "wires": [
            [
                "a89170b27e831c5c"
            ]
        ]
    },
    {
        "id": "5360c0d6891e9fb7",
        "type": "inject",
        "z": "2bb36f52570181cc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "encrypt_cmd",
        "payload": "off",
        "payloadType": "str",
        "x": 1130,
        "y": 2140,
        "wires": [
            [
                "a89170b27e831c5c"
            ]
        ]
    },
    {
        "id": "a89170b27e831c5c",
        "type": "function",
        "z": "2bb36f52570181cc",
        "name": "Encryption",
        "func": "if(msg.topic === \"encrypt_cmd\"){\n    if(msg.payload === \"on\"){\n        context.flow.set(\"encrypt\", true);\n    } else if (msg.payload === \"off\") {\n        context.flow.set(\"encrypt\", false);\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 2120,
        "wires": [
            [
                "8db2cd280f2c6c33"
            ]
        ]
    },
    {
        "id": "8db2cd280f2c6c33",
        "type": "debug",
        "z": "2bb36f52570181cc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 2120,
        "wires": []
    },
    {
        "id": "395743e404967363",
        "type": "ui_form",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Dashboard Login-In",
        "label": "",
        "group": "3c18c574.bda17a",
        "order": 0,
        "width": "0",
        "height": "0",
        "options": [
            {
                "label": "username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "x": 220,
        "y": 3060,
        "wires": [
            [
                "a46fa8ea26c6d884",
                "e489aede3c2517ec"
            ]
        ]
    },
    {
        "id": "3216303cabdc5402",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Debug Account Log ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 640,
        "y": 2960,
        "wires": []
    },
    {
        "id": "2632c4072f52b2b8",
        "type": "comment",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Sign-In Section",
        "info": "",
        "x": 212,
        "y": 2997,
        "wires": []
    },
    {
        "id": "a46fa8ea26c6d884",
        "type": "function",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Account Log",
        "func": "\nlet username = msg.payload.username;\n\nmsg.payload = { accessAt: Date.now(), username: username };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3020,
        "wires": [
            [
                "3216303cabdc5402",
                "dbc2fc614c6fa3c5"
            ]
        ]
    },
    {
        "id": "e489aede3c2517ec",
        "type": "function",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Prepare Login",
        "func": "var accounts =  flow.get(\"accounts\") || [ { username : \"admin\", password : \"admin\"},{ username : \"guest\", password : \"guest\"}] ; \n\nvar username = msg.payload.username ;\nvar password = msg.payload.password ; \n\nvar newMsg = {}; newMsg.payload = 1;\n\n/*accounts.forEach(function ( account ){\n    \n    var accountArray = account.split(\":\");\n    if ( accountArray[0] == username ) {\n       newMsg.payload = 2;\n       if ( accountArray[2] == password ) {\n           newMsg.payload = 0;\n       } \n    }\n});*/\n\nvar outMsg = {};\noutMsg.url = context.global.get(\"namespace\") + \"/aasServer/auth/login\";\noutMsg.headers = {};\noutMsg.headers[\"content-type\"] = \"application/x-www-form-urlencoded\";\noutMsg.payload = {};\noutMsg.payload.grant_type = \"password\";\noutMsg.payload.username = username;\noutMsg.payload.password = password;\noutMsg.payload.client_id = context.global.get(\"authenticationServerClient\");\n//outMsg.payload.client_secret = context.global.get(\"client_secret\");\noutMsg.payload.scope = \"openid\";\n\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 3080,
        "wires": [
            [
                "24779a87b0454dc5"
            ]
        ]
    },
    {
        "id": "69b81d10e7bfd289",
        "type": "switch",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1770,
        "y": 3080,
        "wires": [
            [
                "63913fd8eb922ce3"
            ],
            [
                "fd187cb5917606a1"
            ],
            [
                "994303464edfb348"
            ],
            [
                "283e9395eff5f3ed"
            ]
        ]
    },
    {
        "id": "63913fd8eb922ce3",
        "type": "function",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "= 0 : Success",
        "func": "/* activate session timer */\nvar sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nflow.set(\"sessionTimer\", currTime);\n\n/* ui-control payload */\n\n/*msg.payload = { group: {\n    show : [\"Login_SensorData\", \"Login_History\"],\n    hide : [\"Login_Signin\"]\n}*/\n\n//msg.payload = {tab: \"Manifest\"};\n\nmsg.payload = { group: {\n        //show : [\"Login_Commands\", \"Login_Body\", \"Login_Health\", \"Configs_Configurations\",  \"Reporting_form\"],\n        show: [\"Reporting_form\", \"Login_Commands\"],\n        hide : [\"Login_Login\", \"Reporting_ReportDownload\"]\n    },\n    tabs: {\n        //show: [\"Configs\", \"Reporting\"]\n        show: [\"Reporting\"]\n    },\n    tab: \"Overview\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 3000,
        "wires": [
            [
                "a63f52618625d01a"
            ]
        ]
    },
    {
        "id": "fd187cb5917606a1",
        "type": "function",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "= 1 : Unknown User",
        "func": "msg.payload = \"Invalid user credentials\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2000,
        "y": 3040,
        "wires": [
            [
                "4007cf86aff4f397"
            ]
        ]
    },
    {
        "id": "994303464edfb348",
        "type": "function",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "= 2 : Wrong Password",
        "func": "msg.payload = \"Invalid Credentials\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2000,
        "y": 3080,
        "wires": [
            [
                "4007cf86aff4f397"
            ]
        ]
    },
    {
        "id": "a63f52618625d01a",
        "type": "ui_ui_control",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Go to Manifest Group",
        "x": 2262,
        "y": 3020,
        "wires": [
            []
        ]
    },
    {
        "id": "4007cf86aff4f397",
        "type": "ui_toast",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "topic": "Authentication Failed",
        "name": "Authentication Failure Dialog",
        "x": 2282,
        "y": 3120,
        "wires": [
            []
        ]
    },
    {
        "id": "c162db0ac1a9f30a",
        "type": "comment",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Session Management - 15 secs for this demo",
        "info": "",
        "x": 290,
        "y": 3140,
        "wires": []
    },
    {
        "id": "26d263dba51c71e1",
        "type": "inject",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Timer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 201.99999618530273,
        "y": 3283.000005722046,
        "wires": [
            [
                "7afd60bfc1b1c821",
                "8492f60a755e23f4"
            ]
        ]
    },
    {
        "id": "7afd60bfc1b1c821",
        "type": "function",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Detect Session Timer",
        "func": "var sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nvar SESSION_TIMEOUT = context.flow.get(\"sessionTimeout\"); //30 secs\n\nif ( sessionTimer === 0 /* Inactive, No user signed in */ ) {\n    msg.payload = 2;\n} else {\n    if ( currTime - sessionTimer > SESSION_TIMEOUT ) {\n      msg.payload = 0;  \n    } else {\n      msg.payload = 1;        \n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 386,
        "y": 3244.9999980926514,
        "wires": [
            [
                "ccdafa5aad62132d"
            ]
        ]
    },
    {
        "id": "ccdafa5aad62132d",
        "type": "switch",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1441.5471839904785,
        "y": 3241.0949382781982,
        "wires": [
            [
                "b4d8f47c83944329"
            ],
            [
                "12c3b34b4307095b"
            ],
            [
                "02ade024b47a8949"
            ]
        ]
    },
    {
        "id": "b4d8f47c83944329",
        "type": "function",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Time-Out",
        "func": "/* activate session timer */\nvar sessionTimer =  flow.get(\"sessionTimer\") || 0; \nflow.set(\"sessionTimer\", 0);\ncontext.flow.set(\"selectedElements\", []);\ncontext.flow.set(\"seconds\", 0);\ncontext.flow.set(\"minutes\", 0);\ncontext.flow.set(\"hours\", 0);\ncontext.flow.set(\"userRefreshToken\", \"\");\ncontext.flow.set(\"userToken\", \"\");\n\nmsg.payload = \"Session Expired! Please singin again!\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 3220,
        "wires": [
            [
                "b4a3c4980794cdb3",
                "7fa1c90043a158cd"
            ]
        ]
    },
    {
        "id": "b4a3c4980794cdb3",
        "type": "ui_toast",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Session Timeout",
        "name": "Time-Out Dialog",
        "x": 2013.0472259521484,
        "y": 3178.09494972229,
        "wires": [
            []
        ]
    },
    {
        "id": "aad3d0b9a90e0e5b",
        "type": "ui_ui_control",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Switch Groups",
        "x": 2272,
        "y": 3220,
        "wires": [
            []
        ]
    },
    {
        "id": "7fa1c90043a158cd",
        "type": "function",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Login Redirection",
        "func": "var msg1 = {};\nmsg1.payload = 9;\nvar msg2 = {};\n//msg.payload = {tab: \"Login\"};\nmsg2.payload = {\n    tabs: {\n        //hide: [\"Configs\", \"Reporting\"]\n        hide: [\"Reporting\"]\n    },\n    group: {\n        //hide : [\"Login_Commands\", \"Login_Body\", \"Login_Health\"],\n        hide: [\"Login_Commands\"],\n        show : [\"Login_Login\"]\n}\n};\nreturn [msg1, msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2023.5472259521484,
        "y": 3219.09494304657,
        "wires": [
            [
                "92f5ed938fd7e576"
            ],
            [
                "aad3d0b9a90e0e5b"
            ]
        ]
    },
    {
        "id": "2c1ecc0bb1148e64",
        "type": "ui_toast",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "position": "bottom right",
        "displayTime": "1",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "Timer",
        "name": "Display Remaining Time",
        "x": 1598.0471725463867,
        "y": 3343.0949382781982,
        "wires": []
    },
    {
        "id": "8492f60a755e23f4",
        "type": "function",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Calculating Remaining Time (Debug)",
        "func": "var sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nvar remainingSecs = Math.floor((context.flow.get(\"sessionTimeout\") - (currTime - sessionTimer))/1000) + 1;\n    \nif ( sessionTimer == 0 /* Inactive, No user signed in */ ) {\n    return null;\n} else {\n    \n    if ( remainingSecs <= 7 && remainingSecs >= 0) msg.payload = \"Remaining : \" + remainingSecs + \" secs\";  \n    else return null;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 434,
        "y": 3346.0000133514404,
        "wires": [
            [
                "2c1ecc0bb1148e64"
            ]
        ]
    },
    {
        "id": "07f3a23cd9ad2437",
        "type": "ui_ui_control",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Stay in Sensor Group",
        "x": 2210.047149658203,
        "y": 3257.0949325561523,
        "wires": [
            []
        ]
    },
    {
        "id": "12c3b34b4307095b",
        "type": "function",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Configuration Group",
        "func": "var msg = {};\n\n//msg.payload = {tab: \"Manifest\"};\n\nmsg.payload = { group: {\n    show : [\"Login_Commands\", \"Login_Body\"],\n    hide : [\"Login_Login\"]\n}\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1740,
        "y": 3260,
        "wires": [
            [
                "07f3a23cd9ad2437"
            ]
        ]
    },
    {
        "id": "02ade024b47a8949",
        "type": "function",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Login Group",
        "func": "var msg = {};\n\n//msg.payload = {tab: \"Login\"};\n/*msg.payload = { group: {\n    hide : [\"Login_SensorData\", \"Login_History\"],\n    show : [\"Login_Signin\"]\n}\n};*/\n\nmsg.payload = { group: {\n    hide : [\"Login_Commands\", \"Login_Body\", \"Login_Health\"],\n    show : [\"Login_Login\"]\n}\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 3300,
        "wires": [
            [
                "2bc790cacadc4980"
            ]
        ]
    },
    {
        "id": "2bc790cacadc4980",
        "type": "ui_ui_control",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Go to Signin Group",
        "x": 2215.0472564697266,
        "y": 3298.0949745178223,
        "wires": [
            []
        ]
    },
    {
        "id": "4a572085c9c511dc",
        "type": "ui_template",
        "z": "0230170315d4730f",
        "d": true,
        "g": "606b287e669294f4",
        "group": "f57f5dd7.e298c",
        "name": "Active Subscriptions",
        "order": 0,
        "width": "34",
        "height": "20",
        "format": "    <script>\n        (function(scope) {\n            //scope.connections = [];\n            scope.$watch('msg', function(msg){\n                //scope.connections = [];\n                if (msg) {\n                    if (msg.payload) {\n                        scope.subscriptions = [];\n                        for (var index of msg.payload){\n                            var subscription = msg.payload[index].split(\";\");\n                            scope.subscriptions.push(subscription);\n                        }\n                        //scope.connections = msg.payload;\n                    }\n                }\n            });\n            scope.init = function() {\n                //scope.connections = [];\n                //scope.send({payload:scope.connections});\n            }\n        })(scope)\n    </script>\n    <div id=\"deck\" ng-init=\"init()\">\n        <table class=\"table table-sm\">\n            <thead class=\"text-dark\">\n                <tr>\n                    <th scope=\"col\">AAS Id</th>\n                    <th scope=\"col\">Submodel idShort</th>\n                    <th scope=\"col\">Submodel Element idShort</th>\n                    <th scope=\"col\">Status</th>\n                </tr>\n            </thead>\n            <tbody>\n            <tr class=\"table-info\" ng-repeat=\"s in subscriptions\">\n                <td><a class=\"text-dark\">{{s[0]}}</a></td>\n                <td><a class=\"text-dark\">{{s[1]}}</a></td>\n                <td><a class=\"text-dark\">{{s[2]}}</a></td>\n                <td><a class=\"text-success\">Subscribed</a></td>\n                \n                <!--<td><a class=\"text-dark\">{{i.value}}</a></td>!-->\n                <!--<td style=\"cursor:pointer;\" ng-click=\"remove(i)\" title=\"Remove\">&times;</td>!-->\n            </tr>\n            </tbody>\n            \n        </table>\n    </div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3720,
        "y": 2840,
        "wires": [
            [
                "a3867140af6afc02"
            ]
        ]
    },
    {
        "id": "5bcafd4c8ba31c9b",
        "type": "ui_ui_control",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "name": "",
        "events": "change",
        "x": 2610,
        "y": 2840,
        "wires": [
            [
                "62b8b84973fbeca9"
            ]
        ]
    },
    {
        "id": "865065fb5269b9da",
        "type": "http request",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "authorization",
                "valueType": "msg",
                "valueValue": "userToken"
            }
        ],
        "x": 3070,
        "y": 2840,
        "wires": [
            [
                "1971fadea59f0442",
                "6bac237bbe74ce9a"
            ]
        ]
    },
    {
        "id": "62b8b84973fbeca9",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "name": "",
        "func": "let userToken = context.flow.get(\"userToken\");\nif (typeof userToken != \"undefined\" && userToken !== \"\") {\n    msg.method = 'GET';\n    msg.url = context.global.get('namespace') + \"/aasServer/subscriptions\";\n    msg.userToken = userToken;\n    return msg;\n} else return null;",
        "outputs": 1,
        "noerr": 0,
        "x": 2860,
        "y": 2840,
        "wires": [
            [
                "865065fb5269b9da",
                "c2a7a61d08f8866d"
            ]
        ]
    },
    {
        "id": "a3867140af6afc02",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3910,
        "y": 2820,
        "wires": []
    },
    {
        "id": "1971fadea59f0442",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3230,
        "y": 2880,
        "wires": []
    },
    {
        "id": "e501b3750d4e2f42",
        "type": "inject",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2620,
        "y": 3040,
        "wires": [
            [
                "da875153be997615",
                "62b8b84973fbeca9"
            ]
        ]
    },
    {
        "id": "b79d50cf2c6228a7",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "name": "checkStats",
        "func": "var statsNBI = context.global.get(\"statsNBI\") || 0;\nvar statsSBI = context.global.get(\"statsSBI\") || 0;\nvar msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\n\nif(statsNBI === 0){\n    msg1 = {topic:\"Msg per minute\", payload:0, ui_control:{min:0,max:statsSBI.maxMsgs}};\n    msg2 = {topic:\"Msg per minute\", payload:0};\n} else {\n    msg1 = {topic:\"Msg per \" + statsNBI.IntervalAndFrequency, payload:statsNBI.msgSpeed, ui_control:{min:0,max:statsSBI.maxMsgs}};\n    msg2 = {topic:\"Msg per \" + statsNBI.msgSizeIntervalAndFrequency, payload:statsNBI.msgSize};\n}\n\nif(statsSBI === 0){\n    msg3 = {topic:\"Msg per minute\", payload:0};\n} else {\n    msg3 = {topic:\"Msg per \" + statsSBI.IntervalAndFrequency, payload:statsSBI.msgSpeed, ui_control:{min:0,max:statsSBI.maxMsgs}};\n}\n\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "noerr": 0,
        "x": 3210,
        "y": 3040,
        "wires": [
            [
                "3ae9939893c199d8",
                "a103cf452912c5fb"
            ],
            [
                "063a77116d3802ea"
            ],
            [
                "8814fbd025713ba9",
                "3cf0c4551aae3c23"
            ]
        ]
    },
    {
        "id": "3ae9939893c199d8",
        "type": "ui_chart",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "name": "",
        "group": "d8770726.1a10d",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Nr of Msg over time chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 4010,
        "y": 3040,
        "wires": [
            []
        ]
    },
    {
        "id": "a103cf452912c5fb",
        "type": "ui_gauge",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "name": "",
        "group": "d8770726.1a10d",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "{{topic}}",
        "label": "nr of msgs",
        "format": "{{value}}",
        "min": 0,
        "max": "2000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 3940,
        "y": 3080,
        "wires": []
    },
    {
        "id": "c2a7a61d08f8866d",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3030,
        "y": 2900,
        "wires": []
    },
    {
        "id": "57bbabc1b0611adf",
        "type": "ui_gauge",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "name": "",
        "group": "d8770726.1a10d",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Current Nr of Active Subscriptions",
        "label": "nr of subscriptions",
        "format": "{{value}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 3970,
        "y": 2880,
        "wires": []
    },
    {
        "id": "87a8e64a3b9dc58d",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "name": "connectionsNr",
        "func": "var outMsg = {};\noutMsg.payload = msg.payload.length;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3670,
        "y": 2880,
        "wires": [
            [
                "57bbabc1b0611adf",
                "47aad47decd2aa0b"
            ]
        ]
    },
    {
        "id": "47aad47decd2aa0b",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 2920,
        "wires": []
    },
    {
        "id": "d18fbdced84929cc",
        "type": "ui_iframe",
        "z": "0230170315d4730f",
        "g": "b3c7716f3c5ea656",
        "group": "175d54ea.788a73",
        "name": "Dashboards Link",
        "order": 1,
        "width": "30",
        "height": "25",
        "url": "",
        "origin": "*",
        "x": 630,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "92f5ed938fd7e576",
        "type": "ui_ui_control",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Go to Signin Tab",
        "x": 2272,
        "y": 3180,
        "wires": [
            []
        ]
    },
    {
        "id": "3cf0c4551aae3c23",
        "type": "ui_gauge",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "name": "",
        "group": "952e8c04.ed2bb8",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "{{topic}}",
        "label": "nr of msgs",
        "format": "{{value}}",
        "min": 0,
        "max": "2000",
        "colors": [
            "#00b500",
            "#00b500",
            "#00b500"
        ],
        "seg1": "",
        "seg2": "",
        "x": 3940,
        "y": 3158,
        "wires": []
    },
    {
        "id": "8814fbd025713ba9",
        "type": "ui_chart",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "name": "",
        "group": "952e8c04.ed2bb8",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Nr of Msg over time chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 4000,
        "y": 3195,
        "wires": [
            []
        ]
    },
    {
        "id": "da875153be997615",
        "type": "ui_switch",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "name": "Enable",
        "label": "Show Stats",
        "tooltip": "",
        "group": "b6f3261d.3a0a2",
        "order": 2,
        "width": "2",
        "height": "17",
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 2770,
        "y": 3040,
        "wires": [
            [
                "eda7af0da4a932d8"
            ]
        ]
    },
    {
        "id": "eda7af0da4a932d8",
        "type": "switch",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2970,
        "y": 3040,
        "wires": [
            [
                "b79d50cf2c6228a7"
            ],
            [
                "1ad6f9307625de6d"
            ]
        ]
    },
    {
        "id": "1ad6f9307625de6d",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "name": "checkStats",
        "func": "var statsSBI = context.global.get(\"statsSBI\");\nvar msg1 = {topic:\"Msg per minute\", payload:0, ui_control:{min:0,max:statsSBI.maxMsgs}};\nvar msg2 = {topic:\"Msg Size per minute\", payload:0};\nvar msg3 = {topic:\"Msg per minute\", payload:0};\n\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "noerr": 0,
        "x": 3210,
        "y": 3100,
        "wires": [
            [
                "3ae9939893c199d8",
                "a103cf452912c5fb"
            ],
            [
                "063a77116d3802ea"
            ],
            [
                "3cf0c4551aae3c23",
                "8814fbd025713ba9"
            ]
        ]
    },
    {
        "id": "3fa587badee35974",
        "type": "inject",
        "z": "0230170315d4730f",
        "g": "b3c7716f3c5ea656",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "portfw",
                "v": "PORT_FORWARDING",
                "vt": "env"
            },
            {
                "p": "host",
                "v": "HOST",
                "vt": "env"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 2220,
        "wires": [
            [
                "c672ab55b8db74ae"
            ]
        ]
    },
    {
        "id": "c672ab55b8db74ae",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "b3c7716f3c5ea656",
        "name": "",
        "func": "if(msg.host === \"\"){\n    msg.url = \"http://localhost:\" + msg.portfw + \"/dash\";\n} else {\n    msg.url = \"http://\" + msg.host + \":\" + msg.portfw + \"/dash\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 2220,
        "wires": [
            [
                "d18fbdced84929cc",
                "0b25481eec6d9f68"
            ]
        ]
    },
    {
        "id": "063a77116d3802ea",
        "type": "ui_chart",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "name": "",
        "group": "d8770726.1a10d",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Msg Size over time chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 4001,
        "y": 3120,
        "wires": [
            []
        ]
    },
    {
        "id": "0b25481eec6d9f68",
        "type": "debug",
        "z": "0230170315d4730f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 2040,
        "wires": []
    },
    {
        "id": "6bac237bbe74ce9a",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "name": "",
        "func": "if(msg.statusCode == 401 || msg.statusCode == 403){\n    \n    return null;\n}\nvar outMsg = {};\noutMsg.payload = msg.payload;\ncontext.flow.set(\"subscriptions\", msg.payload);\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3280,
        "y": 2840,
        "wires": [
            [
                "87a8e64a3b9dc58d",
                "4a572085c9c511dc",
                "b371980e536eb0d9"
            ]
        ]
    },
    {
        "id": "24779a87b0454dc5",
        "type": "http request",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 610,
        "y": 3080,
        "wires": [
            [
                "155a0e01a6e68678",
                "e1362f0dcd397308"
            ]
        ]
    },
    {
        "id": "155a0e01a6e68678",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "validateToken",
        "func": "var outMsg = {};\nif(typeof msg.payload.error == \"undefined\"){\n    outMsg.req = {};\n    outMsg.req.headers = {};\n    outMsg.req.headers[\"authorization\"] = \"Bearer \" + msg.payload.access_token;\n    outMsg.req.headers[\"refresh_token\"] = msg.payload.refresh_token;\n    return [null, outMsg];\n    \n} else {\n    outMsg.payload = 1;\n}\nreturn [outMsg, null];",
        "outputs": 2,
        "noerr": 0,
        "x": 800,
        "y": 3080,
        "wires": [
            [
                "69b81d10e7bfd289"
            ],
            [
                "3e7c10d1b62122f6",
                "58daedc7d8b0da49"
            ]
        ]
    },
    {
        "id": "e1362f0dcd397308",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 3140,
        "wires": []
    },
    {
        "id": "5d695c8c157c17c0",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 3160,
        "wires": []
    },
    {
        "id": "bfc1147a1bee4e7e",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Account Verification",
        "func": "var newMsg = {};\nnewMsg.payload = 0;\ncontext.flow.set(\"userToken\", msg.req.headers.authorization);\ncontext.flow.set('userRefreshToken', msg.req.headers.refresh_token);\nvar timeout_ms = (msg.payload.exp - msg.payload.iat)*1000;\ncontext.flow.set('sessionTimeout', timeout_ms);\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1440,
        "y": 3140,
        "wires": [
            [
                "69b81d10e7bfd289",
                "4c2999f8bc60f2ae"
            ]
        ]
    },
    {
        "id": "283e9395eff5f3ed",
        "type": "function",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "= 3 : Unathorized",
        "func": "msg.payload = \"User not authorized\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1990,
        "y": 3120,
        "wires": [
            [
                "4007cf86aff4f397"
            ]
        ]
    },
    {
        "id": "21fc8b2db5bb7fbe",
        "type": "switch",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1230,
        "y": 3120,
        "wires": [
            [
                "c5f9ebbe7d113225"
            ],
            [
                "c5f9ebbe7d113225"
            ],
            [
                "bfc1147a1bee4e7e"
            ]
        ]
    },
    {
        "id": "c5f9ebbe7d113225",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Account Verification",
        "func": "var newMsg = {}; newMsg.payload = 3;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1440,
        "y": 3100,
        "wires": [
            [
                "69b81d10e7bfd289"
            ]
        ]
    },
    {
        "id": "3e7c10d1b62122f6",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 3020,
        "wires": []
    },
    {
        "id": "7d25bcf37c802ddc",
        "type": "ui_button",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Logout button",
        "group": "5b380ea4.54d28",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Logout",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "logout",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 200,
        "y": 3200,
        "wires": [
            [
                "436caeda558f32dd"
            ]
        ]
    },
    {
        "id": "436caeda558f32dd",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Prepare Logout",
        "func": "var outMsg = {};\noutMsg.url = context.global.get(\"namespace\") + \"/aasServer/auth/logout\";\noutMsg.headers = {};\noutMsg.headers[\"content-type\"] = \"application/x-www-form-urlencoded\";\noutMsg.payload = {};\noutMsg.payload.grant_type = \"refresh_token\";\noutMsg.payload.client_id = context.global.get(\"authenticationServerClient\");\n//outMsg.payload.client_secret = context.global.get(\"client_secret\");\noutMsg.payload.refresh_token = context.flow.get(\"userRefreshToken\");\n\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 3200,
        "wires": [
            [
                "a27f009bf8ab1145"
            ]
        ]
    },
    {
        "id": "a27f009bf8ab1145",
        "type": "http request",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 710,
        "y": 3200,
        "wires": [
            [
                "b684ad0aa87cfb33",
                "80b22f67e2c6a19e"
            ]
        ]
    },
    {
        "id": "b684ad0aa87cfb33",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 3180,
        "wires": []
    },
    {
        "id": "80b22f67e2c6a19e",
        "type": "switch",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "204",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1210,
        "y": 3200,
        "wires": [
            [
                "372f5c2cdbf74b56"
            ],
            [
                "b4d8f47c83944329"
            ]
        ]
    },
    {
        "id": "372f5c2cdbf74b56",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "Account Verification",
        "func": "var newMsg = {}; newMsg.payload = msg.payload.error;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1440,
        "y": 3180,
        "wires": [
            [
                "cf3d9a0d07747286"
            ]
        ]
    },
    {
        "id": "cf3d9a0d07747286",
        "type": "ui_toast",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Session Timeout",
        "name": "Logout Failure Dialog",
        "x": 1740,
        "y": 3180,
        "wires": [
            []
        ]
    },
    {
        "id": "4eab4b3ff75820c3",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "parameterizedHttpRequest",
        "func": "var msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\n\nmsg1.method = 'GET';\nmsg1.url = context.global.get('namespace') + \"/aasServer/env\";\n/*msg1.headers = {\n        authorization: \"Bearer \"+ context.flow.get(\"token\")\n    }*/\nmsg1.headers = {\n        authorization: context.flow.get(\"userToken\")\n    }\n\n//msg2.descriptionId = \"b5595a4a-40a5-46e6-a9c6-f493f99a72a1\"; \n\n//msg3.method = 'GET';\n//msg3.url = context.global.get('namespace') + \"/aasServer/submodels\";\n\nreturn [msg1, msg2, msg];",
        "outputs": 3,
        "noerr": 0,
        "x": 1040,
        "y": 240,
        "wires": [
            [
                "315c67953304cd69",
                "a07f5e53390d9519"
            ],
            [
                "5b6c3d0d2747e38b"
            ],
            [
                "a79fced785134dc4"
            ]
        ]
    },
    {
        "id": "8c8705be4d3dc2aa",
        "type": "ui_button",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "Refresh button",
        "group": "28ba0356.ef188c",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "#14524e",
        "icon": "cached",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 520,
        "y": 300,
        "wires": [
            [
                "4eab4b3ff75820c3"
            ]
        ]
    },
    {
        "id": "4c11f6053b9c28b8",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "flowVariables",
        "func": "//context.flow.set('selectedElements', []);\ncontext.flow.set('logs', []);\ncontext.flow.set('sessionTimeout', 10000);\n//context.flow.set(\"encrypt\", false);\n//context.flow.set(\"granularity\", \"Seconds\");\n//context.flow.set(\"period\", 1);\n\n//var fs = context.global.get('fs');\n//var path = context.global.get('path');\n/*context.flow.set('accounts', []);\n\nvar fileName = \"httpauthfile.txt\";\nvar basePath = context.global.get('staticDocs');\nvar filePath = path.join(basePath, \"httpauth\", fileName);\n\nfs.readFile(filePath, \"utf8\", function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    content = data;\n    var contentArray = content.split(\"\\n\");\n    //var account = {username: contentArray[0], password: contentArray[2]};\n    var accounts = context.flow.get('accounts');\n    for(var account of contentArray){\n        accounts.push(contentArray[account]);    \n    }\n    \n    // Invoke the next step here however you like\n    //console.log(content);   // Put all of the code here (not the best solution)\n    exit();          // Or put the next step in a function and invoke it\n    \n    });\n    \nfunction exit() {\n    //msg.payload = content;\n    node.send(msg);\n    \n}\n    \n    //return msg;\n    //context.flow.set('Body', \\\"\\\");\n*/\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 200,
        "wires": [
            [
                "4eab4b3ff75820c3"
            ]
        ]
    },
    {
        "id": "315c67953304cd69",
        "type": "http request",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1370,
        "y": 240,
        "wires": [
            [
                "41ae967b31874b17",
                "1924cc79493e89f4"
            ]
        ]
    },
    {
        "id": "4e851e2d213ae3ca",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "detectBrowserReload",
        "func": "var payload = msg.payload;\nif(payload === \"connect\"){\n    return msg;\n}\n\nreturn null;\n//context.flow.set('Body', \"\");",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 240,
        "wires": [
            [
                "4eab4b3ff75820c3"
            ]
        ]
    },
    {
        "id": "2fc1f2cd994c0bfd",
        "type": "ui_ui_control",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "events": "all",
        "x": 300,
        "y": 300,
        "wires": [
            [
                "8c8705be4d3dc2aa"
            ]
        ]
    },
    {
        "id": "2abc01a9c1b4fb12",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "NotificationMessage",
        "func": "//Retreiving Libraries from the Settings.json file\nmsg.payload = \"Manifest has been (re)loaded\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 580,
        "wires": [
            [
                "38cafbe82100acde"
            ]
        ]
    },
    {
        "id": "e85e5428c54d4dee",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1177.5,
        "y": 618.75,
        "wires": []
    },
    {
        "id": "b08de9195b494c16",
        "type": "inject",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 310,
        "y": 200,
        "wires": [
            [
                "4c11f6053b9c28b8"
            ]
        ]
    },
    {
        "id": "1924cc79493e89f4",
        "type": "join",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2030,
        "y": 240,
        "wires": [
            [
                "5cea66178ba0eb05",
                "13d9ed9c777d2f95"
            ]
        ]
    },
    {
        "id": "ab7df8718dc0c2d0",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1530,
        "y": 280,
        "wires": []
    },
    {
        "id": "e9551d07136d6cb2",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "SubmodelsProcessing",
        "func": "var msg1 = {};\nvar payload = {};\n//var splitted = msg.payload[0].value[0].value.split(\" \");\n//var splitted = msg.payload.value[0].value.split(\" \");\n//var splitted = msg.payload[0].value.split(\" \");\npayload.type = msg.payload.type;\npayload.hostname = msg.payload.hostname;;\npayload.release = msg.payload.release;;\npayload.platform = msg.payload.platform;\npayload.arch =msg.payload.arch;\npayload.namespace = context.global.get('namespace');\nmsg1.payload = payload;\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 1740,
        "y": 300,
        "wires": [
            [
                "1924cc79493e89f4"
            ]
        ]
    },
    {
        "id": "acde021a4af44ed5",
        "type": "ui_ui_control",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "x": 300,
        "y": 240,
        "wires": [
            [
                "4e851e2d213ae3ca"
            ]
        ]
    },
    {
        "id": "38cafbe82100acde",
        "type": "ui_toast",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "position": "bottom right",
        "displayTime": "1",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Manifest",
        "name": "Notify Manifest Changes",
        "x": 1550,
        "y": 580,
        "wires": []
    },
    {
        "id": "5cea66178ba0eb05",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2170,
        "y": 200,
        "wires": []
    },
    {
        "id": "13d9ed9c777d2f95",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "SubmodelsProcessing",
        "func": "//Retreiving Libraries from the Settings.json file\nvar outMsg = {};\nvar payload = [];\noutMsg.identifier = context.global.get(\"AASIdentifier\");\noutMsg.payload = payload;\nfor(var element = 0; element < msg.payload.length; element++){\n    if(typeof(msg.payload[element].assetAdministrationShells) !== 'undefined' && msg.payload[element] !== null){\n         outMsg.payload[1] = msg.payload[element];\n    } else {\n        outMsg.payload[0] = msg.payload[element];\n    }\n}\n\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2220,
        "y": 240,
        "wires": [
            [
                "6ddf00718cfb4670",
                "26a994ae033ba4b5"
            ]
        ]
    },
    {
        "id": "6ddf00718cfb4670",
        "type": "msg-router",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 6,
        "x": 2450,
        "y": 240,
        "wires": [
            [
                "fe3ab20b2faa2127"
            ],
            [
                "0d8c0804e85d232f"
            ],
            [
                "c5dfb78d754ea381"
            ],
            [
                "3af25fa94b644a9b"
            ],
            [
                "d472b9ddbf59dae5"
            ],
            [
                "8691f5ddad4cdb94"
            ]
        ]
    },
    {
        "id": "153d05dcc647e3e9",
        "type": "ui_template",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "group": "b9ac7006.de90a",
        "name": "Counters",
        "order": 1,
        "width": 10,
        "height": "20",
        "format": "    <script>\n        (function(scope) {\n            scope.$watch('msg', function(msg){\n                if (msg) {\n                    var aass = msg.payload[1].assetAdministrationShells;\n                    scope.aasCounter = aass.length;\n                    var assets = msg.payload[1].assets;\n                    scope.assetCounter = assets.length;\n                    var submodels = msg.payload[1].submodels;\n                    scope.submodelsCounter = submodels.length;\n                    scope.submodelElementsCounter = 0;\n                    for(let submodel = 0; submodel < submodels.length; submodel++){\n                        scope.submodelElementsCounter = scope.submodelElementsCounter + submodels[submodel].submodelElements.length;\n                    }\n                    scope.conceptDescriptionsCounter = msg.payload[1].conceptDescriptions.length;\n                }\n            });\n        })(scope)\n    </script>\n        <div class=\"container\">\n            <h5><span class=\"badge badge-warning\">Asset Administration Shells: {{aasCounter}}</span></h5>\n            <h5><span class=\"badge badge-warning\">Assets: {{assetCounter}}</span></h5>\n            <h5><span class=\"badge badge-warning\">Submodels: {{submodelsCounter}}</span></h5>\n            <h5><span class=\"badge badge-warning\">Submodel Elements: {{submodelElementsCounter}}</span></h5>\n            <h5><span class=\"badge badge-warning\">Concept Descriptions: {{conceptDescriptionsCounter}}</span></h5>\n        </div>\n        <div>\n            <img width=\"300\" height=\"300\" src=\"{{msg.qrcode}}\">\n        </div>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3300,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "fe3ab20b2faa2127",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2757.08349609375,
        "y": 168.58338928222656,
        "wires": []
    },
    {
        "id": "0d8c0804e85d232f",
        "type": "ui_template",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "group": "8fc17f5a.38023",
        "name": "Header Submodel",
        "order": 1,
        "width": 15,
        "height": 30,
        "format": "<div id=\"deck11\" class=\"card-group\">\n            <div class=\"card-body\">\n            <div class=\"card text-white bg-light mb-3\" style=\"max-width: 45rem;\">\n                <ul class=\"list-group list-group-flush\">\n                 <li class=\"list-group-item\">\n                    <button class=\"btn btn-link text-dark\" data-toggle=\"collapse\" data-target=\"#collapse11\" aria-expanded=\"true\" aria-controls=\"#collapse11\">\n                            {{msg.identifier}} Overview\n                    </button> <span class=\"badge  badge-warning badge-pill\">{{msg.payload[1].assetAdministrationShells.length}}</span>\n                     <!--<a class=\"text-dark\" data-toggle=\"collapse\" href=\"#collapse11\">{{msg.identifier}} Overview</a>!-->\n                     <ul id=\"collapse11\" class=\"list-group list-group-flush panel-collapse collapse\">\n                        <li class=\"list-group-item list-group-item-info\" ng-repeat=\"shell in msg.payload[1].assetAdministrationShells\" ng-init=\"shellIndex=$index\">\n                        <button class=\"btn btn-link text-info\" data-toggle=\"collapse\" data-target=\"#collapse21\" aria-expanded=\"true\" aria-controls=\"#collapse21\">\n                            Administration Shell: {{shellIndex}}\n                        </button>\n                        <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse21\" aria-expanded=\"true\" >Administration Shell: {{shellIndex}} </a>!-->\n                            <ul id=\"collapse21\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                <li class=\"list-group-item\">\n                                    <a class=\"text-black-50\">Identififcation : <strong>{{shell.identification.id}}</strong></a>\n                                </li>\n                                <li class=\"list-group-item \">\n                                    <a class=\"text-black-50\">Asset Identification : <strong>{{shell.asset.keys[0].value}}</strong></a>\n                                </li>\n                                <li class=\"list-group-item\">\n                                    <a class=\"text-black-50\">Derived From : <strong>{{shell.derivedFrom.keys[0].value}}</strong></a>\n                                </li>\n                                <!--<li class=\"list-group-item list-group-item-info\">!--><li class=\"list-group-item\">\n                                    <button class=\"btn btn-link text-black-50\" data-toggle=\"collapse\" data-target=\"#collapse31\" aria-expanded=\"true\" aria-controls=\"#collapse31\">\n                                        Administration\n                                    </button>\n                                <!--<a class=\"text-black-50\"  data-toggle=\"collapse\" href=\"#collapse31\">Administration</a>!-->\n                                    <ul id=\"collapse31\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                        <li class=\"list-group-item list-group-item-info\">\n                                            <a class=\"text-info\" >version: {{shell.administration.version}}</a>\n                                        </li>\n                                         <li class=\"list-group-item list-group-item-info\">\n                                            <a class=\"text-info\" >version: {{shell.administration.revision}}</a>\n                                        </li>\n                                    </ul>\n                                </li>\n                            </ul>\n                        </li>\n                    </ul>\n                 </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n\n",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3320.08349609375,
        "y": 202.08338928222656,
        "wires": [
            [
                "fc9d10a0c0fd18c7"
            ]
        ]
    },
    {
        "id": "c5dfb78d754ea381",
        "type": "ui_template",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "group": "7a30c02.5d2894",
        "name": "Header Overview",
        "order": 1,
        "width": 15,
        "height": "20",
        "format": "    <script>\n        this.scope.sendRequest = function(element){\n            this.send({payload:{virtualLocation:element.Attribute[1].Value[0]}});\n        }\n        this.scope.isVisible = function(element){\n            if(element.Attribute[0].Attribute[0].Value[0] == \"\" && element.Attribute[0].Attribute[0].Value[1] == \"\")\n                return false;\n            else return true;\n        }\n    </script>\n\n    <div id=\"deck\" class=\"card-group\">\n            <div class=\"card-body\">\n            <div class=\"card text-white bg-light mb-3\" style=\"max-width: 45rem;\">\n                <ul class=\"list-group list-group-flush\">\n                 <li class=\"list-group-item\">\n                     <a class=\"text-dark\">{{msg.identifier}} Running Platform</a>\n                     <ul class=\"list-group list-group-flush\">\n                        <li class=\"list-group-item list-group-item-info\">\n                            <a class=\"text-info\">Hostname : <strong>{{msg.payload[0].hostname}}</strong></a>\n                        </li>\n                        <li class=\"list-group-item list-group-item-info\">\n                            <a class=\"text-info\">Type : <strong>{{msg.payload[0].type}}</strong></a>\n                        </li>\n                        <li class=\"list-group-item list-group-item-info\">\n                            <a class=\"text-info\">Platform : <strong>{{msg.payload[0].platform}}</strong></a>\n                        </li>\n                        <li class=\"list-group-item list-group-item-info\">\n                            <a class=\"text-info\">Architecture : <strong>{{msg.payload[0].arch}}</strong></a>\n                        </li>\n                        <li class=\"list-group-item list-group-item-info\">\n                            <a class=\"text-info\">Release : <strong>{{msg.payload[0].release}}</strong></a>\n                        </li>\n                        <li class=\"list-group-item list-group-item-info\">\n                            <a class=\"text-info\">Namespace : <strong>{{msg.payload[0].namespace}}</strong></a>\n                        </li>\n                    </ul>\n                 </li>\n                </ul>\n            </div>\n            </div>\n    </div>\n    <div id=\"deck\" class=\"card-group\">\n            <div class=\"card-body\">\n            <div class=\"card text-white bg-light mb-3\" style=\"max-width: 45rem;\">\n                <ul class=\"list-group list-group-flush\">\n                 <li class=\"list-group-item\">\n                     <a class=\"text-dark\">{{msg.identifier}} Overview</a>\n                     <ul class=\"list-group list-group-flush\">\n                        <li class=\"list-group-item list-group-item-info\" ng-repeat=\"shell in msg.payload[1].assetAdministrationShells\" ng-init=\"shellIndex=$index\">\n                        <a class=\"text-info\" aria-expanded=\"true\" >Administration Shell: {{shellIndex}} </a>\n                        <ul class=\"list-group list-group-flush\">\n                            <li class=\"list-group-item\">\n                                <a class=\"text-black-50\">Identififcation : <strong>{{shell.identification.id}}</strong></a>\n                            </li>\n                            <li class=\"list-group-item \">\n                                <a class=\"text-black-50\">Asset Identification : <strong>{{shell.asset.keys[0].value}}</strong></a>\n                            </li>\n                            <li class=\"list-group-item\">\n                                <a class=\"text-black-50\">Derived From : <strong>{{shell.derivedFrom.keys[0].value}}</strong></a>\n                            </li>\n                        </ul>\n                        </li>\n                    </ul>\n                 </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n\n\n",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 3321.3334045410156,
        "y": 241.6667022705078,
        "wires": [
            []
        ]
    },
    {
        "id": "b97a9c0b053e3493",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "LiveDataSelectedElements",
        "func": "//Retreiving Libraries from the Settings.json file\nif(msg.payload != \"init\"){\n    var selectedElements = context.flow.get('selectedElements');\n    var selectedElement = msg.payload;\n    \n    if(selectedElements.lenght == 0){\n        //selectedElements.push(selectedElement._Attribs.ID);\n        selectedElements.push(selectedElement);\n    } else {\n        var found = false;\n        for(var element = 0; element < selectedElements.length; element++){\n            //if(selectedElement._Attribs.ID == selectedElements[element]){\n            if(selectedElement.selectedElement.idShort == selectedElements[element].selectedElement.idShort && selectedElement.submodelId == selectedElements[element].submodelId && selectedElement.shellId == selectedElements[element].shellId){\n                selectedElements.splice(element, 1);\n                found = true;\n                break;\n            }\n        }\n        if(!found){\n            //selectedElements.push(selectedElement._Attribs.ID);\n            selectedElements.push(selectedElement);\n        }\n    }\n    context.flow.set('selectedElements', selectedElements);\n    msg.payload = selectedElements;\n    return msg;\n} else {\n    context.flow.set('selectedElements', []);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3340,
        "y": 620,
        "wires": [
            [
                "aa704171214f5b6e"
            ]
        ]
    },
    {
        "id": "fc9d10a0c0fd18c7",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3521.58349609375,
        "y": 202.08338928222656,
        "wires": []
    },
    {
        "id": "aa704171214f5b6e",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3570,
        "y": 620,
        "wires": []
    },
    {
        "id": "a79fced785134dc4",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1330,
        "y": 500,
        "wires": []
    },
    {
        "id": "8691f5ddad4cdb94",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "retrievingSubmodels",
        "func": "var outMsg = {};\nif(msg.payload.length > 1){\n    var administrationShells = msg.payload[1].assetAdministrationShells;\n    var submodels = msg.payload[1].submodels;\n    var shells = [];\n    for (var shellIndex = 0; shellIndex < administrationShells.length; shellIndex++){\n        var element = {};\n        var shell = administrationShells[shellIndex];\n        element.shellIdShort = shell.idShort;\n        element.shellIdentifier = shell.identification.id;\n        element.submodels = [];\n        var shellSubmodels = shell.submodels;\n        for(var submodelIndex = 0; submodelIndex < submodels.length; submodelIndex++){\n            for (var shellSubmodelIndex = 0; shellSubmodelIndex < shellSubmodels.length; shellSubmodelIndex++){\n                if(submodels[submodelIndex].identification.id === shellSubmodels[shellSubmodelIndex].keys[0].value){\n                    element.submodels.push(submodels[submodelIndex]);\n                }\n            }\n        }\n        shells.push(element);\n    }\n//outMsg.payload = msg.payload[1].submodels;\n    outMsg.payload = shells;\n    outMsg.subscriptions = context.flow.get(\"subscriptions\") || [];\n    return outMsg;\n    \n}\nelse return outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2660,
        "y": 660,
        "wires": [
            [
                "c86aca686f0ecfcb"
            ]
        ]
    },
    {
        "id": "679a836e5d3fe2d0",
        "type": "ui_template",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "group": "c56f01cc.380dd",
        "name": "ConceptDescriptions",
        "order": 1,
        "width": "30",
        "height": "20",
        "format": "    <script>\n        (function(scope) {\n            scope.$watch('msg', function(msg){\n                if (msg) {\n                    if (msg.payload) {\n                        scope.conceptDescriptions = [];\n                        var descriptions = msg.payload; \n                        for(var description of descriptions){\n                            var conceptDescription = {};\n                            conceptDescription.id = descriptions[description].identification.id;\n                            conceptDescription.modelType = descriptions[description].modelType.name;\n                            var dataSpecification = descriptions[description].embeddedDataSpecifications[0].dataSpecificationContent;\n                            var langs = dataSpecification.preferredName;\n                            for(var lang of langs){\n                                if(langs[lang].language == \"en\"){\n                                    conceptDescription.preferredName = langs[lang].text;\n                                }\n                            }\n                            conceptDescription.shortName = dataSpecification.shortName;\n                            conceptDescription.unit = dataSpecification.unit;\n                            conceptDescription.dataType = dataSpecification.dataType;\n                            var defLangs = dataSpecification.definition;\n                            for(var defLang of defLangs){\n                                if(defLangs[defLang].language == \"en\"){\n                                    conceptDescription.definition = defLangs[defLang].text;\n                                }\n                            }\n                                    //scope.send({payload:dataInterfaceElement});\n                                    scope.conceptDescriptions.push(conceptDescription);\n                        }\n                        scope.send({payload:scope.conceptDescriptions});\n                    }\n                        \n                }\n            });\n/*            scope.init = function() {\n                //scope.observations = [];\n                scope.send({payload:scope.observations});\n            }*/\n        })(scope)\n    </script>\n    <div id=\"deck\">\n        <table class=\"table table-sm\">\n            <thead class=\"text-dark\">\n                <tr>\n                    <th scope=\"col\">Id</th>\n                    <th scope=\"col\">modelType</th>\n                    <th scope=\"col\">preferredName</th>\n                    <th scope=\"col\">shortName</th>\n                    <th scope=\"col\">unit</th>\n                    <th scope=\"col\">dataType</th>\n                    <th scope=\"col\">definition</th>\n                </tr>\n            </thead>\n            <tbody>\n            <tr ng-repeat=\"cd in conceptDescriptions\">\n                <td><a class=\"text-dark\">{{cd.id}}</a></td>\n                <td><a class=\"text-dark\">{{cd.modelType}}</a></td>\n                <td><a class=\"text-dark\">{{cd.preferredName}}</a></td>\n                <td><a class=\"text-dark\">{{cd.shortName}}</a></td>\n                <td><a class=\"text-dark\">{{cd.unit}}</a></td>\n                <td><a class=\"text-dark\">{{cd.dataType}}</a></td>\n                <td><a class=\"text-dark\">{{cd.definition}}</a></td>\n                <!--<td style=\"cursor:pointer;\" ng-click=\"remove(i)\" title=\"Remove\">&times;</td>!-->\n            </tr>\n            </tbody>\n            \n        </table>\n    </div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 3120,
        "y": 540,
        "wires": [
            [
                "378a78fb874dd41a"
            ]
        ]
    },
    {
        "id": "41ae967b31874b17",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1570,
        "y": 220,
        "wires": []
    },
    {
        "id": "d472b9ddbf59dae5",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "retrievingConceptDescriptions",
        "func": "var outMsg = {};\noutMsg.payload = msg.payload[1].conceptDescriptions;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2770,
        "y": 540,
        "wires": [
            [
                "679a836e5d3fe2d0",
                "05520d44741c510d"
            ]
        ]
    },
    {
        "id": "378a78fb874dd41a",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3370,
        "y": 540,
        "wires": []
    },
    {
        "id": "05520d44741c510d",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3002.857177734375,
        "y": 578.5714416503906,
        "wires": []
    },
    {
        "id": "26a994ae033ba4b5",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2370,
        "y": 140,
        "wires": []
    },
    {
        "id": "d2afd4df8de4249a",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3350,
        "y": 680,
        "wires": []
    },
    {
        "id": "1e248f73cf21d587",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "func": "if(msg.statusCode == 401 || msg.statusCode == 403){\n    var outMsg = {};\n    outMsg.payload = {};\n    outMsg.headers = {};\n    outMsg.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    outMsg.payload.client_id = context.global.get(\"authenticationServerClient\");\n    //outMsg.payload.client_secret = context.global.get(\"client_secret_ui\");\n    outMsg.payload.grant_type = \"client_credentials\";\n    var realm = context.global.get(\"realm\");\n    //outMsg.url = context.global.get(\"keycloak_auth\") + \"/realms/\" + realm + \"/protocol/openid-connect/token\";\n    outMsg.url = \"http://keycloak:8080\" + \"/realms/\" + realm + \"/protocol/openid-connect/token\";\n    \n    return [outMsg, null];\n}\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "x": 1740,
        "y": 200,
        "wires": [
            [
                "adfd2bae1a683ff9"
            ],
            [
                "1924cc79493e89f4"
            ]
        ]
    },
    {
        "id": "adfd2bae1a683ff9",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1930,
        "y": 200,
        "wires": []
    },
    {
        "id": "0c8818c588788156",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 700,
        "wires": []
    },
    {
        "id": "7fabd8961af21415",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "retrieve NOVAAS Health",
        "func": "if(msg.payload === \"ok\"){\n    msg.payload = true;\n} else if(msg.payload === \"not_ok\"){\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 830,
        "y": 740,
        "wires": [
            [
                "b71b0abe0c84fe22",
                "c43af6195c04dd63",
                "6a5847ade8f38435",
                "cbfe4edbe6e338b5",
                "1ffe490c1a96b685",
                "65018e33592ea9a2",
                "cdfe419ae4f2daf5"
            ]
        ]
    },
    {
        "id": "b71b0abe0c84fe22",
        "type": "ui_led",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "order": 1,
        "group": "76f4488e.b66968",
        "width": "5",
        "height": "2",
        "label": "",
        "labelPlacement": "right",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 1130,
        "y": 740,
        "wires": []
    },
    {
        "id": "c43af6195c04dd63",
        "type": "ui_led",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "order": 1,
        "group": "f9f1bdc8.0e017",
        "width": "5",
        "height": "2",
        "label": "",
        "labelPlacement": "right",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 1130,
        "y": 780,
        "wires": []
    },
    {
        "id": "6a5847ade8f38435",
        "type": "ui_led",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "order": 1,
        "group": "4534a6d5.677c78",
        "width": "5",
        "height": "2",
        "label": "",
        "labelPlacement": "right",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 1130,
        "y": 820,
        "wires": []
    },
    {
        "id": "cbfe4edbe6e338b5",
        "type": "ui_led",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "order": 1,
        "group": "4944a8dc.cb1658",
        "width": "5",
        "height": "2",
        "label": "",
        "labelPlacement": "right",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 1130,
        "y": 860,
        "wires": []
    },
    {
        "id": "1ffe490c1a96b685",
        "type": "ui_led",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "order": 1,
        "group": "a9cc6929.51b4",
        "width": "5",
        "height": "2",
        "label": "",
        "labelPlacement": "right",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 1130,
        "y": 900,
        "wires": []
    },
    {
        "id": "65018e33592ea9a2",
        "type": "ui_led",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "order": 1,
        "group": "1e8a2f3d.54af89",
        "width": "5",
        "height": "2",
        "label": "",
        "labelPlacement": "right",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 1130,
        "y": 940,
        "wires": []
    },
    {
        "id": "cdfe419ae4f2daf5",
        "type": "ui_led",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "order": 1,
        "group": "c8188165.80a358",
        "width": "5",
        "height": "2",
        "label": "",
        "labelPlacement": "right",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 1130,
        "y": 980,
        "wires": []
    },
    {
        "id": "16a56ea8e636930d",
        "type": "ui_template",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "group": "77c7337d.b33f54",
        "name": "Asset",
        "order": 1,
        "width": 10,
        "height": "20",
        "format": "<img src=\"{{msg.payload}}\">",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 3130,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "daf407e065429a74",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "func": "msg.payload = context.global.get(\"ThumbnailFilePath\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2940,
        "y": 480,
        "wires": [
            [
                "16a56ea8e636930d"
            ]
        ]
    },
    {
        "id": "376dc86131e0cb65",
        "type": "inject",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2730,
        "y": 480,
        "wires": [
            [
                "daf407e065429a74"
            ]
        ]
    },
    {
        "id": "ad97e70a777dc9b5",
        "type": "ui_template",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "group": "c68d835e.db3b2",
        "name": "Submodels",
        "order": 1,
        "width": 20,
        "height": 30,
        "format": "<script>\n    (function(scope) {\n        //scope.root = \"\";\n        scope.depth = \"\";\n        /* scope.init = function() {\n        //scope.observations = [];\n        scope.send({payload:scope.observations});\n        }*/\n        scope.path = function(root, element){\n            if(element == ''){\n                return root;\n            } else {\n                return root + \".\" + element;\n            }\n        \n        }\n\n        scope.valueId = function(aasId, submodelId, element, root){\n            let id = \"\";\n            if(root !== ''){\n                //let elementPath = root.replace(\".\", \"_\");\n                id = aasId + \"_\" + submodelId + \"_\" + root + \"_\" + element;\n                id = id.replace(/\\./g,'_');\n            } else {\n                id = aasId + \"_\" + submodelId + \"_\" + element;\n                id = id.replace(/\\./g,'_');\n            }\n            return id;\n        }\n\n        scope.changeTextColor = function(aasId, submodelId, submodelElementId, root, subscriptions){\n            let stringifyText = \"\";\n            if(root != \"\"){\n                stringifyText = aasId + \";\" + submodelId + \";\" + root + \".\" + submodelElementId;\n            } else {\n                stringifyText = aasId + \";\" + submodelId + \";\" + submodelElementId;\n            }\n            for(let element of subscriptions){\n                var subscription = subscriptions[element];\n                var result = subscription.includes(stringifyText);\n                if(result){\n                    return \"true\";\n                }\n            }\n    \n            return \"false\";\n        }\n    \n    })(scope)\n</script>\n<script type=\"text/ng-template\" id=\"tree_view\">\n    <li class=\"list-group-item list-group-item-info\" >\n                                            <button class=\"btn btn-link text-info\" data-toggle=\"collapse\" data-target=\"#collapse22_{{submodelElement.idShort}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"collapse22_{{submodelElement.idShort}}_{{depth}}\">\n                                                Submodel Element Collection idShort: <strong>{{submodelElement.idShort}}</strong>\n                                            </button> <span class=\"badge  badge-warning badge-pill\">{{submodelElement.value.length}}</span>\n                                            <!--<a class=\"text-black-50\" data-toggle=\"collapse\" href=\"#collapse22_{{submodelElement.idShort}}_{{depth}}\" >idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                <ul id=\"collapse22_{{submodelElement.idShort}}_{{depth}}\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                                    <li class=\"list-group-item\" ng-repeat=\"submodelElement in submodelElement.value | filter:search\" ng-init=\"submodelElementIndex=$index\">\n                                                        <div ng-if=\"submodelElement.modelType.name !== 'SubmodelElementCollection'\">\n                                                            <label for=\"{{submodelElement.idShort}}_{{submodelElementIndex}}\">\n                                                                <button ng-class=\"changeTextColor(shell.shellIdentifier,submodel.idShort,submodelElement.idShort,root,{{msg.subscriptions}}) == 'true' ? 'btn btn-link text-danger' : 'btn btn-link text-black-50'\" data-toggle=\"collapse\" data-target=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\">\n                                                                    Property idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                </button>\n                                                                <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\">idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                            </label>\n                                                             <ul id=\"collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                                                    <li ng-if=\"submodelElement.semanticId.keys[0]\" class=\"list-group-item list-group-item-info\">\n                                                                        <a class=\"text-info\" data-toggle=\"collapse\">Semantic Id: <strong>{{submodelElement.semanticId.keys[0].value}}</strong></a>\n                                                                    </li>\n                                                                    <li ng-if=\"submodelElement.category\" class=\"list-group-item list-group-item-info\">\n                                                                        <a class=\"text-info\" data-toggle=\"collapse\">Category: <strong>{{submodelElement.category}}</strong></a>\n                                                                    </li>\n                                                                    <li class=\"list-group-item list-group-item-info\">\n                                                                        <a class=\"text-info\" data-toggle=\"collapse\">Model Type: <strong>{{submodelElement.modelType.name}}</strong></a>\n                                                                    </li>\n                                                                    <li ng-if=\"submodelElement.mimeType\" class=\"list-group-item list-group-item-info\">\n                                                                        <a class=\"text-info\" data-toggle=\"collapse\">mime Type: <strong>{{submodelElement.mimeType}}</strong></a>\n                                                                    </li>\n                                                                    <li ng-if=\"submodelElement.valueType\" class=\"list-group-item list-group-item-info\">\n                                                                        <a class=\"text-info\" data-toggle=\"collapse\">Value Type: <strong>{{submodelElement.valueType.dataObjectType.name}}</strong></a>\n                                                                    </li>\n                                                                    <li class=\"list-group-item list-group-item-info\">\n                                                                        <a id=\"{{valueId(shell.shellIdShort, submodel.idShort, submodelElement.idShort, root)}}\" class=\"text-info\" data-toggle=\"collapse\">Value: <strong>{{submodelElement.value}}</strong></a>\n                                                                    </li>\n                                                            </ul>\n                                                        </div>\n                                                        <!--<div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view2'\" ng-init=\"depth = depth + 1 + submodelElementIndex\">\n                                                                <!--<ul class=\"list-group list-group-flush\" ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view2'\" ng-init=\"depth = depth + 1\">\n                                                                </ul>!-->\n                                                            <!--</div>!-->\n                                                            <div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                                <div ng-include=\"'tree_view2'\" ng-if=\"true\" onload=\"root = path(root, submodelElement.idShort)\"\n                                                                    ng-init=\"depth = depth + 1 + submodelElementIndex\"></div>\n                                                            </div>\n                                                    </li>\n                                                </ul>\n                                            \n                                        </li>\n        \n       \n           \n        </script>\n<script type=\"text/ng-template\" id=\"tree_view2\">\n    <li class=\"list-group-item \" >\n                                            <button class=\"btn btn-link text-black-50\" data-toggle=\"collapse\" data-target=\"#collapse22_{{submodelElement.idShort}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"collapse22_{{submodelElement.idShort}}_{{depth}}\">\n                                                Submodel Element Collection idShort: <strong>{{submodelElement.idShort}}</strong>\n                                            </button> <span class=\"badge  badge-warning badge-pill\">{{submodelElement.value.length}}</span>\n                                            <!--<a class=\"text-black-50\" data-toggle=\"collapse\" href=\"#collapse22_{{submodelElement.idShort}}_{{depth}}\" >idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                <ul id=\"collapse22_{{submodelElement.idShort}}_{{depth}}\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                                    <li class=\"list-group-item list-group-item-info\" ng-repeat=\"submodelElement in submodelElement.value | filter:search\" ng-init=\"submodelElementIndex=$index\">\n                                                        <div ng-if=\"submodelElement.modelType.name !== 'SubmodelElementCollection'\">\n                                                            <label for=\"{{submodelElement.idShort}}_{{submodelElementIndex}}\">\n                                                                <button ng-class=\"changeTextColor(shell.shellIdentifier,submodel.idShort,submodelElement.idShort,root,{{msg.subscriptions}}) == 'true' ? 'btn btn-link text-danger' : 'btn btn-link text-info'\" data-toggle=\"collapse\" data-target=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\">\n                                                                   Property idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                </button>\n                                                                <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\">idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                            </label>\n                                                             <ul id=\"collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                                                    <li ng-if=\"submodelElement.semanticId.keys[0]\" class=\"list-group-item\">\n                                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Semantic Id: <strong>{{submodelElement.semanticId.keys[0].value}}</strong></a>\n                                                                    </li>\n                                                                    <li ng-if=\"submodelElement.category\" class=\"list-group-item\">\n                                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Category: <strong>{{submodelElement.category}}</strong></a>\n                                                                    </li>\n                                                                    <li class=\"list-group-item\">\n                                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Model Type: <strong>{{submodelElement.modelType.name}}</strong></a>\n                                                                    </li>\n                                                                    <li ng-if=\"submodelElement.mimeType\" class=\"list-group-item\">\n                                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">mime Type: <strong>{{submodelElement.mimeType}}</strong></a>\n                                                                    </li>\n                                                                    <li ng-if=\"submodelElement.valueType\" class=\"list-group-item\">\n                                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Value Type: <strong>{{submodelElement.valueType.dataObjectType.name}}</strong></a>\n                                                                    </li>\n                                                                    <li class=\"list-group-item\">\n                                                                        <a id=\"{{valueId(shell.shellIdShort, submodel.idShort, submodelElement.idShort, root)}}\" class=\"text-black-50\" data-toggle=\"collapse\">Value: <strong>{{submodelElement.value}}</strong></a>\n                                                                    </li>\n                                                            </ul>\n                                                        </div>\n                                                        <!--<div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view'\" ng-init=\"depth = depth + 1 + submodelElementIndex\">\n                                                                <!--<ul class=\"list-group list-group-flush\" ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view'\" ng-init=\"depth = depth + 1\">\n                                                                </ul>!-->\n                                                            <!--</div>!-->\n                                                            <div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                                <div ng-include=\"'tree_view'\" ng-if=\"true\" onload=\"root = path(root, submodelElement.idShort)\"\n                                                                    ng-init=\"depth = depth + 1 + submodelElementIndex\"></div>\n                                                            </div>\n                                                    </li>\n                                                </ul>\n                                            \n                                        </li>\n        \n       \n           \n        </script>\n<div id=\"deck12\" class=\"card-group\">\n    <div class=\"card-body\">\n        <div class=\"input-group input-group-sm mb-3\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"global search...\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-sm\" ng-model=\"search\">\n        </div>\n        <div id=\"accordion\" class=\"card text-white bg-light mb-3\">\n            <ul class=\"list-group list-group-flush\">\n                <li class=\"list-group-item\">\n                    <button class=\"btn btn-link text-dark\" data-toggle=\"collapse\" data-target=\"#collapse02\" aria-expanded=\"true\" aria-controls=\"#collapse02\">\n                            Administration Shells and Submodels\n                            </button> <span class=\"badge  badge-warning badge-pill\">{{msg.payload.length}}</span>\n                    <ul id=\"collapse02\" class=\"list-group list-group-flush panel-collapse collapse\">\n                        <li class=\"list-group-item list-group-item-info\"\n                            ng-repeat=\"shell in msg.payload | filter:search\">\n                            <button class=\"btn btn-link text-info\" data-toggle=\"collapse\" data-target=\"#collapse12_{{shell.shellIdShort}}\" aria-expanded=\"true\" aria-controls=\"collapse12_{{shell.shellIdShort}}\" ng-if=\"shell != ''\">\n                                        Asset Administration Shell idShort: <strong>{{shell.shellIdShort}}</strong>\n                                    </button>\n                            <span class=\"badge  badge-warning badge-pill\">{{shell.submodels.length}}</span>\n                            <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse12_{{shell.shellIdShort}}\" ng-if=\"shell != ''\">idShort: <strong>{{shell.shellIdShort}}</strong></a>!-->\n                            <ul id=\"collapse12_{{shell.shellIdShort}}\"\n                                class=\"list-group list-group-flush panel-collapse collapse\">\n                                <li class=\"list-group-item\" ng-repeat=\"submodel in shell.submodels | filter:search\"\n                                    ng-init=\"submodelIndex=$index\">\n                                    <button class=\"btn btn-link text-black-50\" data-toggle=\"collapse\" data-target=\"#collapse22_{{submodel.idShort}}_{{submodelIndex}}\" aria-expanded=\"true\" aria-controls=\"collapse22_{{submodel.idShort}}_{{submodelIndex}}\" ng-if=\"submodel != ''\">\n                                               Submodel idShort: <strong>{{submodel.idShort}}</strong>\n                                            </button>\n                                    <span class=\"badge  badge-warning badge-pill\">{{submodel.submodelElements.length}}</span>\n                                    <!--<a class=\"text-black-50\" data-toggle=\"collapse\" href=\"#collapse22_{{submodel.idShort}}\" ng-if=\"submodel != ''\">idShort: <strong>{{submodel.idShort}}</strong></a>!-->\n                                    <ul id=\"collapse22_{{submodel.idShort}}_{{submodelIndex}}\"\n                                        class=\"list-group list-group-flush panel-collapse collapse\">\n                                        <li class=\"list-group-item list-group-item-info\"\n                                            ng-repeat=\"submodelElement in submodel.submodelElements | filter:search\"\n                                            ng-init=\"submodelElementIndex=$index\">\n                                            <div ng-if=\"submodelElement.modelType.name !== 'SubmodelElementCollection'\">\n                                                <label for=\"{{submodelElement.idShort}}_{{submodelElementIndex}}\">\n                                                                <button ng-class=\"changeTextColor(shell.shellIdentifier,submodel.idShort,submodelElement.idShort,'',{{msg.subscriptions}}) == 'true' ? 'btn btn-link text-danger' : 'btn btn-link text-info'\" data-toggle=\"collapse\" data-target=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}\">\n                                                                    Property idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                </button>\n                                                                <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}\">idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                            </label>\n                                                <ul id=\"collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}\"\n                                                    class=\"list-group list-group-flush panel-collapse collapse\">\n                                                    <li ng-if=\"submodelElement.semanticId.keys[0]\"\n                                                        class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Semantic Id:\n                                                            <strong>{{submodelElement.semanticId.keys[0].value}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.category\" class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Category:\n                                                            <strong>{{submodelElement.category}}</strong></a>\n                                                    </li>\n                                                    <li class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Model Type:\n                                                            <strong>{{submodelElement.modelType.name}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.mimeType\" class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">mime Type:\n                                                            <strong>{{submodelElement.mimeType}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.valueType\" class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Value Type:\n                                                            <strong>{{submodelElement.valueType.dataObjectType.name}}</strong></a>\n                                                    </li>\n                                                    <li class=\"list-group-item\">\n                                                        <a id=\"{{valueId(shell.shellIdShort, submodel.idShort, submodelElement.idShort, '')}}\"\n                                                            class=\"text-black-50\" data-toggle=\"collapse\">Value:\n                                                            <strong>{{submodelElement.value}}</strong></a>\n                                                    </li>\n                                                </ul>\n                                            </div>\n                                            <!--<div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                <!--ng-include=\"'tree_view'\" ng-init=\"depth = 2 + submodelIndex\">\n                                                <!-- <ul class=\"list-group list-group-flush\" ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view'\">\n                                                                </ul>!-->\n                                            <div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                <div ng-include=\"'tree_view'\" ng-if=\"true\"\n                                                    onload=\"root = path(submodelElement.idShort, '')\"\n                                                    ng-init=\"depth = 2 + submodelIndex\"></div>\n                                            </div>\n                                            <!--</div>!-->\n                                        </li>\n                                    </ul>\n\n                                </li>\n                            </ul>\n                        </li>\n                    </ul>\n                    <!--<a class=\"text-dark\" data-toggle=\"collapse\" href=\"#collapse02\">Administration Shells and Submodels</a>!-->\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3070,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "94a81a74448b93af",
        "type": "ui_template",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "group": "2cd7369eb2bb2708",
        "name": "Submodels_Login",
        "order": 1,
        "width": 20,
        "height": "30",
        "format": "<script>\n    (function(scope) {\n                 //scope.root = \"\";\n                 scope.depth = \"\";\n/*            scope.init = function() {\n                //scope.observations = [];\n                scope.send({payload:scope.observations});\n            }*/\n            scope.sendRequest = function(op){\n                var reqType = (op.type == \"operation\")?\"invoke\":(op.type == \"event\")?\"subscribe\":\"error, unkown type!!\";\n                this.send({payload:{action:op.action,to:op.to,requestType:reqType}});\n            }\n            scope.extractingElement = function(element, submodelId, shellId){\n                this.send({payload:{selectedElement: element, submodelId: submodelId, aasid: shellId}});\n            }\n            scope.extractingElementColl = function(element, root, submodelId, shellId){\n                //scope.root = submodelId;\n                this.send({payload:{selectedElement: element, path: root,submodelId: submodelId, aasid: shellId}});\n            }\n            scope.init = function(){\n                this.send({payload:\"init\"});\n            }\n            scope.path = function(root, element){\n                if(element == ''){\n                    return root;\n                } else {\n                    return root + \".\" + element;\n                }\n                \n            }\n            scope.changeTextColor = function(aasId, submodelId, submodelElementId, root, subscriptions){\n                let stringifyText = \"\";\n                if(root != \"\"){\n                    stringifyText = aasId + \";\" + submodelId + \";\" + root + \".\" + submodelElementId;\n                } else {\n                    stringifyText = aasId + \";\" + submodelId + \";\" + submodelElementId;\n                }\n                for(let element of subscriptions){\n                    var subscription = subscriptions[element];\n                    //var result = subscription.includes(stringifyText);\n                    if(subscription === stringifyText){\n                        return \"true\";\n                    }\n                }\n            \n                return \"false\";\n            }\n\n        })(scope)\n        \n</script>\n<script type=\"text/ng-template\" id=\"tree_view\">\n\n\n    <li class=\"list-group-item list-group-item-info\">\n                                                                    <button class=\"btn btn-link text-info\" data-toggle=\"collapse\" data-target=\"#collapse42_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\">\n                                                                    idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                    </button>\n                                                                    <ul id='collapse42_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}' class=\"list-group list-group-flush panel-collapse collapse\">\n                                                                    <li class=\"custom-control custom-checkbox list-group-item list-group-item-light\" ng-repeat=\"submodelElement in submodelElement.value | filter:search\" ng-init=\"submodelCollElementIndex=$index\" ng-if=\"submodelElement.category != 'CONSTANT'\">\n                                                                    <div ng-if=\" submodelElement.modelType.name === 'File'\" class=\"custom-control custom-checkbox\">\n                                                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\" ng-click=\"extractingElementColl(submodelElement, root, submodel.idShort, shell.shellIdentifier)\">\n                                                                    <label class=\"custom-control-label\" for=\"{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\">\n                                                                        <button ng-class=\"changeTextColor(shell.shellIdentifier,submodel.idShort,submodelElement.idShort,root,{{msg.subscriptions}}) == 'true' ? 'btn btn-link text-danger' : 'btn btn-link text-black-50'\" data-toggle=\"collapse\" data-target=\"#collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}\">\n                                                                            idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                        </button>\n                                                                        <!--<a class=\"text-black-50\" data-toggle=\"collapse\" href=\"#collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\">idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                                    </label>\n                                                                        <ul id=\"collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                                                            <li ng-if=\"submodelElement.semanticId.keys[0]\" class=\"list-group-item list-group-item-info\">\n                                                                                <a class=\"text-info\" data-toggle=\"collapse\">Semantic Id: <strong>{{submodelElement.semanticId.keys[0].value}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.category\" class=\"list-group-item list-group-item-info\">\n                                                                                <a class=\"text-info\" data-toggle=\"collapse\">Category: <strong>{{submodelElement.category}}</strong></a>\n                                                                            </li>\n                                                                            <li class=\"list-group-item list-group-item-info\">\n                                                                                <a class=\"text-info\" data-toggle=\"collapse\">Model Type: <strong>{{submodelElement.modelType.name}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.mimeType\" class=\"list-group-item list-group-item-info\">\n                                                                                <a class=\"text-info\" data-toggle=\"collapse\">mime Type: <strong>{{submodelElement.mimeType}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.valueType\" class=\"list-group-item list-group-item-info\">\n                                                                                <a class=\"text-info\" data-toggle=\"collapse\">Value Type: <strong>{{submodelElement.valueType.dataObjectType.name}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.category === 'CONSTANT' || submodelCollElement.category === 'PARAMETER'\" class=\"list-group-item list-group-item-info\">\n                                                                                <a class=\"text-info\" data-toggle=\"collapse\">Value: <strong>{{submodelElement.value}}</strong></a>\n                                                                            </li>\n                                                                        </ul>\n                                                                        </div>\n                                                                        <div class=\"small text-black-50\" ng-if=\"submodelElement.modelType.name !== 'SubmodelElementCollection' && submodelElement.modelType.name !== 'File'\">\n                                                                            idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                        </div>\n                                                                        <div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                                            <div ng-include=\"'tree_view2'\" ng-if=\"true\" onload=\"root = path(root, submodelElement.idShort)\" ng-init=\"depth = depth + 1 + submodelElementIndex\"></div>\n                                                                        </div>\n                                                                        <!--<div><ul class=\"list-group list-group-flush\" ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view2'\"></ul></div>!-->\n                                                                        </li>\n                                                                        </ul>\n                                                                        </li>\n                                                        \n        \n            \n        </script>\n<script type=\"text/ng-template\" id=\"tree_view2\">\n\n\n    <li class=\"list-group-item\">\n                                                                    <button class=\"btn btn-link text-black-50\" data-toggle=\"collapse\" data-target=\"#collapse42_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\">\n                                                                    idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                    </button>\n                                                                    <ul id='collapse42_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}' class=\"list-group list-group-flush panel-collapse collapse\">\n                                                                    <li class=\"custom-control custom-checkbox list-group-item list-group-item-info\" ng-repeat=\"submodelElement in submodelElement.value | filter:search\" ng-init=\"submodelCollElementIndex=$index\" ng-if=\"submodelElement.category != 'CONSTANT' \">\n                                                                    <div  ng-if=\" submodelElement.modelType.name === 'File'\" class=\"custom-control custom-checkbox\">\n                                                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\" ng-click=\"extractingElementColl(submodelElement, root, submodel.idShort, shell.shellIdentifier)\">\n                                                                    <label class=\"custom-control-label\" for=\"{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\">\n                                                                        <button ng-class=\"changeTextColor(shell.shellIdentifier,submodel.idShort,submodelElement.idShort,root,{{msg.subscriptions}}) == 'true' ? 'btn btn-link text-danger' : 'btn btn-link text-info'\" data-toggle=\"collapse\" data-target=\"#collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}\">\n                                                                            idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                        </button>\n                                                                        <!--<a class=\"text-black-50\" data-toggle=\"collapse\" href=\"#collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\">idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                                    </label>\n                                                                        <ul id=\"collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                                                            <li ng-if=\"submodelElement.semanticId.keys[0]\" class=\"list-group-item\">\n                                                                                <a class=\"text-black-50\" data-toggle=\"collapse\">Semantic Id: <strong>{{submodelElement.semanticId.keys[0].value}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.category\" class=\"list-group-item\">\n                                                                                <a class=\"text-black-50\" data-toggle=\"collapse\">Category: <strong>{{submodelElement.category}}</strong></a>\n                                                                            </li>\n                                                                            <li class=\"list-group-item\">\n                                                                                <a class=\"text-black-50\" data-toggle=\"collapse\">Model Type: <strong>{{submodelElement.modelType.name}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.mimeType\" class=\"list-group-item\">\n                                                                                <a class=\"text-black-50\" data-toggle=\"collapse\">mime Type: <strong>{{submodelElement.mimeType}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.valueType\" class=\"list-group-item\">\n                                                                                <a class=\"text-black-50\" data-toggle=\"collapse\">Value Type: <strong>{{submodelElement.valueType.dataObjectType.name}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.category === 'CONSTANT' || submodelCollElement.category === 'PARAMETER'\" class=\"list-group-item\">\n                                                                                <a class=\"text-black-50\" data-toggle=\"collapse\">Value: <strong>{{submodelElement.value}}</strong></a>\n                                                                            </li>\n                                                                        </ul>\n                                                                        </div>\n                                                                        <div class=\"small text-info\"\n                                                                            ng-if=\"submodelElement.modelType.name !== 'SubmodelElementCollection' && submodelElement.modelType.name !== 'File'\">\n                                                                            idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                        </div>\n                                                                        <div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                                            <div ng-include=\"'tree_view'\" ng-if=\"true\" onload=\"root = path(root, submodelElement.idShort)\" ng-init=\"depth = depth + 1 + submodelElementIndex\"></div>\n                                                                        </div>\n                                                                        <!--<div><ul class=\"list-group list-group-flush\" ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view'\" ></ul></div>!-->\n                                                                        </li>\n                                                                        </ul>\n                                                                        </li>\n                                                        \n        \n            \n        </script>\n<div id=\"deck_2\" class=\"card-group\" ng-init=\"init()\">\n    <div class=\"card-body\">\n        <div class=\"input-group input-group-sm mb-3\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"global search...\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-sm\" ng-model=\"search\">\n        </div>\n        <div class=\"card text-white bg-light mb-3\">\n            <ul class=\"list-group list-group-flush\">\n                <li id=\"loginList\" class=\"list-group-item\">\n                    <button class=\"btn btn-link text-dark\" data-toggle=\"collapse\" data-target=\"#collapse03\" aria-expanded=\"true\" aria-controls=\"#collapse03\">\n                            Administration Shells and Submodels\n                            </button>\n                    <!--<a class=\"text-dark\" data-toggle=\"collapse\" href=\"#collapse03\">Administration Shells and Submodels</a>!-->\n                    <ul id=\"collapse03\" class=\"list-group list-group-flush panel-collapse collapse\">\n                        <li class=\"list-group-item list-group-item-info\"\n                            ng-repeat=\"shell in msg.payload | filter:search\">\n                            <button class=\"btn btn-link text-info\" data-toggle=\"collapse\" data-target=\"#collapse13_{{shell.shellIdShort}}\" aria-expanded=\"true\" aria-controls=\"collapse13_{{shell.shellIdShort}}\" ng-if=\"shell != ''\">\n                                        idShort: <strong>{{shell.shellIdShort}}</strong>\n                                    </button>\n                            <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse13_{{shell.shellIdShort}}\" ng-if=\"shell != ''\">idShort: <strong>{{shell.shellIdShort}}</strong></a>!-->\n                            <ul id=\"collapse13_{{shell.shellIdShort}}\"\n                                class=\"list-group list-group-flush panel-collapse collapse\">\n                                <li class=\"list-group-item\" ng-repeat=\"submodel in shell.submodels | filter:search\">\n                                    <button class=\"btn btn-link text-black-50\" data-toggle=\"collapse\" data-target=\"#collapse23_{{submodel.idShort}}\" aria-expanded=\"true\" aria-controls=\"collapse23_{{submodel.idShort}}\" ng-if=\"submodel != ''\">\n                                                idShort: <strong>{{submodel.idShort}}</strong>\n                                            </button>\n                                    <!--<a class=\"text-black-50\" data-toggle=\"collapse\" href=\"#collapse23_{{submodel.idShort}}\" ng-if=\"submodel != ''\">idShort: <strong>{{submodel.idShort}}</strong></a>!-->\n                                    <ul id=\"collapse23_{{submodel.idShort}}\"\n                                        class=\"list-group list-group-flush panel-collapse collapse\">\n                                        <li class=\"list-group-item list-group-item-info\"\n                                            ng-repeat=\"submodelElement in submodel.submodelElements | filter:search\"\n                                            ng-init=\"submodelElementIndex=$index\"\n                                            ng-if=\"submodelElement.category != 'CONSTANT'\">\n                                            <div ng-if=\" submodelElement.modelType.name === 'File'\"\n                                                class=\"custom-control custom-checkbox\">\n                                                <input  type=\"checkbox\" class=\"custom-control-input\" id=\"{{submodelElement.idShort}}_{{submodelElementIndex}}\" ng-click=\"extractingElement(submodelElement, submodel.idShort, shell.shellIdentifier)\">\n                                                <label class=\"custom-control-label\" for=\"{{submodelElement.idShort}}_{{submodelElementIndex}}\">\n                                                                <button ng-class=\"changeTextColor(shell.shellIdentifier,submodel.idShort,submodelElement.idShort,'',{{msg.subscriptions}}) == 'true' ? 'btn btn-link text-danger' : 'btn btn-link text-info'\" data-toggle=\"collapse\" data-target=\"#collapse33_{{submodelElement.idShort}}_{{submodelElementIndex}}\" aria-expanded=\"true\" aria-controls=\"#collapse33_{{submodelElement.idShort}}_{{submodelElementIndex}}\">\n                                                                    idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                </button>\n                                                                <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse33_{{submodelElement.idShort}}_{{submodelElementIndex}}\">idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                            </label>\n                                                <ul id=\"collapse33_{{submodelElement.idShort}}_{{submodelElementIndex}}\"\n                                                    class=\"list-group list-group-flush panel-collapse collapse\">\n                                                    <li ng-if=\"submodelElement.semanticId.keys[0]\"\n                                                        class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Semantic Id:\n                                                            <strong>{{submodelElement.semanticId.keys[0].value}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.category\" class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Category:\n                                                            <strong>{{submodelElement.category}}</strong></a>\n                                                    </li>\n                                                    <li class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Model Type:\n                                                            <strong>{{submodelElement.modelType.name}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.mimeType\" class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">mime Type:\n                                                            <strong>{{submodelElement.mimeType}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.valueType\" class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Value Type:\n                                                            <strong>{{submodelElement.valueType.dataObjectType.name}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.category === 'CONSTANT' || submodelElement.category === 'PARAMETER'\"\n                                                        class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Value:\n                                                            <strong>{{submodelElement.value}}</strong></a>\n                                                    </li>\n                                                </ul>\n                                            </div>\n                                            <div class=\"small text-info\"\n                                                ng-if=\"submodelElement.modelType.name !== 'SubmodelElementCollection' && submodelElement.modelType.name !== 'File'\">\n                                                idShort: <strong>{{submodelElement.idShort}}</strong>\n                                            </div>\n                                            <div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                <div ng-include=\"'tree_view'\" ng-if=\"true\"\n                                                    onload=\"root = path(submodelElement.idShort, '')\"\n                                                    ng-init=\"depth = 2 + submodelIndex\"></div>\n                                            </div>\n                                            <!--<ul class=\"list-group list-group-flush\" ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view'\">\n                                                                </ul>!-->\n        </div>\n        </li>\n\n        </ul>\n\n        </li>\n        </ul>\n        </li>\n        </ul>\n        </li>\n        </ul>\n    </div>\n</div>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3090,
        "y": 680,
        "wires": [
            [
                "b97a9c0b053e3493",
                "d2afd4df8de4249a"
            ]
        ]
    },
    {
        "id": "4c2999f8bc60f2ae",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1690,
        "y": 3140,
        "wires": []
    },
    {
        "id": "f4884d63f5c8ef68",
        "type": "file",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "",
        "filename": "/app/report.pdf",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "base64",
        "x": 1170,
        "y": 3780,
        "wires": [
            [
                "ee663eb6c5cd0822",
                "3d1ac4f99574f59a"
            ]
        ]
    },
    {
        "id": "e60c215d6f0ab6f1",
        "type": "function",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "ReportObject",
        "func": "var outMsg = {};\noutMsg.payload = {};\nvar header = msg.payload;\noutMsg.payload.header = header;\nvar report = {};\nreport.AASIdentifier = context.global.get(\"AASIdentifier\");\nreport.status = context.global.get(\"NOVAAS_Overall_Status\");\nreport.statsSBI = context.global.get(\"statsSBI\");\nreport.statusCheckSBI = context.global.get(\"statusCheckSBI\");\nreport.logs = context.flow.get(\"logs\");\nreport.accountlog = context.flow.get(\"accountlog\");\nreport.logo = context.flow.get(\"logoBase64\");\noutMsg.payload.report = report;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 690,
        "y": 3780,
        "wires": [
            [
                "471db6935111f3d3",
                "f79c44ba40f98d06"
            ]
        ]
    },
    {
        "id": "d39e759fb8c198fd",
        "type": "ui_form",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "",
        "label": "",
        "group": "7dcd4079.256cf",
        "order": 4,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Date",
                "value": "date",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "Email",
                "value": "user",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "Notes",
                "value": "notes",
                "type": "multiline",
                "required": true,
                "rows": 6
            }
        ],
        "formValue": {
            "date": "",
            "user": "",
            "notes": ""
        },
        "payload": "",
        "submit": "Create Report",
        "cancel": "Cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "x": 520,
        "y": 3780,
        "wires": [
            [
                "e60c215d6f0ab6f1",
                "3144a6e01f9af2c2"
            ]
        ]
    },
    {
        "id": "77c08b62f1c5fc0d",
        "type": "ui_ui_control",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "",
        "events": "all",
        "x": 210,
        "y": 3780,
        "wires": [
            [
                "5ef6e3bfdd014a27",
                "7f412d6640237312",
                "51a4e2d13a898bfe"
            ]
        ]
    },
    {
        "id": "5ef6e3bfdd014a27",
        "type": "function",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "PreFilling",
        "func": "msg.payload = {};\nmsg.payload.date = new Date();\nmsg.payload.user = context.flow.get(\"userName\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 370,
        "y": 3780,
        "wires": [
            [
                "d39e759fb8c198fd"
            ]
        ]
    },
    {
        "id": "471db6935111f3d3",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 3720,
        "wires": []
    },
    {
        "id": "3144a6e01f9af2c2",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 3840,
        "wires": []
    },
    {
        "id": "ee663eb6c5cd0822",
        "type": "function",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "download Group",
        "func": "var msg = {};\n\n//msg.payload = {tab: \"Login\"};\n/*msg.payload = { group: {\n    hide : [\"Login_SensorData\", \"Login_History\"],\n    show : [\"Login_Signin\"]\n}\n};*/\n\nmsg.payload = { group: {\n    show : [\"Reporting_ReportDownload\"]\n}\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1380,
        "y": 3780,
        "wires": [
            [
                "d32bfcb5f06e19f5"
            ]
        ]
    },
    {
        "id": "d32bfcb5f06e19f5",
        "type": "ui_ui_control",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "show download",
        "x": 1570,
        "y": 3780,
        "wires": [
            []
        ]
    },
    {
        "id": "7f412d6640237312",
        "type": "function",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "download group",
        "func": "\n//msg.payload = {tab: \"Login\"};\n/*msg.payload = { group: {\n    hide : [\"Login_SensorData\", \"Login_History\"],\n    show : [\"Login_Signin\"]\n}\n};*/\n\nmsg.payload = { group: {\n    hide : [\"Reporting_ReportDownload\"]\n}\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 3740,
        "wires": [
            [
                "fed3c280faa44045"
            ]
        ]
    },
    {
        "id": "fed3c280faa44045",
        "type": "ui_ui_control",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "hide download",
        "x": 630,
        "y": 3740,
        "wires": [
            []
        ]
    },
    {
        "id": "9ad2c9130d6f50a9",
        "type": "comment",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "Reporting Section",
        "info": "",
        "x": 220,
        "y": 3540,
        "wires": []
    },
    {
        "id": "51a4e2d13a898bfe",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 3620,
        "wires": []
    },
    {
        "id": "f79c44ba40f98d06",
        "type": "function",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "",
        "func": "var tableBuilder = function (data, columns) {\n    var body = [];\n\n    body.push(columns);\n\n    data.forEach(function(row) {\n        var dataRow = [];\n\n        columns.forEach(function(column) {\n            dataRow.push(row[column].toString());\n        })\n\n        body.push(dataRow);\n    });\n\n    return body;\n}\n\nvar checkValue = function(value){\n    if(value.link){\n        return value.link;\n    } else if(value.value){\n        return value.value;\n    }\n}\n\nvar convertTime = function(value){\n    var time = new Date(value.time);\n    return time;\n}\n\nvar outMsg = {};\n\nvar accountLogTable = [];\nfor (var elementAccountLog = 0; elementAccountLog < msg.payload.report.accountlog.length; elementAccountLog++){\n    accountLogTable.push(\n        {\n            \"accessAt\": msg.payload.report.accountlog[elementAccountLog].accessAt,\n            \"username\": msg.payload.report.accountlog[elementAccountLog].username\n        }\n        );\n}\n\nvar logsTable = [];\nfor (var elementLogs = 0; elementLogs < msg.payload.report.logs.length; elementLogs++){\n    logsTable.push(\n        {\n\t\t\t\"observableReference\": msg.payload.report.logs[elementLogs].observableRef,\n            \"aasId\": msg.payload.report.logs[elementLogs].aasId,\n            \"timestamp\": convertTime(msg.payload.report.logs[elementLogs]),\n            \"value\": checkValue(msg.payload.report.logs[elementLogs])\n        }\n        );\n}\n\nvar dd = {\n     \"header\": function(currentPage, pageCount, pageSize) {\n         if(msg.payload.report.logo){\n            return [\n                { \"image\": \"data:image/png;base64,\" + msg.payload.report.logo, \"height\": 30, \"width\": 30 }\n            ]\n        } else return;\n    },\n    \"footer\": function(currentPage, pageCount, pageSize) {\n        if(msg.payload.report.logo){\n            return [\n                { \"image\": \"data:image/png;base64,\" + msg.payload.report.logo, \"height\": 30, \"width\": 30 }\n            ]\n        } else return;\n    },    \n    \"content\": [\n\t\t{ \"text\": \"NOVAsset Administration Shell Report\", \"style\": \"header\" },\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t\t\"widths\": [\"*\", \"*\"],\n\t\t\t\t\"body\": [\n\t\t\t\t\t[\"Created by \", msg.payload.header.user],\n\t\t\t\t\t[\"Created at \", msg.payload.header.date],\n\t\t\t\t\t[\"Notes \", msg.payload.header.notes]\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{ \"text\": \"NOVAAS Overview\", \"style\": \"subheader\" },\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t    \"widths\": [\"*\", \"*\"],\n\t\t\t\t\"body\": [\n\t\t\t\t\t[\"NOVAAS Identifier\", msg.payload.report.AASIdentifier],\n\t\t\t\t\t[\"Status\", msg.payload.report.status]\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t\t\"widths\": [\"*\", \"*\"],\n\t\t\t\t\"headerRows\": 1,\n\t\t\t\t\"body\": [\n\t\t\t\t\t[{ \"text\": \"Southbound Interface Statistics\", \"style\": \"tableHeader\", \"colSpan\": 2, \"alignment\": \"center\" }, {}],\n\t\t\t\t\t[\"Connector Status\", msg.payload.report.statusCheckSBI.connected],\n\t\t\t\t\t[\"Total number of Datasources\", msg.payload.report.statusCheckSBI.nrOfDataSources],\n\t\t\t\t\t[\"Inbound Messages\", msg.payload.report.statsSBI.msgSpeed],\n\t\t\t\t\t[\"Inbound  Interval and Frequency\", msg.payload.report.statsSBI.IntervalAndFrequency],\n\t\t\t\t\t[\"Inbound Messages Max\", msg.payload.report.statsSBI.maxMsgs]\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{ \"text\": \"Account Logs\", \"style\": \"subheader\" },\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t    \"widths\": [\"*\", \"*\"],\n\t\t\t    \"headerRows\": 1,\n\t\t\t\t\"body\":\ttableBuilder(accountLogTable, ['accessAt', 'username'])\n\t\t\t}\n\t\t},\n\t\t{ \"text\": \"Logs\", \"style\": \"subheader\" },\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t    \"widths\": ['auto', 'auto', 'auto', 'auto'],\n\t\t\t    \"headerRows\": 1,\n\t\t\t\t\"body\": tableBuilder(logsTable, ['aasId', 'observableReference', 'timestamp', 'value'])\n\t\t\t}\n\t\t}\n\t],\n\t\"styles\": {\n\t\t\"header\": {\n\t\t\t\"fontSize\": 18,\n\t\t\t\"bold\": true,\n\t\t\t\"margin\": [0, 0, 0, 10]\n\t\t},\n\t\t\"subheader\": {\n\t\t\t\"fontSize\": 16,\n\t\t\t\"bold\": true,\n\t\t\t\"margin\": [0, 10, 0, 5]\n\t\t},\n\t\t\"tableExample\": {\n\t\t\t\"margin\": [0, 5, 0, 15]\n\t\t},\n\t\t\"tableOpacityExample\": {\n\t\t\t\"margin\": [0, 5, 0, 15],\n\t\t\t\"fillColor\": \"blue\",\n\t\t\t\"fillOpacity\": 0.3\n\t\t},\n\t\t\"tableHeader\": {\n\t\t\t\"bold\": true,\n\t\t\t\"fontSize\": 13,\n\t\t\t\"color\": \"black\"\n\t\t}\n\t}\n}\noutMsg.payload = dd;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3780,
        "wires": [
            [
                "4caf5e397b61236f",
                "bb68c5775852e83b"
            ]
        ]
    },
    {
        "id": "bb68c5775852e83b",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 3720,
        "wires": []
    },
    {
        "id": "3a7820400b0ef71b",
        "type": "inject",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 3940,
        "wires": [
            [
                "67d5e889bbf2d781"
            ]
        ]
    },
    {
        "id": "67d5e889bbf2d781",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "PrepareOutput",
        "func": "msg.payload = \"-name\" + \" \" + \"logo.png\";\n//msg.payload = \"aasx/4830902_DPDM-6-15-PA---_0_.pdf\";\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 3940,
        "wires": [
            [
                "fcdf96d757aaa10f"
            ]
        ]
    },
    {
        "id": "fcdf96d757aaa10f",
        "type": "exec",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "command": "find",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 600,
        "y": 3940,
        "wires": [
            [
                "230cd49d83ebac0c"
            ],
            [],
            []
        ]
    },
    {
        "id": "230cd49d83ebac0c",
        "type": "change",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 3940,
        "wires": [
            [
                "349487d2c0a06cd7"
            ]
        ]
    },
    {
        "id": "349487d2c0a06cd7",
        "type": "file in",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 960,
        "y": 3940,
        "wires": [
            [
                "1747a5251df09ee6"
            ]
        ]
    },
    {
        "id": "012b6cbb87538c50",
        "type": "change",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "logoBase64",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 3940,
        "wires": [
            []
        ]
    },
    {
        "id": "c4209fe6f75f1848",
        "type": "ui_template",
        "z": "0230170315d4730f",
        "d": true,
        "g": "34b84477a5f175c8",
        "group": "6a4d510d.5de65",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<form action=\"/aasx/docu/report.pdf\" method=\"get\">\n    <input type=\"submit\" value=\"Download Report\" \n         name=\"Submit\" id=\"frm1_submit\" />\n</form>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 850,
        "y": 4100,
        "wires": [
            []
        ]
    },
    {
        "id": "4ff907509c925c46",
        "type": "template",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<form action=\"/aasx/docu/report.pdf\" method=\"get\">\n    <md-button class=\"btn1 vibrate filled touched bigfont\" type=\"submit\" value=\"{{{payload}}}\" \n         name=\"Submit\" id=\"frm1_submit\">Download</md-button>\n</form>",
        "output": "str",
        "x": 1390,
        "y": 3860,
        "wires": [
            [
                "2e94b6341b740dda"
            ]
        ]
    },
    {
        "id": "2e94b6341b740dda",
        "type": "ui_template",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "group": "6a4d510d.5de65",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1570,
        "y": 3860,
        "wires": [
            []
        ]
    },
    {
        "id": "3d1ac4f99574f59a",
        "type": "function",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "",
        "func": "msg.payload = context.flow.get('userToken');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 3860,
        "wires": [
            [
                "4ff907509c925c46"
            ]
        ]
    },
    {
        "id": "4caf5e397b61236f",
        "type": "pdfmake",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "",
        "outputType": "base64",
        "inputProperty": "payload",
        "options": "{}",
        "outputProperty": "payload",
        "x": 1010,
        "y": 3780,
        "wires": [
            [
                "f4884d63f5c8ef68"
            ]
        ]
    },
    {
        "id": "1747a5251df09ee6",
        "type": "base64",
        "z": "0230170315d4730f",
        "g": "34b84477a5f175c8",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 1150,
        "y": 3940,
        "wires": [
            [
                "012b6cbb87538c50"
            ]
        ]
    },
    {
        "id": "a07f5e53390d9519",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 160,
        "wires": []
    },
    {
        "id": "5b6c3d0d2747e38b",
        "type": "link call",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "links": [
            "b9a62249e001d9e7"
        ],
        "timeout": "30",
        "x": 1380,
        "y": 300,
        "wires": [
            [
                "ab7df8718dc0c2d0",
                "e9551d07136d6cb2"
            ]
        ]
    },
    {
        "id": "25b6bff18045b93f",
        "type": "link in",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "NOVAAS_InformChange_UI",
        "links": [
            "3cb977d7bc3f637f",
            "d6062c2d4af1614b",
            "1d1157358f0d4373",
            "6c74104b30ee1e23",
            "0641b68da24b78d3",
            "64c80d04abf73dd7",
            "2d37835612fd907a"
        ],
        "x": 760,
        "y": 580,
        "wires": [
            [
                "e85e5428c54d4dee",
                "2abc01a9c1b4fb12",
                "4eab4b3ff75820c3"
            ]
        ],
        "l": true
    },
    {
        "id": "831fbce5bb893554",
        "type": "link in",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "NOVAAS_Status_UI_In",
        "links": [
            "92efeed3ca645aa5"
        ],
        "x": 580,
        "y": 740,
        "wires": [
            [
                "7fabd8961af21415",
                "0c8818c588788156"
            ]
        ],
        "l": true
    },
    {
        "id": "58daedc7d8b0da49",
        "type": "link call",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "",
        "links": [
            "028dad41552f328b"
        ],
        "timeout": "30",
        "x": 1000,
        "y": 3120,
        "wires": [
            [
                "21fc8b2db5bb7fbe",
                "5d695c8c157c17c0"
            ]
        ]
    },
    {
        "id": "3af25fa94b644a9b",
        "type": "change",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "qrcodeinput",
                "pt": "msg",
                "to": "REPO_LOCATION",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "original",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 300,
        "wires": [
            [
                "b57a07f4b7ac6f89"
            ]
        ]
    },
    {
        "id": "b57a07f4b7ac6f89",
        "type": "qrcode-generator",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "qrtype": "text2qr",
        "text2qrText": "",
        "ssid": "",
        "hiddenssid": false,
        "wifitype": "",
        "phonenum": "",
        "smsphonenum": "",
        "smstext": "",
        "mailto": "",
        "mailsubject": "",
        "mailbody": "",
        "latitude": "",
        "longitude": "",
        "colorlight": "#ffffff",
        "colordark": "#000000",
        "printstatus": false,
        "x": 2890,
        "y": 300,
        "wires": [
            [
                "e4ed5870d7cd16d1"
            ]
        ]
    },
    {
        "id": "e4ed5870d7cd16d1",
        "type": "change",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "qrcode",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3060,
        "y": 300,
        "wires": [
            [
                "153d05dcc647e3e9"
            ]
        ]
    },
    {
        "id": "c86aca686f0ecfcb",
        "type": "msg-router",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2870,
        "y": 660,
        "wires": [
            [
                "ad97e70a777dc9b5"
            ],
            [
                "94a81a74448b93af"
            ]
        ]
    },
    {
        "id": "58da265d50268b46",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "statusVal": "",
        "statusType": "auto",
        "x": 2610,
        "y": 760,
        "wires": []
    },
    {
        "id": "1dc6eb5ec44d3086",
        "type": "function",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "func": "\nvar retrieveElementId = function (submodelElement, elementId, elementIds) {\n    \n    elementId = elementId + submodelElement.idShort;\n    if (submodelElement.modelType.name == \"SubmodelElementCollection\") {\n        elementId = elementId + \"_\";\n        let values = submodelElement.value;\n        for (let valueIndex of values){\n            retrieveElementId(values[valueIndex], elementId, elementIds);\n        }\n    } else {\n        elementId = elementId + \":\" + submodelElement.value;\n        elementIds.push(elementId);\n    }\n    return true;\n}\n\nlet elementIds = [];\nlet test = [];\nlet aasList = msg.payload;\nfor (let aasIndex = 0; aasIndex < aasList.length; aasIndex++){\n    let aas = aasList[aasIndex];\n    let submodelList = aas.submodels;\n    for (let submodelIndex = 0; submodelIndex < submodelList.length; submodelIndex++){\n        let submodelElementsList = submodelList[submodelIndex].submodelElements;\n        for (let submodelElementIndex = 0; submodelElementIndex < submodelElementsList.length; submodelElementIndex++){\n            let submodelElement = submodelElementsList[submodelElementIndex];\n            let modelType = submodelElement.modelType.name;\n            if (modelType == \"SubmodelElementCollection\" || submodelElement.category == \"VARIABLE\"){\n                let elementId = aas.shellIdShort + \"_\" + submodelList[submodelIndex].idShort + \"_\";\n                retrieveElementId(submodelElement, elementId, elementIds);\n            }\n        }\n    }\n\n\n}\n\n//msg.payload = \"DPDM_OperationalData_ResponseTimePred:\" + Math.random();\nmsg.payload = elementIds;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2900,
        "y": 720,
        "wires": [
            [
                "98da5766d0fe7431",
                "4986cfc9c1eb310a"
            ]
        ]
    },
    {
        "id": "0f7dec7c30a06aca",
        "type": "inject",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 1750,
        "y": 720,
        "wires": [
            [
                "f17216d80586a932"
            ]
        ]
    },
    {
        "id": "98da5766d0fe7431",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "statusVal": "",
        "statusType": "auto",
        "x": 3050,
        "y": 760,
        "wires": []
    },
    {
        "id": "4986cfc9c1eb310a",
        "type": "ui_template",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "group": "c68d835e.db3b2",
        "name": "UpdateValues",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            $(document).ready(function(){\n                let ids = msg.payload;\n                for(let idIndex of ids){\n                    let id = ids[idIndex];\n                    let valueSplit = id.split(\":\");\n                    let jqueryElementId = \"#\" + valueSplit[0];\n                    let jqueryElement = $(jqueryElementId);\n                    jqueryElement.html(\"Value: <strong>\" + valueSplit[1] + \"</strong>\");\n                }\n            });\n        });\n    })(scope)\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 3080,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "3963ad2256d49c31",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "parameterizedHttpRequest",
        "func": "var msg1 = {};\n\nmsg1.method = 'GET';\nmsg1.url = context.global.get('namespace') + \"/aasServer/env\";\nmsg1.headers = {\n    authorization: context.flow.get(\"userToken\")\n}\n\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 2240,
        "y": 720,
        "wires": [
            [
                "c3017a8fc833ab38"
            ]
        ]
    },
    {
        "id": "c3017a8fc833ab38",
        "type": "http request",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2450,
        "y": 720,
        "wires": [
            [
                "58da265d50268b46",
                "7d7d7496b94b7377"
            ]
        ]
    },
    {
        "id": "7d7d7496b94b7377",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "retrievingSubmodels",
        "func": "var outMsg = {};\nvar administrationShells = msg.payload.assetAdministrationShells;\nvar submodels = msg.payload.submodels;\nvar shells = [];\nfor(var shellIndex = 0; shellIndex < administrationShells.length; shellIndex++){\n    var element = {};\n    var shell = administrationShells[shellIndex];\n    element.shellIdShort = shell.idShort;\n    element.shellIdentifier = shell.identification.id;\n    element.submodels = [];\n    var shellSubmodels = shell.submodels;\n    for(var submodelIndex = 0; submodelIndex < submodels.length; submodelIndex++){\n        for(var shellSubmodelIndex = 0; shellSubmodelIndex < shellSubmodels.length; shellSubmodelIndex++){\n            if(submodels[submodelIndex].identification.id === shellSubmodels[shellSubmodelIndex].keys[0].value){\n                element.submodels.push(submodels[submodelIndex]);\n            }\n        }\n    }\n    shells.push(element);\n}\noutMsg.payload = shells;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2660,
        "y": 720,
        "wires": [
            [
                "1dc6eb5ec44d3086",
                "0988a0a707da28d4"
            ]
        ]
    },
    {
        "id": "1a1fbafff327a83e",
        "type": "ui_ui_control",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "events": "change",
        "x": 1740,
        "y": 780,
        "wires": [
            [
                "f72ad0fd50ef67af",
                "1934f024455f5572"
            ]
        ]
    },
    {
        "id": "f72ad0fd50ef67af",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1890,
        "y": 820,
        "wires": []
    },
    {
        "id": "f17216d80586a932",
        "type": "gate",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "controlTopic": "control",
        "defaultState": "closed",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "statusCmd": "status",
        "persist": false,
        "storeName": "default",
        "x": 2030,
        "y": 720,
        "wires": [
            [
                "3963ad2256d49c31"
            ]
        ]
    },
    {
        "id": "1934f024455f5572",
        "type": "function",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "func": "msg.topic = \"control\";\nif(msg.payload == \"change\" && msg.tab == 1){\n    msg.payload = \"open\";\n} else {\n    msg.payload = \"close\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 780,
        "wires": [
            [
                "f17216d80586a932"
            ]
        ]
    },
    {
        "id": "0988a0a707da28d4",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "589602158480967a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "statusVal": "",
        "statusType": "auto",
        "x": 2890,
        "y": 760,
        "wires": []
    },
    {
        "id": "bc59d23dd19344de",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3710,
        "y": 1500,
        "wires": []
    },
    {
        "id": "4295e933802d2304",
        "type": "ui_template",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "group": "63d120af.ce7f5",
        "name": "Log",
        "order": 0,
        "width": "34",
        "height": "12",
        "format": "    <script>\n        (function(scope) {\n            scope.logs = [];\n        \n            scope.$watch('msg', function(msg){\n                if (msg) {\n                    if (msg.payload) {\n                        scope.logs = msg.payload;\n                    }\n                }\n            });\n            scope.init = function() {\n                //scope.observations = [];\n                scope.send({payload:scope.observations});\n            }\n        })(scope)\n    </script>\n    <div id=\"logs_Table\" ng-init=\"init()\">\n        <table class=\"table table-sm\">\n            <thead class=\"text-dark\">\n                <tr>\n                    <th scope=\"col\">AAS Id</th>\n                    <th scope=\"col\">Observable Reference</th>\n                    <th scope=\"col\">_msgId</th>\n                    <th scope=\"col\">Timestamp</th>\n                    <th scope=\"col\">Value</th>\n                </tr>\n            </thead>\n            <tbody>\n            <tr class=\"table-info\" ng-repeat=\"i in logs\">\n                <td><a class=\"text-dark\">{{i.aasId}}</a></td>\n                <td><a class=\"text-dark\">{{i.observableRef}}</a></td>\n                <td><a class=\"text-dark\">{{i.id}}</a></td>\n                <td><a class=\"text-dark\">{{i.timestamp}}</a></td>\n                <td ng-if='i.link != undefined'><a class=\"btn btn-link\" target=\"_blank\" rel=\"noopener noreferrer\" ng-href=\"{{i.link}}\">{{i.link}}</a></td>\n                <td ng-if='i.value != undefined'><a class=\"text-dark\">{{i.value}}</a></td>\n                \n                <!--<td><a class=\"text-dark\">{{i.value}}</a></td>!-->\n                <!--<td style=\"cursor:pointer;\" ng-click=\"remove(i)\" title=\"Remove\">&times;</td>!-->\n            </tr>\n            </tbody>\n            \n        </table>\n    </div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3573.690185546875,
        "y": 1498.8096923828125,
        "wires": [
            [
                "bc59d23dd19344de"
            ]
        ]
    },
    {
        "id": "3396c923f558a90d",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "name": "LogsProcessing",
        "func": "//Retreiving Libraries from the Settings.json file\nif(msg.payload){\n    /*\n    //var observation = JSON.parse(msg.payload);\n    var observation = msg.payload;\n    var logs = context.flow.get('logs');\n    var copyLogs = logs.slice(Math.max(logs.length - 25, 0));\n    //for(var log of msg.payload){\n    //    logs.push(msg.payload[log]);\n    //}\n    var log = {};\n    if(typeof observation.payload.href !== \"undefined\"){\n        log.link = observation.payload.href;\n    } else{\n        log.value = observation.payload;\n    }\n    //log.time = Date.now();\n    log.time = observation.timestamp;\n    log._msgid = msg._msgid;\n    log.AASID = context.global.get('AASIdentifier');\n    log.observableReference = observation.observableReference;\n    if(copyLogs.length > 25){\n        copyLogs.pop();\n        copyLogs.push(log);\n        logs.push(log);\n    } else {\n        logs.push(log);\n    }*/\n    \n    context.flow.set('logs', msg.payload);\n    var outputMsg = {};\n    //msg.payload = logs;\n    //outputMsg.payload = logs;\n    outputMsg.payload = msg.payload;\n    return outputMsg;\n}\nmsg.payload = \"\";\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "x": 3053.0234375,
        "y": 1498.4285888671875,
        "wires": [
            [
                "426b73a6308cbf4d",
                "4295e933802d2304",
                "1215156120a47a77"
            ]
        ]
    },
    {
        "id": "8ead88f230d497e3",
        "type": "ui_button",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "name": "Clear button",
        "group": "b9aed87e.bdd0c8",
        "order": 23,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "Clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "#ff5555",
        "icon": "clear_all",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 2210,
        "y": 1660,
        "wires": [
            [
                "d7e8125eebf8747b",
                "846a6d5c762b07fa"
            ]
        ]
    },
    {
        "id": "426b73a6308cbf4d",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3665.504150390625,
        "y": 1442.7667846679688,
        "wires": []
    },
    {
        "id": "1215156120a47a77",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3227.1663208007812,
        "y": 1557.4762573242188,
        "wires": []
    },
    {
        "id": "0f63ca3d7484e2de",
        "type": "ui_template",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "group": "16ffbcf4.6cfa43",
        "name": "AccountLog",
        "order": 0,
        "width": "34",
        "height": "12",
        "format": "    <script>\n        (function(scope) {\n            scope.logs = [];\n        \n            scope.$watch('msg', function(msg){\n                if (msg) {\n                    if (msg.payload) {\n                        scope.logs = msg.payload;\n                    }\n                }\n            });\n        })(scope)\n    </script>\n    <div id=\"accountLog_Table\">\n        <table class=\"table table-sm\">\n            <thead class=\"text-dark\">\n                <tr>\n                    <th scope=\"col\">access At</th>\n                    <th scope=\"col\">username</th>\n                </tr>\n            </thead>\n            <tbody>\n            <tr class=\"table-success\" ng-repeat=\"i in logs\">\n                <td><a class=\"text-dark\">{{i.accessAt}}</a></td>\n                <td><a class=\"text-dark\">{{i.username}}</a></td>\n            </tr>\n            </tbody>\n            \n        </table>\n    </div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3510,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "9ef6abd9ac8bfadd",
        "type": "sqlite",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "mydb": "0908267e4fcb25d5",
        "sqlquery": "fixed",
        "sql": "select * FROM accountLogs",
        "name": "",
        "x": 2730,
        "y": 1540,
        "wires": [
            [
                "a09dea98fa79d38c"
            ]
        ]
    },
    {
        "id": "52e8f6f261518acb",
        "type": "ui_ui_control",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "name": "",
        "events": "change",
        "x": 1900,
        "y": 1540,
        "wires": [
            [
                "60ba5eb873a9153c"
            ]
        ]
    },
    {
        "id": "d7e8125eebf8747b",
        "type": "sqlite",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "mydb": "0908267e4fcb25d5",
        "sqlquery": "fixed",
        "sql": "delete FROM accountLogs",
        "name": "",
        "x": 2850,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "846a6d5c762b07fa",
        "type": "sqlite",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "mydb": "0908267e4fcb25d5",
        "sqlquery": "fixed",
        "sql": "delete FROM aasLogs",
        "name": "",
        "x": 2850,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "60ba5eb873a9153c",
        "type": "ui_button",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "name": "Refresh button",
        "group": "b9aed87e.bdd0c8",
        "order": 22,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "#14524e",
        "className": "",
        "icon": "cached",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2280,
        "y": 1540,
        "wires": [
            [
                "9ef6abd9ac8bfadd",
                "f60a7527d19658ee"
            ]
        ]
    },
    {
        "id": "dbc2fc614c6fa3c5",
        "type": "link call",
        "z": "0230170315d4730f",
        "g": "209a75bab732c2fc",
        "name": "",
        "links": [
            "97ed83699ddd3dfe"
        ],
        "timeout": "30",
        "x": 630,
        "y": 3020,
        "wires": [
            []
        ]
    },
    {
        "id": "f60a7527d19658ee",
        "type": "sqlite",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "fixed",
        "sql": "select * FROM aasLogs",
        "name": "",
        "x": 2730,
        "y": 1500,
        "wires": [
            [
                "3396c923f558a90d"
            ]
        ]
    },
    {
        "id": "a09dea98fa79d38c",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "name": "LogsProcessing",
        "func": "//Retreiving Libraries from the Settings.json file\nif(msg.payload){\n    /*\n    //var observation = JSON.parse(msg.payload);\n    var observation = msg.payload;\n    var logs = context.flow.get('logs');\n    var copyLogs = logs.slice(Math.max(logs.length - 25, 0));\n    //for(var log of msg.payload){\n    //    logs.push(msg.payload[log]);\n    //}\n    var log = {};\n    if(typeof observation.payload.href !== \"undefined\"){\n        log.link = observation.payload.href;\n    } else{\n        log.value = observation.payload;\n    }\n    //log.time = Date.now();\n    log.time = observation.timestamp;\n    log._msgid = msg._msgid;\n    log.AASID = context.global.get('AASIdentifier');\n    log.observableReference = observation.observableReference;\n    if(copyLogs.length > 25){\n        copyLogs.pop();\n        copyLogs.push(log);\n        logs.push(log);\n    } else {\n        logs.push(log);\n    }*/\n    \n    context.flow.set('accountlog', msg.payload);\n    var outputMsg = {};\n    //msg.payload = logs;\n    //outputMsg.payload = logs;\n    outputMsg.payload = msg.payload;\n    return outputMsg;\n}\nmsg.payload = \"\";\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "x": 3180,
        "y": 1640,
        "wires": [
            [
                "0f63ca3d7484e2de"
            ]
        ]
    },
    {
        "id": "b4ac101bfa513716",
        "type": "ui_template",
        "z": "0230170315d4730f",
        "group": "",
        "name": "Load Bootstrap libraries",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/bootstrap.min.css\" />\n<link rel=\"stylesheet\" href=\"css/novaas.css\">\n<script type=\"text/javascript\" src=\"/css/jquery-3.3.1.slim.min.js\"></script>\n<script type=\"text/javascript\" src=\"/css/popper.min.js\"></script>\n<script type=\"text/javascript\" src=\"/css/bootstrap.min.js\"></script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 290,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "df5135dee4a2ae0d",
        "type": "ui_template",
        "z": "0230170315d4730f",
        "group": "",
        "name": "Logo / Clock",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<script id=\"clockScript1\" type=\"text/javascript\">\n    var clockInterval;\n    $(function () {\n        if (clockInterval) return;\n\n        //add logo\n        var div1 = $('<div/>');\n        var logo = new Image();\n\n        logo.src = '/images/' + \"logo.png\";\n        logo.height = 45;\n        div1[0].style.margin = '10px auto';\n\n///        div1.append(logo);*/\n\n        //add clock\n        var div2 = $('<div/>');\n        var p = $('<p/>');\n\n        div2.append(p);\n        div2[0].style.margin = '5px';\n\n        function displayTime() {\n            p.text(new Date().toLocaleString());\n        }\n        \n        clockInterval = setInterval(displayTime, 1000);\n\n        //add to toolbar when it's available\n        var addToToolbarTimer;\n        \n        function addToToolbar() {\n            var toolbar = $('.md-toolbar-tools');\n            \n            if(!toolbar.length) return;\n            \n            toolbar.append(div1);\n            toolbar.append(div2);\n            clearInterval(addToToolbarTimer);\n        }\n        addToToolbarTimer = setInterval(addToToolbar, 100);\n    });\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 710,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "b371980e536eb0d9",
        "type": "ui_template",
        "z": "0230170315d4730f",
        "g": "606b287e669294f4",
        "group": "f57f5dd7.e298c",
        "name": "Active Subscriptions",
        "order": 0,
        "width": "34",
        "height": "20",
        "format": "    <script>\n        (function(scope) {\n            //scope.connections = [];\n            scope.$watch('msg', function(msg){\n                //scope.connections = [];\n                if (msg) {\n                    if (msg.payload) {\n                        scope.subscriptions = [];\n                        for (var index of msg.payload){\n                            var subscription = msg.payload[index].split(\";\");\n                            scope.subscriptions.push(subscription);\n                        }\n                        //scope.connections = msg.payload;\n                    }\n                }\n            });\n            scope.init = function() {\n                //scope.connections = [];\n                //scope.send({payload:scope.connections});\n            }\n        })(scope)\n    </script>\n    <div id=\"deck\" ng-init=\"init()\">\n        <table class=\"table table-sm\">\n            <thead class=\"text-dark\">\n                <tr>\n                    <th scope=\"col\">Observable Reference</th>\n                    <th scope=\"col\">Status</th>\n                </tr>\n            </thead>\n            <tbody>\n            <tr class=\"table-info\" ng-repeat=\"s in subscriptions\">\n                <td><a class=\"text-dark\">{{s[0]}}</a></td>\n                <td><a class=\"text-success\">Subscribed</a></td>\n                \n                <!--<td><a class=\"text-dark\">{{i.value}}</a></td>!-->\n                <!--<td style=\"cursor:pointer;\" ng-click=\"remove(i)\" title=\"Remove\">&times;</td>!-->\n            </tr>\n            </tbody>\n            \n        </table>\n    </div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3720,
        "y": 2800,
        "wires": [
            []
        ]
    },
    {
        "id": "81b4e003873a279c",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "name": "LiveDataToGet",
        "func": "//Retreiving Libraries from the Settings.json file\nlet outputMsgsFileData = [];\nlet outputMsgsPropertyData = [];\n\nlet uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\nlet selectedElements = context.flow.get('selectedElements');\nfor(let element = 0; element < selectedElements.length; element++){\n    let selected_element = \"\";\n    if(typeof selectedElements[element].path != \"undefined\"){\n        selected_element = selectedElements[element].aasid + \"/\" + selectedElements[element].submodelId + \"/\" + selectedElements[element].path + \"/\" + selectedElements[element].selectedElement.idShort;\n    }//let selected_element = selectedElements[element].submodelId + \";\" + selectedElements[element].selectedElement.idShort;\n    else {\n        selected_element = selectedElements[element].aasid + \"/\" + selectedElements[element].submodelId + \"/\" + selectedElements[element].selectedElement.idShort;\n    }\n    let modelType = selectedElements[element].selectedElement.modelType.name;\n    let category = selectedElements[element].selectedElement.category;\n    \n    /*if (modelType == \"File\")\n    {\n        let observation = {};\n        observation.id = uuid;\n        observation.source = context.global.get(\"AASIdentifier\");\n        observation.direction = \"Output\";\n        observation.observableReference = selected_element;\n        observation.timestamp = new Date().getTime();\n        observation.payload = {href: selectedElements[element].selectedElement.value};\n        let msg = {payload:observation};\n        outputMsgsFileData.push(msg);\n    } else {*/\n        let msg = {payload:selected_element};\n        let shellId = encodeURIComponent(selectedElements[element].aasid);\n        let encodedSelected_Element = encodeURIComponent(selectedElements[element].submodelId);\n        \n        //\"/aasServer/shells/:aasid/aas/submodels/:submodelId/submodel/submodelElements/:id\"\n        if(typeof selectedElements[element].path != \"undefined\"){\n            msg.url = context.global.get('namespace') + \"/aasServer/shells/\" + shellId + \"/aas/submodels/\" + encodedSelected_Element +\"/submodel/submodel-elements/\" + selectedElements[element].path + \".\" + selectedElements[element].selectedElement.idShort;\n        } else {\n            msg.url = context.global.get('namespace') + \"/aasServer/shells/\" + shellId + \"/aas/submodels/\" + encodedSelected_Element +\"/submodel/submodel-elements/\" + selectedElements[element].selectedElement.idShort;\n        }\n    msg.headers = {\n        authorization: context.flow.get(\"userToken\")\n    }\n\n        outputMsgsPropertyData.push(msg);\n    //}\n    \n}\n\nreturn [outputMsgsFileData, outputMsgsPropertyData];",
        "outputs": 2,
        "noerr": 0,
        "x": 2180,
        "y": 1440,
        "wires": [
            [
                "b7913ecd599b9d5c",
                "e124e9ab5b082a92"
            ],
            [
                "b04e9ff349453b2e"
            ]
        ]
    },
    {
        "id": "e124e9ab5b082a92",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2390,
        "y": 1400,
        "wires": []
    },
    {
        "id": "b7913ecd599b9d5c",
        "type": "msg-router",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": true,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": true,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2890,
        "y": 1440,
        "wires": [
            [
                "9f3fef0da6e620f0"
            ],
            [
                "3396c923f558a90d"
            ]
        ]
    },
    {
        "id": "62d2430d465ff130",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "name": "Prepare Log",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n\n// Process msg payload\n\nlet filterNamespaceUrl = msg.url.replace(context.global.get('namespace'), \"\");\nlet filterAPIElements1Url = filterNamespaceUrl.replace(\"/aasServer/shells/\", \"\");\nlet filterAPIElements2Url = filterAPIElements1Url.replace(\"/aas/submodels\", \"\");\nlet filterAPIElements3Url = filterAPIElements2Url.replace(\"/submodel/submodel-elements\", \"\");\n\n//let splittedUrl = filterAPIElements2Url.split(\"/\");\n\n\n\n//\n\nlet observation = {};\nobservation.id = uuid;\nobservation.source = context.global.get('AASIdentifier');\nobservation.direction = \"Output\";\nobservation.observableReference = decodeURIComponent(filterAPIElements3Url.trim());\nobservation.timestamp = new Date().getTime();\nobservation.payload = msg.payload.value;\nmsg.payload = observation;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2650,
        "y": 1460,
        "wires": [
            [
                "b7913ecd599b9d5c"
            ]
        ]
    },
    {
        "id": "b04e9ff349453b2e",
        "type": "http request",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2430,
        "y": 1460,
        "wires": [
            [
                "22e7ac62ce4bb75d",
                "62d2430d465ff130"
            ]
        ]
    },
    {
        "id": "cceac5885732d9f8",
        "type": "ui_button",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "name": "Get button",
        "group": "119a3caed3208dbd",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Get",
        "tooltip": "",
        "color": "",
        "bgcolor": "#14524e",
        "className": "",
        "icon": "swap_vert",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 1930,
        "y": 1440,
        "wires": [
            [
                "81b4e003873a279c"
            ]
        ]
    },
    {
        "id": "22e7ac62ce4bb75d",
        "type": "debug",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2590,
        "y": 1400,
        "wires": []
    },
    {
        "id": "9f3fef0da6e620f0",
        "type": "unsafe-function",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "name": "NewLogsNotification",
        "func": "//Retreiving Libraries from the Settings.json file\nmsg.payload = \"new Log\";\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "x": 3120,
        "y": 1400,
        "wires": [
            [
                "65bdd8af31739d18"
            ]
        ]
    },
    {
        "id": "65bdd8af31739d18",
        "type": "ui_toast",
        "z": "0230170315d4730f",
        "g": "d628f78d05bad169",
        "position": "bottom right",
        "displayTime": "1",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "Logs",
        "name": "Notify Logs",
        "x": 3370,
        "y": 1400,
        "wires": []
    },
    {
        "id": "9ba130dab2c35f4a",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "g": "aa58e5d8d810c216",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "initScheduling",
                "v": "* * * * * * *",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 100,
        "wires": [
            [
                "b66a7cd618523697",
                "6bc8692589698e4e"
            ]
        ]
    },
    {
        "id": "b66a7cd618523697",
        "type": "unsafe-function",
        "z": "1b34dd2392e70f28",
        "g": "aa58e5d8d810c216",
        "name": "Initialize Context",
        "func": "context.flow.set(\"CurrentOperatingPressure\", 0);\ncontext.flow.set(\"CylinderStatus\", 0);\ncontext.flow.set(\"ResponseTime\", 0);\ncontext.flow.set(\"ValvePosition\", 0);\ncontext.flow.set(\"NewCycle\", false);\ncontext.flow.set(\"Cycle\", 0);\ncontext.flow.set(\"ResponseTimePred\", []);\n\ncontext.flow.set(\"NrOfDataSources\", 7);\ncontext.flow.set(\"connected\", false);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1240,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "501d6794b2371615",
        "type": "msg-speed",
        "z": "1b34dd2392e70f28",
        "name": "",
        "frequency": "min",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "x": 1330,
        "y": 2080,
        "wires": [
            [
                "bd6f5e1a333d9bd2"
            ],
            []
        ]
    },
    {
        "id": "bd6f5e1a333d9bd2",
        "type": "unsafe-function",
        "z": "1b34dd2392e70f28",
        "name": "stats",
        "func": "var statsSBI = {};\nvar msgSpeed = msg.payload;\nvar msgIntervalAndFrequency = msg.intervalAndFrequency;\nstatsSBI.msgSpeed = msgSpeed;\nstatsSBI.IntervalAndFrequency = msgIntervalAndFrequency;\nstatsSBI.maxMsgs = context.flow.get(\"NrOfDataSources\") * 60;\nmsg.payload = statsSBI;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1590,
        "y": 2060,
        "wires": [
            [
                "239c78e76b0eaf73"
            ]
        ]
    },
    {
        "id": "239c78e76b0eaf73",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "metrics",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "d2edf304.fdfa2",
        "x": 1820,
        "y": 2060,
        "wires": []
    },
    {
        "id": "0d2041dcf1f9a9ab",
        "type": "sub-link-output",
        "z": "1b34dd2392e70f28",
        "inputs": 0,
        "name": "",
        "topic": "metrics",
        "link": "72ae2011.f3d7b",
        "priority": "0",
        "aliasType": "str",
        "alias": "",
        "clone": false,
        "x": 750,
        "y": 2080,
        "wires": [
            [
                "501d6794b2371615"
            ],
            []
        ]
    },
    {
        "id": "f9cfd3864b26a2d2",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "routed",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "d2edf304.fdfa2",
        "x": 650,
        "y": 500,
        "wires": []
    },
    {
        "id": "cb9649f2512a75a2",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "metrics",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "72ae2011.f3d7b",
        "x": 920,
        "y": 520,
        "wires": []
    },
    {
        "id": "677503db40ddf068",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 420,
        "wires": []
    },
    {
        "id": "7b8ab4c064ba0f12",
        "type": "iot-datasource",
        "z": "1b34dd2392e70f28",
        "name": "currentOperatingPressure",
        "tstampField": "",
        "dataField": "",
        "disableDiscover": false,
        "x": 950,
        "y": 640,
        "wires": [
            [
                "dbbda2049f96b7f1",
                "214a29e055a32197"
            ]
        ]
    },
    {
        "id": "b1ec78357ccfa920",
        "type": "msg-router",
        "z": "1b34dd2392e70f28",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 590,
        "y": 600,
        "wires": [
            [
                "cb9649f2512a75a2"
            ],
            [
                "eb95d794cc1e93a5",
                "d495728f3d794184"
            ],
            [
                "7b8ab4c064ba0f12"
            ]
        ]
    },
    {
        "id": "c836170197a78d6a",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "updateValue",
        "alias": "",
        "aliasType": "string",
        "aliasMatchAll": false,
        "topicType": "string",
        "link": "d2edf304.fdfa2",
        "x": 1090,
        "y": 580,
        "wires": []
    },
    {
        "id": "dbbda2049f96b7f1",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 640,
        "wires": []
    },
    {
        "id": "de659efb59908289",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 680,
        "wires": []
    },
    {
        "id": "214a29e055a32197",
        "type": "subflow:5ed335e57e3a0a3e",
        "z": "1b34dd2392e70f28",
        "name": "",
        "env": [
            {
                "name": "historyArrayName",
                "value": "CurrentOperatingPressure_hist",
                "type": "str"
            },
            {
                "name": "PathTo",
                "value": "CurrentOperatingPressure",
                "type": "str"
            }
        ],
        "x": 900,
        "y": 680,
        "wires": [
            [
                "7b8ab4c064ba0f12",
                "de659efb59908289"
            ]
        ]
    },
    {
        "id": "4b4d7908ed2e0f84",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "routed",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "d2edf304.fdfa2",
        "x": 2210,
        "y": 500,
        "wires": []
    },
    {
        "id": "cc25363719c28525",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "metrics",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "72ae2011.f3d7b",
        "x": 2480,
        "y": 520,
        "wires": []
    },
    {
        "id": "7b76fb264608701b",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 440,
        "wires": []
    },
    {
        "id": "7f01be289b8e94a7",
        "type": "iot-datasource",
        "z": "1b34dd2392e70f28",
        "name": "responseTime",
        "tstampField": "",
        "dataField": "",
        "disableDiscover": false,
        "x": 2680,
        "y": 640,
        "wires": [
            [
                "4558aa3d42b37359",
                "0efefcf01438daf3"
            ]
        ]
    },
    {
        "id": "8d0ca4f0593b7e2b",
        "type": "msg-router",
        "z": "1b34dd2392e70f28",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2150,
        "y": 600,
        "wires": [
            [
                "cc25363719c28525"
            ],
            [
                "c8a6d185c2b40e13"
            ],
            [
                "7f01be289b8e94a7"
            ]
        ]
    },
    {
        "id": "76756570d54d6ed7",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "updateValue",
        "alias": "",
        "aliasType": "string",
        "aliasMatchAll": false,
        "topicType": "string",
        "link": "d2edf304.fdfa2",
        "x": 2650,
        "y": 580,
        "wires": []
    },
    {
        "id": "4558aa3d42b37359",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2930,
        "y": 640,
        "wires": []
    },
    {
        "id": "6125cc4b0cb6450e",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2930,
        "y": 680,
        "wires": []
    },
    {
        "id": "0efefcf01438daf3",
        "type": "subflow:5ed335e57e3a0a3e",
        "z": "1b34dd2392e70f28",
        "name": "",
        "env": [
            {
                "name": "historyArrayName",
                "value": "ResponseTime_hist",
                "type": "str"
            },
            {
                "name": "PathTo",
                "value": "ResponseTime",
                "type": "str"
            }
        ],
        "x": 2660,
        "y": 680,
        "wires": [
            [
                "7f01be289b8e94a7",
                "6125cc4b0cb6450e"
            ]
        ]
    },
    {
        "id": "816c6d20fcb31394",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2650,
        "y": 540,
        "wires": []
    },
    {
        "id": "e08b35bc626cb871",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "routed",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "d2edf304.fdfa2",
        "x": 710,
        "y": 820,
        "wires": []
    },
    {
        "id": "941306c9fa81a061",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "metrics",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "72ae2011.f3d7b",
        "x": 980,
        "y": 840,
        "wires": []
    },
    {
        "id": "d965fcf06316fd92",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 760,
        "wires": []
    },
    {
        "id": "9cbe0835b80812c3",
        "type": "iot-datasource",
        "z": "1b34dd2392e70f28",
        "name": "valvePosition",
        "tstampField": "",
        "dataField": "",
        "disableDiscover": false,
        "x": 1170,
        "y": 960,
        "wires": [
            [
                "5670fb2d1cf5bc3f",
                "801b37fc41f7b710"
            ]
        ]
    },
    {
        "id": "a6f81753c4ed17d0",
        "type": "msg-router",
        "z": "1b34dd2392e70f28",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 650,
        "y": 920,
        "wires": [
            [
                "941306c9fa81a061"
            ],
            [
                "7d5bde50295d71d9",
                "eab653dafc75b825"
            ],
            [
                "9cbe0835b80812c3"
            ]
        ]
    },
    {
        "id": "06e27fd212240f24",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "updateValue",
        "alias": "",
        "aliasType": "string",
        "aliasMatchAll": false,
        "topicType": "string",
        "link": "d2edf304.fdfa2",
        "x": 1150,
        "y": 900,
        "wires": []
    },
    {
        "id": "5670fb2d1cf5bc3f",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 960,
        "wires": []
    },
    {
        "id": "243eacd7defbe13e",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 1000,
        "wires": []
    },
    {
        "id": "801b37fc41f7b710",
        "type": "subflow:5ed335e57e3a0a3e",
        "z": "1b34dd2392e70f28",
        "name": "",
        "env": [
            {
                "name": "historyArrayName",
                "value": "ValvePosition_hist",
                "type": "str"
            },
            {
                "name": "PathTo",
                "value": "ValvePosition",
                "type": "str"
            }
        ],
        "x": 1160,
        "y": 1000,
        "wires": [
            [
                "9cbe0835b80812c3",
                "243eacd7defbe13e"
            ]
        ]
    },
    {
        "id": "7d5bde50295d71d9",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 860,
        "wires": []
    },
    {
        "id": "7d804e3790a0f91d",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "routed",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "d2edf304.fdfa2",
        "x": 2210,
        "y": 800,
        "wires": []
    },
    {
        "id": "866fe54839a813c4",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "metrics",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "72ae2011.f3d7b",
        "x": 2480,
        "y": 820,
        "wires": []
    },
    {
        "id": "0d8106e7fcc959d0",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 740,
        "wires": []
    },
    {
        "id": "a89abee904ebd47d",
        "type": "iot-datasource",
        "z": "1b34dd2392e70f28",
        "name": "responseTimeMovingAvg",
        "tstampField": "",
        "dataField": "",
        "disableDiscover": false,
        "x": 2710,
        "y": 940,
        "wires": [
            [
                "9939610e6119a39a",
                "c283c75e5a3111a9"
            ]
        ]
    },
    {
        "id": "dab288431b082986",
        "type": "msg-router",
        "z": "1b34dd2392e70f28",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2150,
        "y": 920,
        "wires": [
            [
                "866fe54839a813c4"
            ],
            [
                "bc504920acbc2a2b",
                "14f5dff0a2127673"
            ],
            [
                "a89abee904ebd47d"
            ]
        ]
    },
    {
        "id": "f669e9a945b00d0d",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "updateValue",
        "alias": "",
        "aliasType": "string",
        "aliasMatchAll": false,
        "topicType": "string",
        "link": "d2edf304.fdfa2",
        "x": 2650,
        "y": 880,
        "wires": []
    },
    {
        "id": "9939610e6119a39a",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2930,
        "y": 940,
        "wires": []
    },
    {
        "id": "fbbd85c8b7024121",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2930,
        "y": 980,
        "wires": []
    },
    {
        "id": "c283c75e5a3111a9",
        "type": "subflow:5ed335e57e3a0a3e",
        "z": "1b34dd2392e70f28",
        "name": "",
        "env": [
            {
                "name": "historyArrayName",
                "value": "ResponseTimeMovingAvg_hist",
                "type": "str"
            },
            {
                "name": "PathTo",
                "value": "ResponseTimeMovingAvg",
                "type": "str"
            }
        ],
        "x": 2660,
        "y": 980,
        "wires": [
            [
                "a89abee904ebd47d",
                "fbbd85c8b7024121"
            ]
        ]
    },
    {
        "id": "bc504920acbc2a2b",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2650,
        "y": 840,
        "wires": []
    },
    {
        "id": "809d2c8a90af1f5f",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "routed",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "d2edf304.fdfa2",
        "x": 730,
        "y": 1160,
        "wires": []
    },
    {
        "id": "f43b039b7edd523e",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "metrics",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "72ae2011.f3d7b",
        "x": 1000,
        "y": 1180,
        "wires": []
    },
    {
        "id": "84451717ce88a2f0",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 1100,
        "wires": []
    },
    {
        "id": "c5a6b18ede35a6ab",
        "type": "iot-datasource",
        "z": "1b34dd2392e70f28",
        "name": "cylinderStatus",
        "tstampField": "",
        "dataField": "",
        "disableDiscover": false,
        "x": 1200,
        "y": 1300,
        "wires": [
            [
                "d451d6ba25c66802",
                "fae954fb93ecb903"
            ]
        ]
    },
    {
        "id": "8485b56f5e975000",
        "type": "msg-router",
        "z": "1b34dd2392e70f28",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 670,
        "y": 1240,
        "wires": [
            [
                "f43b039b7edd523e"
            ],
            [
                "73c07c2cfe239b8a",
                "6bb08750f3294d68"
            ],
            [
                "c5a6b18ede35a6ab",
                "98976b9772df711d"
            ]
        ]
    },
    {
        "id": "dd1e118c125f6ca6",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "updateValue",
        "alias": "",
        "aliasType": "string",
        "aliasMatchAll": false,
        "topicType": "string",
        "link": "d2edf304.fdfa2",
        "x": 1170,
        "y": 1240,
        "wires": []
    },
    {
        "id": "d451d6ba25c66802",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 1300,
        "wires": []
    },
    {
        "id": "7260706d82a2611e",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 1340,
        "wires": []
    },
    {
        "id": "fae954fb93ecb903",
        "type": "subflow:5ed335e57e3a0a3e",
        "z": "1b34dd2392e70f28",
        "name": "",
        "env": [
            {
                "name": "historyArrayName",
                "value": "CylinderStatus_hist",
                "type": "str"
            },
            {
                "name": "PathTo",
                "value": "CylinderStatus",
                "type": "str"
            }
        ],
        "x": 1180,
        "y": 1340,
        "wires": [
            [
                "c5a6b18ede35a6ab",
                "7260706d82a2611e"
            ]
        ]
    },
    {
        "id": "73c07c2cfe239b8a",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 1200,
        "wires": []
    },
    {
        "id": "98976b9772df711d",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 1360,
        "wires": []
    },
    {
        "id": "eb95d794cc1e93a5",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 480,
        "wires": []
    },
    {
        "id": "d495728f3d794184",
        "type": "json",
        "z": "1b34dd2392e70f28",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 890,
        "y": 580,
        "wires": [
            [
                "b4b317cb42fc1616",
                "c836170197a78d6a"
            ]
        ]
    },
    {
        "id": "c8a6d185c2b40e13",
        "type": "json",
        "z": "1b34dd2392e70f28",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 2450,
        "y": 580,
        "wires": [
            [
                "76756570d54d6ed7",
                "816c6d20fcb31394"
            ]
        ]
    },
    {
        "id": "eab653dafc75b825",
        "type": "json",
        "z": "1b34dd2392e70f28",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 950,
        "y": 900,
        "wires": [
            [
                "06e27fd212240f24"
            ]
        ]
    },
    {
        "id": "14f5dff0a2127673",
        "type": "json",
        "z": "1b34dd2392e70f28",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 2450,
        "y": 880,
        "wires": [
            [
                "f669e9a945b00d0d"
            ]
        ]
    },
    {
        "id": "6bb08750f3294d68",
        "type": "json",
        "z": "1b34dd2392e70f28",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 970,
        "y": 1240,
        "wires": [
            [
                "dd1e118c125f6ca6"
            ]
        ]
    },
    {
        "id": "b4b317cb42fc1616",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 520,
        "wires": []
    },
    {
        "id": "4807bb24be8fdd35",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "g": "aa58e5d8d810c216",
        "name": "Event Trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sbi scheduling data routing",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 200,
        "wires": [
            [
                "1022525b20ebc80c"
            ]
        ]
    },
    {
        "id": "1022525b20ebc80c",
        "type": "link out",
        "z": "1b34dd2392e70f28",
        "g": "aa58e5d8d810c216",
        "name": "trigger_out",
        "mode": "link",
        "links": [
            "d3433b9148edca2b",
            "7bcfb51912ee6a45",
            "9c6fbdb48af84a54",
            "94fa94405da047c2",
            "d620d089fe3ee9c9",
            "588a4f72a375cd0f",
            "ddee8be9bc7ccc4d",
            "232b53ba633268fc"
        ],
        "x": 1305,
        "y": 200,
        "wires": []
    },
    {
        "id": "d620d089fe3ee9c9",
        "type": "link in",
        "z": "1b34dd2392e70f28",
        "name": "trigger_in_1",
        "links": [
            "1022525b20ebc80c"
        ],
        "x": 185,
        "y": 480,
        "wires": [
            [
                "56c20a85e313030f"
            ]
        ]
    },
    {
        "id": "7bcfb51912ee6a45",
        "type": "link in",
        "z": "1b34dd2392e70f28",
        "name": "trigger_in_2",
        "links": [
            "1022525b20ebc80c"
        ],
        "x": 1725,
        "y": 480,
        "wires": [
            [
                "7e16c96b3f3858ec"
            ]
        ]
    },
    {
        "id": "9c6fbdb48af84a54",
        "type": "link in",
        "z": "1b34dd2392e70f28",
        "name": "trigger_in_3",
        "links": [
            "1022525b20ebc80c"
        ],
        "x": 145,
        "y": 800,
        "wires": [
            [
                "731b9629d6c68416"
            ]
        ]
    },
    {
        "id": "588a4f72a375cd0f",
        "type": "link in",
        "z": "1b34dd2392e70f28",
        "name": "trigger_in_4",
        "links": [
            "1022525b20ebc80c"
        ],
        "x": 1705,
        "y": 780,
        "wires": [
            [
                "6b1b4dc3f2e6406f"
            ]
        ]
    },
    {
        "id": "94fa94405da047c2",
        "type": "link in",
        "z": "1b34dd2392e70f28",
        "name": "trigger_in_5",
        "links": [
            "1022525b20ebc80c"
        ],
        "x": 135,
        "y": 1140,
        "wires": [
            [
                "b7fb9424b7d67d48"
            ]
        ]
    },
    {
        "id": "e280be9700561c56",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 1200,
        "wires": [
            [
                "b7fb9424b7d67d48"
            ]
        ]
    },
    {
        "id": "fdb96507229a1116",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 1240,
        "wires": [
            [
                "b7fb9424b7d67d48"
            ]
        ]
    },
    {
        "id": "ac5ecb137d6a6c66",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 860,
        "wires": [
            [
                "731b9629d6c68416"
            ]
        ]
    },
    {
        "id": "649d16bb69eb382e",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 900,
        "wires": [
            [
                "731b9629d6c68416"
            ]
        ]
    },
    {
        "id": "2b6c02a1d42b69d9",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 540,
        "wires": [
            [
                "56c20a85e313030f"
            ]
        ]
    },
    {
        "id": "0011e57da5511859",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 580,
        "wires": [
            [
                "56c20a85e313030f"
            ]
        ]
    },
    {
        "id": "3fb6b48e63381b9f",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 1730,
        "y": 540,
        "wires": [
            [
                "7e16c96b3f3858ec"
            ]
        ]
    },
    {
        "id": "4729b74aacb811e7",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 1720,
        "y": 580,
        "wires": [
            [
                "7e16c96b3f3858ec"
            ]
        ]
    },
    {
        "id": "0d6454a2b00fad32",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 1730,
        "y": 840,
        "wires": [
            [
                "6b1b4dc3f2e6406f"
            ]
        ]
    },
    {
        "id": "1feae1c40eafc9a4",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 1720,
        "y": 880,
        "wires": [
            [
                "6b1b4dc3f2e6406f"
            ]
        ]
    },
    {
        "id": "99dba95ef309b6a2",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 620,
        "wires": [
            [
                "56c20a85e313030f"
            ]
        ]
    },
    {
        "id": "05e27cf5dac0ddc9",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 940,
        "wires": [
            [
                "731b9629d6c68416"
            ]
        ]
    },
    {
        "id": "b18b926dc0c2419d",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1280,
        "wires": [
            [
                "b7fb9424b7d67d48"
            ]
        ]
    },
    {
        "id": "f7c831e402947b7a",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 1740,
        "y": 620,
        "wires": [
            [
                "7e16c96b3f3858ec"
            ]
        ]
    },
    {
        "id": "80ac02bae832326e",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 1740,
        "y": 920,
        "wires": [
            [
                "6b1b4dc3f2e6406f"
            ]
        ]
    },
    {
        "id": "56c20a85e313030f",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "1b34dd2392e70f28",
        "name": "Property 1",
        "env": [
            {
                "name": "PropertyName",
                "value": "CurrentOperatingPressure",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/CurrentOperatingPressure",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/CurrentOperatingPressureEvt",
                "type": "str"
            }
        ],
        "x": 350,
        "y": 480,
        "wires": [
            [
                "677503db40ddf068",
                "4e64dce46c238129"
            ],
            [
                "f9cfd3864b26a2d2"
            ],
            [
                "b1ec78357ccfa920"
            ]
        ]
    },
    {
        "id": "7e16c96b3f3858ec",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "1b34dd2392e70f28",
        "name": "Property 2",
        "env": [
            {
                "name": "PropertyName",
                "value": "ResponseTime",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/ResponseTime",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/ResponseTimeEvt",
                "type": "str"
            }
        ],
        "x": 1910,
        "y": 480,
        "wires": [
            [
                "7b76fb264608701b",
                "b2b51db7fc1cfa40"
            ],
            [
                "4b4d7908ed2e0f84"
            ],
            [
                "8d0ca4f0593b7e2b"
            ]
        ]
    },
    {
        "id": "731b9629d6c68416",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "1b34dd2392e70f28",
        "name": "Property 3",
        "env": [
            {
                "name": "PropertyName",
                "value": "ValvePosition",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/ValvePosition",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/ValvePositionEvt",
                "type": "str"
            }
        ],
        "x": 410,
        "y": 800,
        "wires": [
            [
                "d965fcf06316fd92",
                "48e60a95b976a4e6"
            ],
            [
                "e08b35bc626cb871"
            ],
            [
                "a6f81753c4ed17d0"
            ]
        ]
    },
    {
        "id": "6b1b4dc3f2e6406f",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "1b34dd2392e70f28",
        "name": "Property 4",
        "env": [
            {
                "name": "PropertyName",
                "value": "ResponseTimeMovingAvg",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/ResponseTimeMovingAvg",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/ResponseTimeMovingAvgEvt",
                "type": "str"
            }
        ],
        "x": 1910,
        "y": 780,
        "wires": [
            [
                "0d8106e7fcc959d0",
                "a7f9c0c31cab1be8"
            ],
            [
                "7d804e3790a0f91d"
            ],
            [
                "dab288431b082986"
            ]
        ]
    },
    {
        "id": "b7fb9424b7d67d48",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "1b34dd2392e70f28",
        "name": "Property 5",
        "env": [
            {
                "name": "PropertyName",
                "value": "CylinderStatus",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/CylinderStatus",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/CylinderStatusEvt",
                "type": "str"
            }
        ],
        "x": 430,
        "y": 1140,
        "wires": [
            [
                "84451717ce88a2f0",
                "ac7ac4bfa77cdbec"
            ],
            [
                "809d2c8a90af1f5f"
            ],
            [
                "8485b56f5e975000"
            ]
        ]
    },
    {
        "id": "4879548aa0f3e058",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "routed",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "d2edf304.fdfa2",
        "x": 2290,
        "y": 1160,
        "wires": []
    },
    {
        "id": "fe5606fe56b47ec1",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "metrics",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "72ae2011.f3d7b",
        "x": 2560,
        "y": 1180,
        "wires": []
    },
    {
        "id": "c331c3094cc9bf52",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 1100,
        "wires": []
    },
    {
        "id": "454717aaccfff1cb",
        "type": "iot-datasource",
        "z": "1b34dd2392e70f28",
        "name": "cycle",
        "tstampField": "",
        "dataField": "",
        "disableDiscover": false,
        "x": 2730,
        "y": 1300,
        "wires": [
            [
                "a154536db552e2b5",
                "bc7642f47eebc680"
            ]
        ]
    },
    {
        "id": "8a8aadc13ab3d58a",
        "type": "msg-router",
        "z": "1b34dd2392e70f28",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2230,
        "y": 1240,
        "wires": [
            [
                "fe5606fe56b47ec1"
            ],
            [
                "8855cb3c32fe39a3",
                "06a44176fb9b7140"
            ],
            [
                "454717aaccfff1cb",
                "8ac5bfbba8dd4ce0"
            ]
        ]
    },
    {
        "id": "60761019576e3ab3",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "updateValue",
        "alias": "",
        "aliasType": "string",
        "aliasMatchAll": false,
        "topicType": "string",
        "link": "d2edf304.fdfa2",
        "x": 2730,
        "y": 1240,
        "wires": []
    },
    {
        "id": "a154536db552e2b5",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3010,
        "y": 1300,
        "wires": []
    },
    {
        "id": "3222d456f7536f8b",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3010,
        "y": 1340,
        "wires": []
    },
    {
        "id": "bc7642f47eebc680",
        "type": "subflow:5ed335e57e3a0a3e",
        "z": "1b34dd2392e70f28",
        "name": "",
        "env": [
            {
                "name": "historyArrayName",
                "value": "Cycle_hist",
                "type": "str"
            },
            {
                "name": "PathTo",
                "value": "Cycle",
                "type": "str"
            }
        ],
        "x": 2740,
        "y": 1340,
        "wires": [
            [
                "454717aaccfff1cb",
                "3222d456f7536f8b"
            ]
        ]
    },
    {
        "id": "8855cb3c32fe39a3",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2730,
        "y": 1200,
        "wires": []
    },
    {
        "id": "8ac5bfbba8dd4ce0",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2590,
        "y": 1360,
        "wires": []
    },
    {
        "id": "06a44176fb9b7140",
        "type": "json",
        "z": "1b34dd2392e70f28",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 2530,
        "y": 1240,
        "wires": [
            [
                "60761019576e3ab3"
            ]
        ]
    },
    {
        "id": "ddee8be9bc7ccc4d",
        "type": "link in",
        "z": "1b34dd2392e70f28",
        "name": "trigger_in_5",
        "links": [
            "1022525b20ebc80c"
        ],
        "x": 1695,
        "y": 1140,
        "wires": [
            [
                "5cdb226db001d69a"
            ]
        ]
    },
    {
        "id": "f5d776a45b44a947",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 1790,
        "y": 1200,
        "wires": [
            [
                "5cdb226db001d69a"
            ]
        ]
    },
    {
        "id": "e773ad43eb52e18e",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 1780,
        "y": 1240,
        "wires": [
            [
                "5cdb226db001d69a"
            ]
        ]
    },
    {
        "id": "66f5685150b31926",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 1800,
        "y": 1280,
        "wires": [
            [
                "5cdb226db001d69a"
            ]
        ]
    },
    {
        "id": "5cdb226db001d69a",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "1b34dd2392e70f28",
        "name": "Property 6",
        "env": [
            {
                "name": "PropertyName",
                "value": "Cycle",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/Cycle",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/CycleEvt",
                "type": "str"
            }
        ],
        "x": 1990,
        "y": 1140,
        "wires": [
            [
                "c331c3094cc9bf52",
                "d2da766aa7bf0590"
            ],
            [
                "4879548aa0f3e058"
            ],
            [
                "8a8aadc13ab3d58a"
            ]
        ]
    },
    {
        "id": "65d509f47cca6eb1",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "routed",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "d2edf304.fdfa2",
        "x": 730,
        "y": 1540,
        "wires": []
    },
    {
        "id": "1a330d9f366eaf1d",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "metrics",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "72ae2011.f3d7b",
        "x": 1000,
        "y": 1560,
        "wires": []
    },
    {
        "id": "618cbad12707c083",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 1480,
        "wires": []
    },
    {
        "id": "238936b6c09d0eea",
        "type": "iot-datasource",
        "z": "1b34dd2392e70f28",
        "name": "responseTimePred",
        "tstampField": "",
        "dataField": "",
        "disableDiscover": false,
        "x": 1210,
        "y": 1680,
        "wires": [
            [
                "6009a439141d8833",
                "294a0f28cd5b32b6"
            ]
        ]
    },
    {
        "id": "f9921545fcaf736f",
        "type": "msg-router",
        "z": "1b34dd2392e70f28",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 670,
        "y": 1620,
        "wires": [
            [
                "1a330d9f366eaf1d"
            ],
            [
                "3ee8a7486d9bc53c",
                "d5a47ef1c8bad7de"
            ],
            [
                "238936b6c09d0eea",
                "80de28ae3e047b35"
            ]
        ]
    },
    {
        "id": "8fa2195022554672",
        "type": "sub-link-input",
        "z": "1b34dd2392e70f28",
        "name": "",
        "topic": "updateValue",
        "alias": "",
        "aliasType": "string",
        "aliasMatchAll": false,
        "topicType": "string",
        "link": "d2edf304.fdfa2",
        "x": 1170,
        "y": 1620,
        "wires": []
    },
    {
        "id": "6009a439141d8833",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 1680,
        "wires": []
    },
    {
        "id": "0b24ef97d940bf4d",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 1720,
        "wires": []
    },
    {
        "id": "294a0f28cd5b32b6",
        "type": "subflow:5ed335e57e3a0a3e",
        "z": "1b34dd2392e70f28",
        "name": "",
        "env": [
            {
                "name": "historyArrayName",
                "value": "ResponseTimePred_hist",
                "type": "str"
            },
            {
                "name": "PathTo",
                "value": "ResponseTimePred",
                "type": "str"
            }
        ],
        "x": 1180,
        "y": 1720,
        "wires": [
            [
                "238936b6c09d0eea",
                "0b24ef97d940bf4d"
            ]
        ]
    },
    {
        "id": "3ee8a7486d9bc53c",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 1580,
        "wires": []
    },
    {
        "id": "80de28ae3e047b35",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 1740,
        "wires": []
    },
    {
        "id": "d5a47ef1c8bad7de",
        "type": "json",
        "z": "1b34dd2392e70f28",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 970,
        "y": 1620,
        "wires": [
            [
                "8fa2195022554672"
            ]
        ]
    },
    {
        "id": "232b53ba633268fc",
        "type": "link in",
        "z": "1b34dd2392e70f28",
        "name": "trigger_in_5",
        "links": [
            "1022525b20ebc80c"
        ],
        "x": 135,
        "y": 1520,
        "wires": [
            [
                "811405390613acf4"
            ]
        ]
    },
    {
        "id": "17af0b3e9dbf3dcc",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 1580,
        "wires": [
            [
                "811405390613acf4"
            ]
        ]
    },
    {
        "id": "75d00a398a288fdc",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 1620,
        "wires": [
            [
                "811405390613acf4"
            ]
        ]
    },
    {
        "id": "80d9b3c4cba2d850",
        "type": "inject",
        "z": "1b34dd2392e70f28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1660,
        "wires": [
            [
                "811405390613acf4"
            ]
        ]
    },
    {
        "id": "811405390613acf4",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "1b34dd2392e70f28",
        "name": "Property 7",
        "env": [
            {
                "name": "PropertyName",
                "value": "ResponseTimePred",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/ResponseTimePred",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/ResponseTimePredEvt",
                "type": "str"
            }
        ],
        "x": 430,
        "y": 1520,
        "wires": [
            [
                "618cbad12707c083",
                "cfa2db65e62ef717"
            ],
            [
                "65d509f47cca6eb1"
            ],
            [
                "f9921545fcaf736f"
            ]
        ]
    },
    {
        "id": "c9f89de00f6412ec",
        "type": "unsafe-function",
        "z": "1b34dd2392e70f28",
        "name": "statusNotification",
        "func": "var statusCheck  = {};\nstatusCheck.connected = context.flow.get(\"connected\");\nstatusCheck.nrOfDataSources = context.flow.get(\"NrOfDataSources\");\nmsg.payload = {\"statusCheck\": statusCheck};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1550,
        "y": 2200,
        "wires": [
            [
                "7f46001d01e564ce"
            ]
        ]
    },
    {
        "id": "0495c54e4a42e88d",
        "type": "unsafe-function",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "func": "context.flow.set(\"connected\", true);\nvar valvePosition = context.flow.get(\"ValvePosition\") || 0;\nvar cylinderStatus = context.flow.get(\"CylinderStatus\") || 0;\nvar newCycle = context.flow.get(\"NewCycle\") || false;\nvar cycle = context.flow.get(\"Cycle\") || 0;\nif((valvePosition === 0 && cylinderStatus === 0) && newCycle === false && cycle < 40){\n    context.flow.set(\"NewCycle\", true);\n    cycle = cycle + 1;\n    context.flow.set(\"Cycle\", cycle);\n    return [msg, null];\n} else if((valvePosition === 1 && cylinderStatus === 1) && newCycle === true && cycle < 40){\n    context.flow.set(\"NewCycle\", false);\n    cycle = cycle + 1;\n    context.flow.set(\"Cycle\", cycle);\n    return [null, msg];\n}\n\nreturn null;\n",
        "outputs": 2,
        "noerr": 0,
        "x": 460,
        "y": 2540,
        "wires": [
            [
                "9f1b2c1fddb56b21",
                "637d5a699d0d8537"
            ],
            [
                "a875e93ae204d0c1"
            ]
        ]
    },
    {
        "id": "9f1b2c1fddb56b21",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 750,
        "y": 2580,
        "wires": []
    },
    {
        "id": "a9b44075eac2654a",
        "type": "delay",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "10",
        "randomLast": "15",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 860,
        "y": 2500,
        "wires": [
            [
                "2156e858c357a84a",
                "637d5a699d0d8537"
            ]
        ]
    },
    {
        "id": "2156e858c357a84a",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1110,
        "y": 2580,
        "wires": []
    },
    {
        "id": "637d5a699d0d8537",
        "type": "unsafe-function",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "func": "var cycle = context.flow.get(\"Cycle\") || 0;\nvar valvePosition = context.flow.get(\"ValvePosition\") || 0;\nvar cylinderStatus = context.flow.get(\"CylinderStatus\") || 0;\nvar startCycleTs = context.flow.get(\"startCycleTs\") || 0;\nvar date = new Date();\n\n    if((cylinderStatus === 0 && valvePosition === 0) || (cylinderStatus === 1 && valvePosition === 1)){\n\n        //context.flow.set(\"timestamp\", date.getTime());\n        context.flow.set(\"startCycleTs\", date.getTime());\n        \n        if(cycle >= 40){\n            //context.flow.set(\"cycle\", cycle);\n            msg.delay = 30000;\n            msg.topic =\"@stats reset\";\n            return msg;\n        }\n        if(valvePosition === 0){\n            valvePosition = 1;\n            context.flow.set(\"ResponseTime\", 0);\n        } else {\n            valvePosition = 0;\n            context.flow.set(\"ResponseTime\", 0);\n        }\n        context.flow.set(\"ValvePosition\", valvePosition);\n        /*if(cycle < 10){\n            msg.delay = 5000 + (5000*0.01*cycle);\n        } else if(cycle < 15 && cycle >= 10){\n            msg.delay = 5500 + (5000*0.02*cycle);\n        } else if (cycle < 20 && cycle >= 15){\n            msg.delay = 6500 + (5000*0.03*cycle);\n        } else if(cycle < 30 && cycle >= 20){\n            msg.delay = 7000 + (5000*0.035*cycle);\n        }else if(cycle < 40 && cycle >= 30){\n            msg.delay = 10250 + (5000*0.04*cycle);\n        }*/\n        if(cycle < 40){\n            msg.delay = 5000 + (5000*0.025*cycle);\n        }\n        \n        \n        return msg;\n    }\n\n\n//var date = new Date();\n//context.flow.set(\"timestamp\", date.getTime());\n//var currentTimeElapsed = date.getTime() - startCycleTs;\n//context.flow.set(\"responseTime\", currentTimeElapsed);\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 2540,
        "wires": [
            [
                "039aa1c149845af7",
                "e90b1501abaa5754",
                "9abe0fd670c76497"
            ]
        ]
    },
    {
        "id": "53a3dba8b5b31034",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1950,
        "y": 2354,
        "wires": []
    },
    {
        "id": "de876458e5ee4757",
        "type": "unsafe-function",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "func": "var elapsedTimeMovingAvg = msg.result.movingAvg;\ncontext.flow.set(\"ResponseTimeMovingAvg\", elapsedTimeMovingAvg);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2100,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "a14689fbcbf5d1ca",
        "type": "Data Analysis",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "action": "realtime",
        "outputs": 3,
        "outliersBase": "avg",
        "outliersStdDevs": "3",
        "term": "15",
        "keyProperty": "msg.topic",
        "dataProperty": "msg.payload",
        "dataProperties": [
            "msg.payload[0]",
            "msg.payload[1]"
        ],
        "x": 1740,
        "y": 2414,
        "wires": [
            [
                "53a3dba8b5b31034",
                "de876458e5ee4757",
                "eeec8892730ecb24"
            ],
            [],
            []
        ]
    },
    {
        "id": "039aa1c149845af7",
        "type": "delay",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1340,
        "y": 2540,
        "wires": [
            [
                "7fc3b5edf551e358"
            ]
        ]
    },
    {
        "id": "7fc3b5edf551e358",
        "type": "unsafe-function",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "func": "var cycle = context.flow.get(\"Cycle\") || 0;\nvar valvePosition = context.flow.get(\"ValvePosition\") || 0;\nvar cylinderStatus = context.flow.get(\"CylinderStatus\") || 0;\n\nvar timeElapsed = 0;  \nvar date = new Date();\n\nif((cylinderStatus === \"undefined\" && valvePosition === 1)){\n    context.flow.set(\"CylinderStatus\", 1);\n} else if((cylinderStatus === \"undefined\" && valvePosition === 0)){\n    context.flow.set(\"CylinderStatus\", 0);\n}\n\nif(cycle < 10 && cycle >= 0){\n    timeElapsed = msg.delay;\n} else if(cycle < 15 && cycle >= 10){\n    timeElapsed = msg.delay;\n} else if (cycle < 20 && cycle >= 15){\n    timeElapsed = msg.delay;\n} else if(cycle < 30 && cycle >= 20){\n    timeElapsed = msg.delay;\n}else if(cycle < 40 && cycle >= 30){\n    timeElapsed = msg.delay;\n} else if(cycle >= 40){\n    cycle = 0;\n    context.flow.set(\"Cycle\", cycle);\n    context.flow.set(\"ValvePosition\", 0);\n    context.flow.set(\"CylinderStatus\", 0);\n    context.flow.set(\"NewCycle\", false);\n    context.flow.set(\"ResponseTime\", timeElapsed);\n\n    context.flow.set(\"timestamp\", date.getTime());\n    msg.payload = timeElapsed;\n    var msg_out_2 = {};\n    return [msg, msg_out_2];\n    \n}\n\ncontext.flow.set(\"ResponseTime\", timeElapsed);\n\ncontext.flow.set(\"timestamp\", date.getTime());\nmsg.payload = timeElapsed;\nmsg.topic = \"ResponseTimeMvgAvg\";\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "x": 1520,
        "y": 2540,
        "wires": [
            [
                "a14689fbcbf5d1ca",
                "a6f5da1d3029aec2"
            ],
            [
                "ff5af7a243cbdf73"
            ]
        ]
    },
    {
        "id": "e90b1501abaa5754",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1330,
        "y": 2480,
        "wires": []
    },
    {
        "id": "a6f5da1d3029aec2",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1710,
        "y": 2340,
        "wires": []
    },
    {
        "id": "eeec8892730ecb24",
        "type": "unsafe-function",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "func": "var msg_out = {};\nvar payload = {};\n//payload.x = msg.result.count;\npayload.x = context.flow.get(\"Cycle\");\npayload.y = msg.payload;\npayload.y_out = \"\";\nmsg_out.payload = payload;\nreturn msg_out;",
        "outputs": 1,
        "noerr": 0,
        "x": 2100,
        "y": 2420,
        "wires": [
            [
                "ff5af7a243cbdf73",
                "c8654494cab22081"
            ]
        ]
    },
    {
        "id": "c2c3bbb9a9474abd",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2530,
        "y": 2480,
        "wires": []
    },
    {
        "id": "c8654494cab22081",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2330,
        "y": 2460,
        "wires": []
    },
    {
        "id": "f69a90c1551b2070",
        "type": "unsafe-function",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "func": "var responseTimePred = [];\nfor(var k = 1; k <= 10; k++){\n    var futurePrediction = msg.function.equation[0]*Math.pow((msg.payload.x + k), 2) + msg.function.equation[1]*(msg.payload.x + k) + msg.function.equation[2];\n    msg.payload.futurePrediction = futurePrediction;\n    responseTimePred.push(futurePrediction);\n}\n//responseTimePred.pop();\n//responseTimePred.unshift(futurePrediction);\ncontext.flow.set(\"ResponseTimePred\", responseTimePred);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2620,
        "y": 2540,
        "wires": [
            [
                "9bf2937120ef67bd"
            ]
        ]
    },
    {
        "id": "9bf2937120ef67bd",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2790,
        "y": 2480,
        "wires": []
    },
    {
        "id": "a6c403091b443b0c",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 430,
        "y": 2620,
        "wires": []
    },
    {
        "id": "eeb80fe9cff6a359",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1730,
        "y": 2674,
        "wires": []
    },
    {
        "id": "9abe0fd670c76497",
        "type": "unsafe-function",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "func": "var cycle = context.flow.get(\"Cycle\");\nif(cycle < 40){\n    var calculatedDelay = context.flow.get(\"calculatedDelay\") || 0;\n    msg.topic = \"control\";\n    msg.payload = ((msg.delay)/1000) - 1;\n    calculatedDelay = Math.round(((msg.delay)/1000) - 1);\n    context.flow.set(\"calculatedDelay\", calculatedDelay);\n    return msg;\n} else return null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 2674,
        "wires": [
            [
                "368a147680be5838"
            ]
        ]
    },
    {
        "id": "de89b1cca328c659",
        "type": "unsafe-function",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "func": "var date = new Date();\nvar startCycle = context.flow.get(\"startCycleTs\");\ncontext.flow.set(\"ResponseTime\", date.getTime() - startCycle);\nlet calculatedDelay = context.flow.get(\"calculatedDelay\");\nif(calculatedDelay >= msg.payload ){\n    context.flow.set(\"CylinderStatus\", \"undefined\");\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1750,
        "y": 2774,
        "wires": [
            []
        ]
    },
    {
        "id": "5180a7d4f1bf4fa4",
        "type": "unsafe-function",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "func": "msg.topic = \"control\";\nmsg.payload = 60;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 2714,
        "wires": [
            [
                "b746d7bc440b58bd"
            ]
        ]
    },
    {
        "id": "cdbd60c259d8d0b6",
        "type": "unsafe-function",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "func": "var date = new Date();\ncontext.flow.set(\"timestamp\", date.getTime());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 2734,
        "wires": [
            []
        ]
    },
    {
        "id": "dc2a65f84610e41a",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1090,
        "y": 2654,
        "wires": []
    },
    {
        "id": "6107a5a6c62f1d7b",
        "type": "debug",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1090,
        "y": 2694,
        "wires": []
    },
    {
        "id": "a875e93ae204d0c1",
        "type": "countdown",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "topic": "",
        "payloadTimerStart": "",
        "payloadTimerStartType": "nul",
        "payloadTimerStop": "event",
        "payloadTimerStopType": "msg",
        "timer": "10",
        "resetWhileRunning": false,
        "setTimeToNewWhileRunning": false,
        "startCountdownOnControlMessage": false,
        "x": 870,
        "y": 2634,
        "wires": [
            [
                "637d5a699d0d8537",
                "dc2a65f84610e41a"
            ],
            [
                "6107a5a6c62f1d7b"
            ]
        ]
    },
    {
        "id": "368a147680be5838",
        "type": "countdown",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "topic": "",
        "payloadTimerStart": "",
        "payloadTimerStartType": "nul",
        "payloadTimerStop": "",
        "payloadTimerStopType": "nul",
        "timer": "10",
        "resetWhileRunning": false,
        "setTimeToNewWhileRunning": true,
        "startCountdownOnControlMessage": true,
        "x": 1530,
        "y": 2674,
        "wires": [
            [],
            [
                "eeb80fe9cff6a359",
                "de89b1cca328c659"
            ]
        ]
    },
    {
        "id": "b746d7bc440b58bd",
        "type": "countdown",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "topic": "",
        "payloadTimerStart": "",
        "payloadTimerStartType": "nul",
        "payloadTimerStop": "",
        "payloadTimerStopType": "nul",
        "timer": "10",
        "resetWhileRunning": false,
        "setTimeToNewWhileRunning": true,
        "startCountdownOnControlMessage": true,
        "x": 490,
        "y": 2714,
        "wires": [
            [],
            [
                "cdbd60c259d8d0b6"
            ]
        ]
    },
    {
        "id": "ff5af7a243cbdf73",
        "type": "regression",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "dataSetSize": "15",
        "regressionType": "polynomial",
        "polynomialOrder": 2,
        "precision": "2",
        "xInputField": "payload.x",
        "xInputFieldType": "msg",
        "yInputField": "payload.y",
        "yInputFieldType": "msg",
        "yOutputField": "payload.y_out",
        "yOutputFieldType": "msg",
        "functionOutputField": "function",
        "functionOutputFieldType": "msg",
        "resultOnly": false,
        "x": 2390,
        "y": 2540,
        "wires": [
            [
                "c2c3bbb9a9474abd",
                "f69a90c1551b2070"
            ]
        ]
    },
    {
        "id": "9730e3221d41e001",
        "type": "cronplus",
        "z": "1b34dd2392e70f28",
        "g": "f70042849219912e",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "schedule1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 120,
        "y": 2620,
        "wires": [
            [
                "0495c54e4a42e88d",
                "a6c403091b443b0c",
                "5180a7d4f1bf4fa4"
            ]
        ]
    },
    {
        "id": "6bc8692589698e4e",
        "type": "actionflows",
        "z": "1b34dd2392e70f28",
        "g": "aa58e5d8d810c216",
        "info": "Describe your action API here.",
        "untilproptype": "num",
        "proptype": "msg",
        "name": "southbound.resetSebscriptions",
        "prop": "loop",
        "untilprop": 0,
        "until": "gt",
        "loop": "none",
        "scope": "global",
        "perf": false,
        "seq": false,
        "x": 1290,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "df15fdf9ab3014f7",
        "type": "actionflows_in",
        "z": "1b34dd2392e70f28",
        "name": "driver.connection.check in",
        "priority": "50",
        "links": [],
        "scope": "global",
        "x": 550,
        "y": 2200,
        "wires": [
            [
                "c9f89de00f6412ec"
            ]
        ]
    },
    {
        "id": "7f46001d01e564ce",
        "type": "actionflows_out",
        "z": "1b34dd2392e70f28",
        "name": "driver.connection.check out",
        "links": [],
        "x": 2530,
        "y": 2200,
        "wires": []
    },
    {
        "id": "4e64dce46c238129",
        "type": "actionflows",
        "z": "1b34dd2392e70f28",
        "info": "Describe your action API here.",
        "untilproptype": "num",
        "proptype": "msg",
        "name": "southbound.updateSubscriptions",
        "prop": "loop",
        "untilprop": 0,
        "until": "gt",
        "loop": "none",
        "scope": "global",
        "perf": false,
        "seq": false,
        "x": 900,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "48e60a95b976a4e6",
        "type": "actionflows",
        "z": "1b34dd2392e70f28",
        "info": "Describe your action API here.",
        "untilproptype": "num",
        "proptype": "msg",
        "name": "southbound.updateSubscriptions",
        "prop": "loop",
        "untilprop": 0,
        "until": "gt",
        "loop": "none",
        "scope": "global",
        "perf": false,
        "seq": false,
        "x": 900,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "ac7ac4bfa77cdbec",
        "type": "actionflows",
        "z": "1b34dd2392e70f28",
        "info": "Describe your action API here.",
        "untilproptype": "num",
        "proptype": "msg",
        "name": "southbound.updateSubscriptions",
        "prop": "loop",
        "untilprop": 0,
        "until": "gt",
        "loop": "none",
        "scope": "global",
        "perf": false,
        "seq": false,
        "x": 900,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "cfa2db65e62ef717",
        "type": "actionflows",
        "z": "1b34dd2392e70f28",
        "info": "Describe your action API here.",
        "untilproptype": "num",
        "proptype": "msg",
        "name": "southbound.updateSubscriptions",
        "prop": "loop",
        "untilprop": 0,
        "until": "gt",
        "loop": "none",
        "scope": "global",
        "perf": false,
        "seq": false,
        "x": 900,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "d2da766aa7bf0590",
        "type": "actionflows",
        "z": "1b34dd2392e70f28",
        "info": "Describe your action API here.",
        "untilproptype": "num",
        "proptype": "msg",
        "name": "southbound.updateSubscriptions",
        "prop": "loop",
        "untilprop": 0,
        "until": "gt",
        "loop": "none",
        "scope": "global",
        "perf": false,
        "seq": false,
        "x": 2420,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "a7f9c0c31cab1be8",
        "type": "actionflows",
        "z": "1b34dd2392e70f28",
        "info": "Describe your action API here.",
        "untilproptype": "num",
        "proptype": "msg",
        "name": "southbound.updateSubscriptions",
        "prop": "loop",
        "untilprop": 0,
        "until": "gt",
        "loop": "none",
        "scope": "global",
        "perf": false,
        "seq": false,
        "x": 2420,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "b2b51db7fc1cfa40",
        "type": "actionflows",
        "z": "1b34dd2392e70f28",
        "info": "Describe your action API here.",
        "untilproptype": "num",
        "proptype": "msg",
        "name": "southbound.updateSubscriptions",
        "prop": "loop",
        "untilprop": 0,
        "until": "gt",
        "loop": "none",
        "scope": "global",
        "perf": false,
        "seq": false,
        "x": 2420,
        "y": 460,
        "wires": [
            []
        ]
    }
]