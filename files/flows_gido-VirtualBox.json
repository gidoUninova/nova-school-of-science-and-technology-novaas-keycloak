[
    {
        "id": "c7caf96e.a31f98",
        "type": "tab",
        "label": "AAS - Interaction Manager",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c5585a5.017f6a8",
        "type": "tab",
        "label": "AAS - Auth/Auth",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f415efa5cb36c48f",
        "type": "tab",
        "label": "AAS - Component Manager",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9c0ecc72f77c934a",
        "type": "tab",
        "label": "AAS - Environment",
        "disabled": false,
        "info": ""
    },
    {
        "id": "92b23faeba8402de",
        "type": "tab",
        "label": "AAS - SouthboundInterface",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ef5eec.2b417118",
        "type": "tab",
        "label": "AAS - NorthboundInterface",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3db1c009.99d51",
        "type": "tab",
        "label": "NBIConnectors",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2164c119.f88826",
        "type": "tab",
        "label": "AAS - UserInterface",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9cfaf8e1b235e713",
        "type": "tab",
        "label": "DPDM/OperationalData",
        "disabled": false,
        "info": ""
    },
    {
        "id": "56cb7422.e3d28c",
        "type": "subflow",
        "name": "APILogger",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 413.88330078125,
                "y": 302.8833312988281,
                "wires": []
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "c4ef1733.bc36a8",
        "type": "subflow",
        "name": "OpenAAS_Manifest_RetrievingSubmodels",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 1100,
                "y": 220,
                "wires": []
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "786aaafb.231574",
        "type": "subflow",
        "name": "OpenAAS_Manifest_RetrievingPropertyById",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 1180,
                "y": 200,
                "wires": []
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "4b6a31ae.51e96",
        "type": "subflow",
        "name": "AddFlowFromFile",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 171.6666259765625,
                "y": 196.66673278808594,
                "wires": [
                    {
                        "id": "71e88904.3ead78"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1064.9996948242188,
                "y": 196.66673278808594,
                "wires": [
                    {
                        "id": "343c7ae9.c921c6",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "5c6f7f1c.e800a",
        "type": "subflow",
        "name": "OpenAAS_Manifest_RetrievingHeaders",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 220,
                "y": 80,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 860,
                "y": 80,
                "wires": []
            }
        ]
    },
    {
        "id": "d8633d34.059f2",
        "type": "subflow",
        "name": "DataFlowsManagement",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 323.3333740234375,
                "y": 280,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 1283.333251953125,
                "y": 279.9999694824219,
                "wires": []
            }
        ]
    },
    {
        "id": "88bdbfa9.b5c8d",
        "type": "subflow",
        "name": "DeleteFlowsFromDirectory",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 222.3333740234375,
                "y": 375.46429443359375,
                "wires": [
                    {
                        "id": "d5cf465.083bfb8"
                    },
                    {
                        "id": "80d73952.05b468"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1658,
                "y": 326,
                "wires": [
                    {
                        "id": "69324f69.01e2f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "c9cc6403f63368af",
        "type": "subflow",
        "name": "Property handler",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 420,
                "y": 500,
                "wires": [
                    {
                        "id": "1103a7d5c23b2b75"
                    },
                    {
                        "id": "c9bb75bb18c3b9a7"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1880,
                "y": 500,
                "wires": [
                    {
                        "id": "970956a062dc7e6c",
                        "port": 0
                    },
                    {
                        "id": "9645aa040221dba5",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1880,
                "y": 800,
                "wires": [
                    {
                        "id": "4e95babbec5b3a72",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1880,
                "y": 860,
                "wires": [
                    {
                        "id": "1cf60967c21ed590",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "PropertyName",
                "type": "str",
                "value": ""
            },
            {
                "name": "PropertyLink",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "16640da3.5a20ca",
        "type": "group",
        "z": "c7caf96e.a31f98",
        "name": "",
        "style": {
            "fill": "#ffbfbf",
            "label": true
        },
        "nodes": [
            "23801d7a.c17572",
            "4768d29a.aacc4c",
            "17d166e7.5b6559",
            "ebf8a1.a3dd076",
            "f6f1e3c3.9ffa5",
            "98293416.fa8198",
            "43be3c31.fa03f4"
        ],
        "x": 114,
        "y": 4559,
        "w": 1932,
        "h": 182
    },
    {
        "id": "d7076418.bb51d8",
        "type": "group",
        "z": "2164c119.f88826",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f45da4ee.8dafc8",
            "e76f2790.4d439",
            "6ac29e74.d4ff7",
            "ca2d2fa0.7990d",
            "950a1370.3619d8",
            "bd6df944.5006d8",
            "f159317e.d4b0e",
            "cf299eb1.b1a8b8",
            "9f709753.69ba68",
            "39ab70b9.91e5b8",
            "7fdfc1e9.d4071",
            "eae2374c.c9d2c8",
            "5ea19cff.eb6824",
            "e5ca45b.fcf2838",
            "2e422fd2.ea192",
            "4e98c9a7.ddc0e8",
            "1532a44d.6a7c7c",
            "885776aa.79c478",
            "a0307a13.4553a8",
            "44733dbd.723eb4",
            "9b05b783.beeda8",
            "53c6b4a3.dfc49c",
            "779ff867.94293",
            "f31795b7.8000d",
            "309b8128.737fce",
            "28ed3c82.06228c",
            "2daca573.fd2b62",
            "48dea209.875afc",
            "221315aa.55d912",
            "becf9f3.769e4e",
            "e56e4e4f.0073d",
            "d34576d7.3935d8",
            "27f219a6.f4617e",
            "f1f808f7.b92858",
            "70ee2f95.a0b538",
            "d15cfb5e.6a30d8",
            "771ce938.9776b8",
            "963e89b9.45bfe",
            "e7b15c84.191a2",
            "8a8e543e.f3cb58",
            "d5c3737a.fc96c",
            "21dc8589.d16662",
            "e41ab701.8625a",
            "692fbe88.989748",
            "5b190f606c4933fd"
        ],
        "x": 94,
        "y": 2939,
        "w": 2334,
        "h": 448.00001335144043
    },
    {
        "id": "9eaca16.128cb6",
        "type": "group",
        "z": "2164c119.f88826",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "33199ab4.21681e",
            "9a1f71ad.ecf3e8",
            "726ded99.bd5cac"
        ],
        "x": 94,
        "y": 2179,
        "w": 652,
        "h": 82
    },
    {
        "id": "48a4f908.86ced8",
        "type": "group",
        "z": "2164c119.f88826",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "853a0e8f.857808",
            "f4c6e702.7f3318",
            "4558107f.b185",
            "bf662f6a.f375c8",
            "b8356819.abe308",
            "c2fcef99.58e7",
            "d8819fbd.ce78d",
            "f826e42f.85708"
        ],
        "x": 1584,
        "y": 2359,
        "w": 1132,
        "h": 304.3541259765625
    },
    {
        "id": "a4c26498.4d1758",
        "type": "group",
        "z": "2164c119.f88826",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "871d0572.18d9b8",
            "1a47219d.baab96",
            "3488bd14.4bb1da",
            "8dbdf175.e7ac5",
            "fb94e554.157a98",
            "acb1ea8a.2a0e6",
            "4b6c82b0.fc018c",
            "171706559f354cdf",
            "cd3d4435453fd008",
            "a99930336b0c92a9"
        ],
        "x": 1574,
        "y": 2679,
        "w": 912,
        "h": 242
    },
    {
        "id": "cffb33fa.8a9ae",
        "type": "group",
        "z": "2164c119.f88826",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b77c222a.ae9128",
            "dbf5d24c.fba6",
            "57455a67.915dcc",
            "a44bac1b.4c70e8",
            "505fcc23.21345c",
            "bf3d8ae0.fc9768",
            "5eb9f32e.f40bd4",
            "7048aeb0.313ca",
            "771cd6cb.803c78",
            "a01a75c5.89fab",
            "84848923.c67118",
            "3b5593e.bc8de6c",
            "f0cbc0ca.f85c9",
            "8accaafb.ad1938",
            "4b043c0a.8457ec",
            "c456e411.58a4",
            "ca0384c5.5857e",
            "db4d54ef.6b4a4",
            "efcbcc69.ed9d1",
            "db200cd7.5bd32",
            "759da6d1.42e42"
        ],
        "x": 2504,
        "y": 2779,
        "w": 1642,
        "h": 457
    },
    {
        "id": "7f3265a4.23ba94",
        "type": "group",
        "z": "2164c119.f88826",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b05b8675.6b0908",
            "fef12c4c.00324",
            "1ab68a79.a369be",
            "eb351cb4.81437",
            "66cf1c72.99bbcc",
            "d32b5901.1a603",
            "27faa505.26a31a",
            "d50039d0.bc4938",
            "2b4abcf3.ba6b04",
            "9d155fa1.55784",
            "856b84d2.58bc58",
            "f73c7559.2f4508",
            "50f38532.36990c",
            "4a2fa6da.9b03d8",
            "41bb2566.3acfdc",
            "c65f095e.8a22d",
            "cb167da9.5407f8",
            "550830ba.1dfd1",
            "90530db5.87162",
            "e76c094a.301b98",
            "2f54e93e.6944ae",
            "e4e4de93.93ecc",
            "55c3590c.12a6b",
            "ca22d6d6.76f3f",
            "dfc2d587.5eb03",
            "130f03a8.a2c444",
            "1a246772.c01c29",
            "d44825e7.f72cc",
            "865b9995.0c7b08",
            "86227a90.b4dd58",
            "62f98cdc.581cc4",
            "2776ae57.9d57ea",
            "da93d1b7.9c1328",
            "e8c93d79.6993d",
            "515aafe.e6c17d",
            "ae5e1f90.74594",
            "c26f366a.bc9c88",
            "323548f1.1a0c1",
            "3da1a7ea98029b38",
            "8b15d4c7.c880d",
            "a11a2eee.a46c8",
            "1e0c844d6abae7f8"
        ],
        "x": 1584,
        "y": 1539,
        "w": 2222,
        "h": 723
    },
    {
        "id": "6c18a80c.ec30a",
        "type": "group",
        "z": "c7caf96e.a31f98",
        "name": "",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "f110f3ac.6b72e",
            "a8092517.76dd38",
            "21db2b14.d6f9f4",
            "31a80cba.e64364",
            "d548adc1.abff8",
            "3a568a54.3c63e6",
            "b102af28.a0df28",
            "c0822d7.a2222d",
            "ed7feffb.fdc4d8",
            "fff82399.2f49b",
            "82289ad6.a600d8",
            "ad85b295.7069f",
            "3a6700df.867d18",
            "f639dee1.4897a8",
            "e67e2ede.e4bdc8",
            "1a319556.d2c653",
            "81ab9e51.5c03b",
            "bbb6509c.913df8",
            "a0836dff.f2858",
            "4dc39fd1.c8f7c8",
            "4bdb43ab.883d8c",
            "7abd742a.218ba4",
            "4933497f.445138",
            "3ddccadd.035a56",
            "6f011ca1.98e9f4",
            "fb74d752.dfd208",
            "5b2bd8f6.6d0e8",
            "d01f5c12.c02e08",
            "662a834.17435fc",
            "78eea0af.f4d448",
            "82a9de6d.515358",
            "a1236aec.ff3a7",
            "636cba04.314864",
            "ac0847a4.fe5c1",
            "f841ff35.b800c",
            "39e95fc6.a1f0d",
            "ea90329f.9037a",
            "b6b487a5.93e0b",
            "ede7821.687b6",
            "25b28035.68b498",
            "bb1e7103.624268",
            "cac23a83.5575f8",
            "d1229e16.7c61f",
            "2c538540.95c5ea",
            "4edace3a.811f88",
            "41cdd4d9.fde994",
            "ceabdccc.dcc448",
            "82db2401.4b2e08",
            "8c6a4250.9b69c",
            "ba514096.0b1438",
            "c47fe40f.da2528",
            "739cb114.af7408",
            "75f77efb0a5a8a91",
            "bac08a3b276490f0",
            "9bc3f1302ee2eae3",
            "b771b80cfe4f4c80"
        ],
        "x": 134,
        "y": 471,
        "w": 2312,
        "h": 970
    },
    {
        "id": "daa90db5.798ca",
        "type": "group",
        "z": "c7caf96e.a31f98",
        "name": "Operation on Manifest",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "235c6137.8eecfe",
            "7f25771a.9570b8",
            "87e27c61.d45d5",
            "2591dc6f.beecf4",
            "62354c3.8a2cab4",
            "cbc42023.5d017",
            "c4626f7b.fb5ac",
            "8ddc3a56.0b1778",
            "bc9740dc.6a656",
            "e2c6dfcd.e05b7",
            "2554c114.74adde",
            "bb4de309.e48c",
            "d0bce444.7eb068",
            "eb085e57.c9db48",
            "59776b4d.36b314",
            "437c7c89.d0b51c",
            "6e1fa46d.2719e4",
            "d5aae024.460208",
            "366f54c4.ff9614",
            "6871882e.816d4",
            "1af69126.217847",
            "fced9d3f.eb0ca8",
            "45f9264.ffe21d8",
            "1ba0d77.6417ba9",
            "f2d59542.56fda",
            "52d7e674.d4fa4",
            "dfbb29ed.486b38",
            "28a0f7b.c53a608",
            "bc91a45b.ea963",
            "f9901c42.d0c808",
            "9b78a20.335f76",
            "12a7495a.d95eef",
            "a3911acd.fe266",
            "58da8c41.b4c39c",
            "dae739c1.4c586",
            "a750bb3b.e7537",
            "f7ea5270.5b57e",
            "4f7412ad.7e1b64",
            "24535731.1df27",
            "f7b3bd79.a6fae8",
            "37e8727d.28d00e",
            "37a4080e.40ed9",
            "c358a7e7.e264e",
            "b0306546.0474c",
            "c4394893.5e225",
            "231ffe47.64b5b2",
            "5357901a.ebafe8",
            "fdba694e.cf01d",
            "43117f42.2a3338",
            "c85f5829.6aa428",
            "9aff2f9e.fba2b8",
            "674c00ab.c7757",
            "1b564165.83f9ef",
            "c821c9288e370ff1",
            "f8c1215f7496dbdd",
            "f2a32ab868332932",
            "c390b600bba3634e",
            "2c1e73b4e00e1fb7",
            "e8feba76b3a1c08d",
            "a1d646017f83c2c9",
            "f8dd59bec9cdfd92",
            "2677134f22e0b307",
            "b14a35d40773fb6c"
        ],
        "x": 121,
        "y": 1459,
        "w": 2271,
        "h": 2268
    },
    {
        "id": "1d9f40e2.66e59f",
        "type": "group",
        "z": "2164c119.f88826",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "2706d3c7.5d9a2c",
            "b0b325ea.8aff3",
            "649d6c1f.031b2c",
            "8adcfea2.e5f07",
            "c18d191f.026578",
            "7e763d50.949554",
            "2cf012d1.4a7f5e",
            "648a464.2a92838",
            "43780ceb.0f273c",
            "5e2d4012.8c261",
            "3b691b47.1422f4",
            "e829d4f5.0e483",
            "5a1e731e.6fd0ec",
            "f3b7793f.d22a9",
            "d8a4f595.617738",
            "a8614b5f.c2fa5",
            "a218c1c9.bf3c",
            "a5d497d.a955b68",
            "8b178b4f.b48a5",
            "dbc07abd.87dac8",
            "b1d7bd45.436bf8",
            "40ba0174.feea08",
            "ed973683.3fdac8",
            "13eaa4a6.391393",
            "655852a0.36bea4",
            "7a918d3a.b1ea34",
            "c37add0d.9710f",
            "aa9b9e00.d9a198",
            "eb868983.45c2e8",
            "57cc2b70.afb41c",
            "2fa38586.c0acea",
            "c378d360.44ac8",
            "b36514b5.7418a8",
            "db56541d.47959",
            "9c556d25.7ae77",
            "9f049ae7.5b8448",
            "585218a0.c4569",
            "decce0a.5623ea",
            "3a8df59d.b261fa",
            "4277ccb7.a13f94",
            "25185bed.02905c",
            "4f70aa4.50d53d4",
            "d9ac191f.2ed418",
            "83f54403.763838",
            "1883da0b.b158f6",
            "a0e27916.231d4",
            "d3060bb8.b1786",
            "7e3dad70.c8221c",
            "cf9eba71.c9cd7",
            "4d2d1e51.7bfb18",
            "dcb78149.5e104",
            "776a114a.b4cc78",
            "9c50cdd2.d8bbe8",
            "ef9e4b4284b6fcf7",
            "f5d81204558f97fa",
            "ef469c86.b0f528",
            "28a6230f679f8eeb",
            "806e01ba8dd4aa22",
            "bdc6118ddbb26572",
            "5fdc6c44f4e6b7bc",
            "bec31447af229551",
            "8cc0ac81e48b03f7",
            "fb52595bb042a87c",
            "70759b25fdae0ba5",
            "a25cff0979be5e05",
            "c162a071340f3680",
            "636592f210d0709c",
            "fac35eb3a87144b5",
            "d09a83e16a7f9759",
            "f409f63099e3739c",
            "addf54177a23460b",
            "d0a6ef47933a7871",
            "70c749831513dc2c"
        ],
        "x": 214,
        "y": 99,
        "w": 3452,
        "h": 962
    },
    {
        "id": "9e0d0c62.913b48",
        "type": "group",
        "z": "c7caf96e.a31f98",
        "name": "",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "ecbd2ba0.e8bf9",
            "fef82414.50e9f8",
            "421a980b.ffb09",
            "3b26bcb7.39cf3c",
            "4de1edb.3e19014",
            "6764e5e4.add904",
            "165ed216.5f840e",
            "7f57e4a0.47375c",
            "5e3479cb.dad398",
            "4e6a55e7.3950c4",
            "d8850bdc.71f698",
            "62d70b6d.e3b8ec",
            "577c5207.33743c",
            "305810cf.42f6c",
            "eb276c3207ba11fa",
            "360dec5ddd2bd11b"
        ],
        "x": 114,
        "y": 4299,
        "w": 2512,
        "h": 202
    },
    {
        "id": "55103cdc.687e1c",
        "type": "group",
        "z": "c7caf96e.a31f98",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "91240be.20997f8",
            "273d9714.e8066",
            "7f3fe823.9a8048",
            "dfbf1931.2137e",
            "53edd896.d570e8",
            "ed36ed82.0ad1a",
            "6296174d.657848",
            "9b8d87d6.a0f5c",
            "d0ee856f.bf96e",
            "277cb63a.4b547a",
            "f639ad5.0fd9f5",
            "cba8b568.6c39a",
            "e477aa02.a2c4f8"
        ],
        "x": 134,
        "y": 139,
        "w": 2298,
        "h": 302
    },
    {
        "id": "66d3f26a.c296b4",
        "type": "group",
        "z": "c7caf96e.a31f98",
        "name": "",
        "style": {
            "label": true,
            "color": "#777777",
            "fill": "#e3f3d3"
        },
        "nodes": [
            "bb684f25.d3519",
            "7b105e31.22111",
            "63547b46.f4c064",
            "f679f510.e6f448",
            "3af93222.96064e",
            "b763f8b6.fbb468",
            "828df34.b6d9e1",
            "fc99534e.2e75a",
            "dac82e37.2d63d",
            "aca4e316.3e76",
            "b06bbe8c.99281",
            "a3ec15bc.b3e59",
            "184a6b3e.d382f5",
            "ec19d6a4.7505f8",
            "568d5f3.624242",
            "d5524b85.c3c27",
            "cfca74c7.b132b",
            "ffb2df3a.e5c088",
            "8a618a8d.e62888",
            "6365223b.355cac",
            "317b8add.0a862e",
            "7126ac75.9556b4",
            "500ad330.b7d6b4",
            "8c6633ec.aa98",
            "e08da917.d8f298",
            "f25207a6.2f6878",
            "822a3485.6454a",
            "691102d8.2e4ccc",
            "3fb52f54.6765f",
            "e6ffd72c.9d6e5",
            "44b5fdcb.b49084",
            "9ebd49db.dcf8a8",
            "a84572c.caab99",
            "82c84fc4ae533332",
            "59daa494066fadf7",
            "b60fe97da951714e",
            "980c299d2c876a72",
            "6007b6ab3ff27f27",
            "73c3652ac2a9986d"
        ],
        "x": 114,
        "y": 3759,
        "w": 2392,
        "h": 502
    },
    {
        "id": "d9efc969.3ac7a8",
        "type": "group",
        "z": "2164c119.f88826",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "5e23ea8f.c23584",
            "16f67a18.ffbace",
            "8fe4d1c6.195158",
            "45917e9f.5e03",
            "dcfcf5b5.f7fcd8",
            "dbaadebd.4b69d8",
            "dbd47ad9.b39ec",
            "1da87241.c01316",
            "6b35b5c.246d3cc",
            "affa7940.488c58",
            "3ab155ea.bea442",
            "7ad04b13.fae71c",
            "cbd1bdb3.acb988",
            "72b0a98f.34845",
            "6b35d8f6.cc4f3",
            "b04e3281.48c738",
            "9c0fd00c.914d28",
            "3ff45b61.4dfabc",
            "6b223dd3.5f489c",
            "3f7de25e.9b0a5e",
            "7cadd42.3bb532c",
            "ec32158e.39755",
            "a6820e84.1e723",
            "1128b4bc.b761eb",
            "848a1897.da83b",
            "2c172878.06cf38",
            "e65d6a5a.220b"
        ],
        "x": 104,
        "y": 3499,
        "w": 1572,
        "h": 642
    },
    {
        "id": "b85ff5d2fdca6f85",
        "type": "group",
        "z": "f415efa5cb36c48f",
        "name": "To North",
        "style": {
            "fill": "#bfc7d7",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "98e8c09f56fc40a1",
            "492f981e7052ee92",
            "9c4082fd02249e34",
            "a1230fbb48c84418",
            "f7e593d009947a60",
            "7b48ced64946a8d2",
            "893f967b73205095",
            "4872c068f48e839b",
            "a9c22279a032d681",
            "5cea18b9856d1364",
            "e1994719bd7b4722"
        ],
        "x": 194,
        "y": 4242,
        "w": 2272,
        "h": 259
    },
    {
        "id": "d56f57bf073f180e",
        "type": "group",
        "z": "f415efa5cb36c48f",
        "name": "To/From South",
        "style": {
            "fill": "#bfdbef",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "bcdfd890eb2e91c2",
            "cfd6c763986a2c52",
            "cb55ae8f6ab1795a",
            "036f573e2e9b4183",
            "b5e82d6c2f67da44",
            "e72c15b993724d44",
            "e13dc00a62dd4477",
            "49eb0c3d325b8b34",
            "14b5b585fb0247e5",
            "24f86b003f0a61df",
            "713bc92ebcc0465b",
            "f1dda0e0acb0d3aa",
            "f53807a57083ee3a",
            "838ecef7315c2b72",
            "0a2c564d4b239ae5",
            "c1fc2d96eadc66fd",
            "e145d526dab3c12a",
            "be59bd11c9bdba5d",
            "9f780d309e2d62ff",
            "6ddc06b9a268c3c5",
            "4dca94ace516235f",
            "0f237688f2da86da",
            "b13f02576aacce85",
            "ab7f21495153f5fa",
            "371ca9c1d8dd1cea",
            "41587f0637db95e9",
            "d76c83f99068841f",
            "9c0ecfad5fbb3226",
            "dabf6f00bad223ed"
        ],
        "x": 194,
        "y": 3539,
        "w": 2972,
        "h": 562
    },
    {
        "id": "065e6699a83c4478",
        "type": "group",
        "z": "9cfaf8e1b235e713",
        "name": "Set-up",
        "style": {
            "fill": "#e3f3d3",
            "fill-opacity": "0.4",
            "label": true
        },
        "nodes": [
            "d77d0408732fd237",
            "9469bc5f4967897e",
            "e55fb239c1b22c52",
            "a9e2399911f827fb",
            "9ec3ab4c31d15faf",
            "e5865d09d52965cc",
            "52081eabf8d4c284",
            "9ed858cd439ca4fc",
            "16b1d42bbaac107e",
            "2b38ab0b22721258",
            "a77ba8c0d6451bdd",
            "6ec913eacd920df3",
            "423ebc1bab8716ee",
            "41dc6a3a202784ae"
        ],
        "x": 124,
        "y": 59,
        "w": 1522,
        "h": 322
    },
    {
        "id": "1ef2f4525f814eca",
        "type": "group",
        "z": "9cfaf8e1b235e713",
        "name": "Simulator",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "8a7dbd8d87d2c14b",
            "ce9413d0a9a77083",
            "b3ad792b2edc9635",
            "ffd110d41f4f0720",
            "80c266ae2be09b65",
            "eb548de2149d6ee6",
            "d4b45ef79bec8e14",
            "1fd902a0ae8723c3",
            "dc175efce3667e47",
            "fd99972c24c81aab",
            "f29b87e2c6b01028",
            "644663af6f92549b",
            "c36933bd82b6291e",
            "a7fb8486b78d0cf2",
            "665544360eca4b26",
            "8054c1d81f12f82d",
            "db3be3c0dd399687",
            "0d2f6a871544a928",
            "61d0906e682a3214",
            "f4c6ec0a7c79d4ad",
            "8abaa3e2afc0c5a4",
            "4f15725a68147ceb",
            "67ff5d6e4cf0a8ce",
            "1fb73eb1f89f2a8a",
            "53d3faa7fbc05f5b",
            "3cb6244d0aee0449",
            "fd7382f223312a4a",
            "cb8e20f1137ff3bd",
            "c1aeb2c4a4cd1940",
            "526399564f87c901"
        ],
        "x": 114,
        "y": 2639,
        "w": 2872,
        "h": 516
    },
    {
        "id": "37a4080e.40ed9",
        "type": "group",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "912eda47.361a98",
            "9084f719.6afdf8",
            "2520a136.899d6e",
            "ca6f3523.f2b588",
            "5651a9f8.d2bc98",
            "1dbfef26.97a6f1",
            "bd2ae1ed.cbdaa",
            "890fd853.abfe18",
            "9f7abd5a.96875",
            "54372dd7.ec8b74",
            "cb3ea6e9.72b438",
            "87522ab0.ac1188",
            "8c4835ae.20d5b8",
            "345e490a.d99a46",
            "a0cacb3.3af7d38",
            "a4eb92d0.81718",
            "228c3050.5c01b8",
            "4599d634.2aa528",
            "143b6801.91912",
            "360b9a7b.0d5576",
            "dfab21d7.5cff3",
            "d7af0dba.b14dd",
            "700a3d1b.785ba4",
            "8b0ca178.67fdf8",
            "47978f85.8891b",
            "8c710513.6043a8",
            "fe5f7f4c.e7e97",
            "fa4974dc.1fa648",
            "382b8aa3.3d21ce",
            "2cfbd2d.53f5fae",
            "3de094e.8246d6c",
            "a17709b9.3e472",
            "2855d825.21951",
            "76230fd.d0045f",
            "3096c3fb.0bf594",
            "2205d4d4.72806c",
            "7634d591.ced0a4",
            "80ddd535.92f168",
            "712f2a7f.2f2cc4",
            "2ba34b7e.d39f0c",
            "a165d74f.1c5bb",
            "4d1c9a11.497c04",
            "f2597aa.1d7ae88",
            "de785470.82c5b",
            "3fe41c39.bcab0c",
            "6b96478d.7a9f2",
            "30077481.6a5194",
            "b1c19080.0790a",
            "51378cd1.d13f34",
            "7b6789df.b592a8",
            "5972e175.abd018",
            "285cbaebcd186f72",
            "a4fde9ca0f51233e",
            "4026dd07eb40b103",
            "db0a1878cfd3b36f",
            "5e28d3d6e7fcee4b",
            "b45ed924c417fa33",
            "8877b550e2c00515",
            "e93422875c7c917a",
            "7912b6b8665075c8",
            "b5c61584b9a4d748"
        ],
        "x": 147,
        "y": 2376,
        "w": 2219,
        "h": 705
    },
    {
        "id": "c358a7e7.e264e",
        "type": "group",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "5fa33903.676088",
            "bac747df.172a08",
            "9a24dda.82e0e2",
            "9719e687.c005e8",
            "8b05bd82.8d5c3",
            "a33c8835.b4ae48",
            "f6804404.570008",
            "e0482beb.0de658",
            "f2fbc8fb.44c608",
            "8a1eeeb2.31c1c",
            "f42c942d.6d6448",
            "4a5f46fc.ea7c08",
            "6e7f5025.a4315",
            "bc2fff91.b20fd",
            "53f11e8b.9b099",
            "9cae29d0.c4e968",
            "b3ea9713.385ab8",
            "d0dcfd84.fa36a",
            "73b0d61c.3c5ca8",
            "539e5110.1ef598",
            "876d418.03db2c",
            "98bc07c7.2b47c",
            "e1532702.4731d",
            "cd71006d.5e021",
            "9cbf611c.48b76",
            "9359dad8.bb01a",
            "98e3a79d.ae8a58",
            "50d5b873.cdac08",
            "cce764f4.a4ddc8",
            "fd6d81a6.b3f8d8",
            "b8a009e2.87f68",
            "a1969e7feaeb046c",
            "b51e21c2b025c41f",
            "6c7ffe936d1b3a82",
            "932caae9eef96d41",
            "81887e0a48fc148f",
            "1b8ead8c39ba6430",
            "91b87f68448d6ab5",
            "5f9c19ddaffca140",
            "828604507255f1c3",
            "f117413afc52cadf",
            "a5fbb27052c80af6",
            "e11051798721b310",
            "2f6e0dd8d3a9d534",
            "d88d1f52a2427ba4",
            "2b44a7a0105a7a7a",
            "923ffc0345be1e2b"
        ],
        "x": 154,
        "y": 3099,
        "w": 2212,
        "h": 602
    },
    {
        "id": "de00f046.a69e6",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "AASGreen",
                "default": "#4B7930",
                "baseColor": "#14524e",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#14524e",
                    "value": "#14524e",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#14524e",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#f0f0f0",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#14524e",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "NOVAsset Administration Shell",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "5b380ea4.54d28",
        "type": "ui_group",
        "name": "Commands",
        "tab": "1e533544.f40ceb",
        "order": 1,
        "disp": true,
        "width": "3",
        "collapse": true
    },
    {
        "id": "6966bf45.2bd2c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": "3",
        "height": "18"
    },
    {
        "id": "418f9bc9.9d9e54",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b93c6fee.cdc1",
        "order": 8,
        "width": "3",
        "height": "10"
    },
    {
        "id": "eb397387.b54d6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2cf81c1a.c087a4",
        "order": 7,
        "width": "3",
        "height": "10"
    },
    {
        "id": "1137cd77.f1a8e3",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9d7444d0.760228",
        "order": 6,
        "width": "3",
        "height": "10"
    },
    {
        "id": "3e0a3588.cbe2ba",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d44f6b71.a207b8",
        "order": 5,
        "width": "10",
        "height": "10"
    },
    {
        "id": "1e71b463.7a445c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": "3",
        "height": "19"
    },
    {
        "id": "1e533544.f40ceb",
        "type": "ui_tab",
        "name": "Login",
        "icon": "lock",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "87a49011.a46a8",
        "type": "ui_group",
        "name": "Configurations",
        "tab": "1e533544.f40ceb",
        "order": 2,
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "7511afda.577af",
        "type": "ui_tab",
        "name": "Overview",
        "icon": "home",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "76f4488e.b66968",
        "type": "ui_group",
        "name": "Health",
        "tab": "7511afda.577af",
        "order": 1,
        "disp": true,
        "width": "5",
        "collapse": false
    },
    {
        "id": "cb7ccff3.2c214",
        "type": "ui_tab",
        "name": "Logs",
        "icon": "view_list",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2011433c.13241c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": "3",
        "height": "18"
    },
    {
        "id": "5b501961.207008",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b93c6fee.cdc1",
        "order": 8,
        "width": "3",
        "height": "10"
    },
    {
        "id": "ed3f252d.0f4658",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2cf81c1a.c087a4",
        "order": 7,
        "width": "3",
        "height": "10"
    },
    {
        "id": "20b2b12e.9afa1e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9d7444d0.760228",
        "order": 6,
        "width": "3",
        "height": "10"
    },
    {
        "id": "1ccac3a3.71980c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d44f6b71.a207b8",
        "order": 5,
        "width": "10",
        "height": "10"
    },
    {
        "id": "5a02becd.9ba23",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": "3",
        "height": "19"
    },
    {
        "id": "b40dede5.d75a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": "9"
    },
    {
        "id": "8b53a367.fe80b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": "3",
        "height": "18"
    },
    {
        "id": "e83dc3e0.0179b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b93c6fee.cdc1",
        "order": 8,
        "width": "3",
        "height": "10"
    },
    {
        "id": "a69e158c.39eb58",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2cf81c1a.c087a4",
        "order": 7,
        "width": "3",
        "height": "10"
    },
    {
        "id": "8829278d.8d8418",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9d7444d0.760228",
        "order": 6,
        "width": "3",
        "height": "10"
    },
    {
        "id": "b988c4b.53b9d38",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d44f6b71.a207b8",
        "order": 5,
        "width": "10",
        "height": "10"
    },
    {
        "id": "28ba0356.ef188c",
        "type": "ui_group",
        "name": "Commands",
        "tab": "e61c2c82.e7e9f",
        "order": 1,
        "disp": true,
        "width": "3",
        "collapse": true
    },
    {
        "id": "8fc17f5a.38023",
        "type": "ui_group",
        "name": "Headers",
        "tab": "e61c2c82.e7e9f",
        "order": 2,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "e61c2c82.e7e9f",
        "type": "ui_tab",
        "name": "Environment",
        "icon": "format_list_bulleted",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c68d835e.db3b2",
        "type": "ui_group",
        "name": "Body",
        "tab": "e61c2c82.e7e9f",
        "order": 3,
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "c56f01cc.380dd",
        "type": "ui_group",
        "name": "AAS Concept Descriptions",
        "tab": "31cac02.f941f4",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "31cac02.f941f4",
        "type": "ui_tab",
        "name": "Concept Descriptions",
        "icon": "more",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "86f8f681.8f77e8",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 3,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "3c18c574.bda17a",
        "type": "ui_group",
        "name": "Login",
        "tab": "1e533544.f40ceb",
        "order": 3,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "b9ac7006.de90a",
        "type": "ui_group",
        "name": "Counters",
        "tab": "7511afda.577af",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "7a30c02.5d2894",
        "type": "ui_group",
        "name": "Information",
        "tab": "7511afda.577af",
        "order": 3,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "7062f255.94da6c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": "3",
        "height": "18"
    },
    {
        "id": "ae197b03.e5a3c8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b93c6fee.cdc1",
        "order": 8,
        "width": "3",
        "height": "10"
    },
    {
        "id": "5aad190a.535178",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2cf81c1a.c087a4",
        "order": 7,
        "width": "3",
        "height": "10"
    },
    {
        "id": "6182cb2b.0c2404",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9d7444d0.760228",
        "order": 6,
        "width": "3",
        "height": "10"
    },
    {
        "id": "c59051fd.b9ac5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d44f6b71.a207b8",
        "order": 5,
        "width": "10",
        "height": "10"
    },
    {
        "id": "b0f5342a.1f0448",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": "3",
        "height": "19"
    },
    {
        "id": "9d5f89d0.d84da8",
        "type": "ui_group",
        "name": "Commands",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "3",
        "collapse": false
    },
    {
        "id": "6c32f283.c4801c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9d5f89d0.d84da8",
        "order": 4,
        "width": 1,
        "height": "9"
    },
    {
        "id": "765e2d0e.efffb4",
        "type": "ui_group",
        "name": "Default",
        "tab": "f0cb09d5.5eebd8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "f0cb09d5.5eebd8",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 11
    },
    {
        "id": "b9aed87e.bdd0c8",
        "type": "ui_group",
        "name": "Commands",
        "tab": "cb7ccff3.2c214",
        "order": 1,
        "disp": true,
        "width": "3",
        "collapse": false
    },
    {
        "id": "d61f3cdd.7e8e5",
        "type": "swagger-doc",
        "summary": "Test the status of the AAS",
        "description": "",
        "tags": "",
        "consumes": "",
        "produces": "test/html",
        "parameters": [],
        "responses": {
            "200": {
                "description": "OK"
            },
            "503": {
                "description": "Asset Administration Shell not configured"
            }
        },
        "deprecated": false
    },
    {
        "id": "63d120af.ce7f5",
        "type": "ui_group",
        "name": "Logs",
        "tab": "cb7ccff3.2c214",
        "order": 1,
        "disp": true,
        "width": "35",
        "collapse": false
    },
    {
        "id": "a32461e7.fcfdd",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 1,
        "width": 3,
        "height": 1
    },
    {
        "id": "2681df6d.da9b2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 2,
        "width": 3,
        "height": 1
    },
    {
        "id": "aa378c5f.7aa88",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "db86caae.863908",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 4,
        "width": 3,
        "height": 1
    },
    {
        "id": "c62a8f6f.71b85",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "e9f9bde8.c1f3d",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 6,
        "width": 3,
        "height": 1
    },
    {
        "id": "a47c04c.1f826f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 7,
        "width": 3,
        "height": 1
    },
    {
        "id": "f23eb823.0f29f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 8,
        "width": 3,
        "height": 1
    },
    {
        "id": "ebda5827.5ade38",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "6c2cbcec.247384",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 10,
        "width": 3,
        "height": 1
    },
    {
        "id": "7ac6f7fa.e5daa8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 11,
        "width": 3,
        "height": 1
    },
    {
        "id": "609040ed.9370e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 12,
        "width": 3,
        "height": 1
    },
    {
        "id": "9be6ab03.c43b98",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 13,
        "width": 3,
        "height": 1
    },
    {
        "id": "ee89ce2c.1026e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 14,
        "width": 3,
        "height": 1
    },
    {
        "id": "6855863b.0d5da8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 15,
        "width": 3,
        "height": 1
    },
    {
        "id": "753e304.187cdd",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 16,
        "width": 3,
        "height": 1
    },
    {
        "id": "8c35f1c6.db11",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 17,
        "width": 3,
        "height": 1
    },
    {
        "id": "1bdd7722.5a6369",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 18,
        "width": 3,
        "height": 1
    },
    {
        "id": "5bc9a598.e7076c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 19,
        "width": 3,
        "height": 1
    },
    {
        "id": "816ae7fa.db1168",
        "type": "ui_group",
        "name": "Modal",
        "tab": "1e533544.f40ceb",
        "order": 5,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e807dd2a.e5003",
        "type": "ui_group",
        "name": "Template tab",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "6b729710.0bd698",
        "type": "ui_group",
        "name": "Template tab",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "edb38227.3726a",
        "type": "ui_group",
        "name": "Body",
        "tab": "1e533544.f40ceb",
        "order": 4,
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "ddccf1e6.d0f5e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "172.17.0.3",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": ""
    },
    {
        "id": "d1259efc.6308f8",
        "type": "ui_tab",
        "name": "Subscriptions",
        "icon": "link",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f57f5dd7.e298c",
        "type": "ui_group",
        "name": "Actual Subscribed Elements",
        "tab": "d1259efc.6308f8",
        "order": 1,
        "disp": true,
        "width": "40",
        "collapse": false
    },
    {
        "id": "777bc51a.c31cac",
        "type": "ui_tab",
        "name": "Statistics",
        "icon": "equalizer",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d8770726.1a10d",
        "type": "ui_group",
        "name": "Routed Message Stats",
        "tab": "777bc51a.c31cac",
        "order": 3,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "a1ac21b4.e86f9",
        "type": "ui_tab",
        "name": "Dash",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "175d54ea.788a73",
        "type": "ui_group",
        "name": "Dashboard SBI",
        "tab": "a1ac21b4.e86f9",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "77c7337d.b33f54",
        "type": "ui_group",
        "name": "Asset",
        "tab": "7511afda.577af",
        "order": 4,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "61f5e7d8.dadec8",
        "type": "ui_tab",
        "name": "Configs",
        "icon": "settings",
        "order": 8,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "360b2bc7.818494",
        "type": "ui_group",
        "name": "Configurations",
        "tab": "61f5e7d8.dadec8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "723dce78.487d4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 1,
        "width": "3",
        "height": 1
    },
    {
        "id": "a1a3eca8.b75d58",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b9aed87e.bdd0c8",
        "order": 1,
        "width": "3",
        "height": "15"
    },
    {
        "id": "16ffbcf4.6cfa43",
        "type": "ui_group",
        "name": "Account Logs",
        "tab": "cb7ccff3.2c214",
        "order": 3,
        "disp": true,
        "width": "35",
        "collapse": false
    },
    {
        "id": "952e8c04.ed2bb8",
        "type": "ui_group",
        "name": "Retrieved Messages",
        "tab": "777bc51a.c31cac",
        "order": 2,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "b6f3261d.3a0a2",
        "type": "ui_group",
        "name": "Commands",
        "tab": "777bc51a.c31cac",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "f9f1bdc8.0e017",
        "type": "ui_group",
        "name": "Health",
        "tab": "e61c2c82.e7e9f",
        "order": 4,
        "disp": true,
        "width": "5",
        "collapse": false
    },
    {
        "id": "3d2c88cc.07fe3",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "28ba0356.ef188c",
        "order": 2,
        "width": "3",
        "height": "29"
    },
    {
        "id": "d485ef76.7ab83",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "f9f1bdc8.0e017",
        "order": 2,
        "width": "5",
        "height": "28"
    },
    {
        "id": "bbfbe12.a34272",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "76f4488e.b66968",
        "order": 2,
        "width": "5",
        "height": "18"
    },
    {
        "id": "4534a6d5.677c78",
        "type": "ui_group",
        "name": "Health",
        "tab": "31cac02.f941f4",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "daa9f3a8.d6e07",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4534a6d5.677c78",
        "order": 2,
        "width": "5",
        "height": "18"
    },
    {
        "id": "4944a8dc.cb1658",
        "type": "ui_group",
        "name": "Health",
        "tab": "d1259efc.6308f8",
        "order": 3,
        "disp": true,
        "width": "5",
        "collapse": false
    },
    {
        "id": "7f352167.161c7",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4944a8dc.cb1658",
        "order": 2,
        "width": "5",
        "height": "18"
    },
    {
        "id": "a9cc6929.51b4",
        "type": "ui_group",
        "name": "Health",
        "tab": "cb7ccff3.2c214",
        "order": 4,
        "disp": true,
        "width": "5",
        "collapse": false
    },
    {
        "id": "ac674a92.7f35c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a9cc6929.51b4",
        "order": 4,
        "width": "5",
        "height": "34"
    },
    {
        "id": "1e8a2f3d.54af89",
        "type": "ui_group",
        "name": "Health",
        "tab": "777bc51a.c31cac",
        "order": 4,
        "disp": true,
        "width": "5",
        "collapse": false
    },
    {
        "id": "c8188165.80a358",
        "type": "ui_group",
        "name": "Health",
        "tab": "a1ac21b4.e86f9",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "8c770c04.3768a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c8188165.80a358",
        "order": 2,
        "width": "6",
        "height": "23"
    },
    {
        "id": "1a940952.a8af7f",
        "type": "ui_group",
        "name": "Health",
        "tab": "1e533544.f40ceb",
        "order": 6,
        "disp": true,
        "width": "5",
        "collapse": false
    },
    {
        "id": "e14ea6e9.388bf",
        "type": "swagger-doc",
        "summary": "Retrieve the current Manifest document",
        "description": "",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "Manifest aml document",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "243cd5cc.02619a",
        "type": "swagger-doc",
        "summary": "Retrieve the current Manifest document",
        "description": "",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "Manifest aml document",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "f4862300.a8e8f",
        "type": "swagger-doc",
        "summary": "Retrieve the AAS identificators (header part of the Manifest)",
        "description": "AAS headers",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "aml Manifest headers response",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "3cb4416b.714dee",
        "type": "swagger-doc",
        "summary": "Retrieve the AAS identificators (header part of the Manifest)",
        "description": "AAS headers",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "aml Manifest headers response",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "b62cd952.177cc8",
        "type": "swagger-doc",
        "summary": "Retrieve the list of the AAS submodels (Body part of the Manifest)",
        "description": "AAS submodels",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "List the submodels in the Manifest"
            }
        },
        "deprecated": false
    },
    {
        "id": "40e0e792.156ad8",
        "type": "swagger-doc",
        "summary": "Retrieve the list of the AAS submodels (Body part of the Manifest)",
        "description": "AAS submodels",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "List the submodels in the Manifest"
            }
        },
        "deprecated": false
    },
    {
        "id": "822bf506.7ffad",
        "type": "swagger-doc",
        "summary": "Retrieve the AAS submodel by Id",
        "description": "AAS submodel by Id",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [
            {
                "name": "id",
                "in": "path",
                "description": "submodel identificator",
                "required": true,
                "type": "string"
            }
        ],
        "responses": {
            "200": {
                "description": "xml specific submodel"
            },
            "404": {
                "description": "Submodel with id: {id} not found"
            }
        },
        "deprecated": false
    },
    {
        "id": "77ef1ed8.9ce42",
        "type": "mqtt-broker",
        "name": "",
        "broker": "$(BROKER_SERVICE_HOST)",
        "port": "$(BROKER_SERVICE_PORT)",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "d2edf304.fdfa2",
        "type": "sub-link-config",
        "name": "southbound",
        "clone": false
    },
    {
        "id": "7dcd4079.256cf",
        "type": "ui_group",
        "name": "form",
        "tab": "56715436.c2591c",
        "order": 1,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "6a4d510d.5de65",
        "type": "ui_group",
        "name": "ReportDownload",
        "tab": "56715436.c2591c",
        "order": 2,
        "disp": false,
        "width": "9",
        "collapse": false
    },
    {
        "id": "56715436.c2591c",
        "type": "ui_tab",
        "name": "Reporting",
        "icon": "assignment",
        "order": 9,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "2de66fb8.407b1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "$(BROKER_SERVICE_HOST)",
        "port": "$(BROKER_SERVICE_PORT)",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "72ae2011.f3d7b",
        "type": "sub-link-config",
        "name": "driver",
        "clone": false
    },
    {
        "id": "e70d9188.7d95e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "$(BROKER_SERVICE_HOST)",
        "port": "$(BROKER_SERVICE_PORT)",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "d56e5f93.f422c",
        "type": "logger",
        "z": "56cb7422.e3d28c",
        "name": "",
        "filename": "logs.log",
        "maxsize": 1,
        "maxfiles": 10,
        "complete": "true",
        "console": false,
        "file": true,
        "debug": false,
        "zip": false,
        "logtype": "info",
        "x": 1043.6332397460938,
        "y": 298.88336181640625,
        "wires": []
    },
    {
        "id": "dca65b7f.b00ba8",
        "type": "unsafe-function",
        "z": "56cb7422.e3d28c",
        "name": "createLogEntry",
        "func": "//var element = JSON.stringify(msg.payload);\nvar msg1 = {};\nvar outmsg = {};\n//msg1.payload = element;\nmsg1.requestedURL = msg.req.url;\nmsg1.headers = {};\nmsg1.headers[\"user-agent\"] = msg.req.headers[\"user-agent\"];\nmsg1.headers[\"authorization\"] = msg.req.headers[\"authorization\"];\nmsg1.headers[\"content-type\"] = msg.req.headers[\"content-type\"];\nmsg1.headers[\"host\"] = msg.req.headers[\"host\"];\nmsg1.startTime = msg.startTime;\nif(typeof msg.req.client._peername !== 'undefined'){\n    msg1.client = msg.req.client._peername.address;\n} else{\n    msg1.client = \"internal\";\n} \n\nmsg1.endTime = Date.now();\noutmsg.payload = JSON.stringify(msg1);\nreturn outmsg; // msg1;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 573.88330078125,
        "y": 302.8833312988281,
        "wires": [
            [
                "8713151e.2f1728"
            ]
        ]
    },
    {
        "id": "8713151e.2f1728",
        "type": "unsafe-function",
        "z": "56cb7422.e3d28c",
        "name": "checkLogging",
        "func": "//var element = JSON.stringify(msg.payload);\nlet node_aas_log = process.env.NODE_AAS_RUNNNING_UNDER_PM2;\nif(typeof node_aas_log == \"undefined\"){\n    return [msg, null];\n} else {\n    return [null, msg];\n}\n\n",
        "outputs": 2,
        "noerr": 0,
        "x": 808.6041870117188,
        "y": 304.85418701171875,
        "wires": [
            [
                "d56e5f93.f422c"
            ],
            [
                "6c23162c.b90798",
                "fd22ab4d.326ef8"
            ]
        ]
    },
    {
        "id": "fd22ab4d.326ef8",
        "type": "logger",
        "z": "56cb7422.e3d28c",
        "name": "",
        "filename": "logs.log",
        "maxsize": 1,
        "maxfiles": 10,
        "complete": "true",
        "console": true,
        "file": false,
        "debug": false,
        "zip": false,
        "logtype": "info",
        "x": 1044.7666015625,
        "y": 351.76666259765625,
        "wires": []
    },
    {
        "id": "6c23162c.b90798",
        "type": "debug",
        "z": "56cb7422.e3d28c",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1075.5,
        "y": 398.5,
        "wires": []
    },
    {
        "id": "264fc7aa.b065d8",
        "type": "file in",
        "z": "c4ef1733.bc36a8",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 270,
        "y": 80,
        "wires": [
            [
                "852a1c1c.2613f"
            ]
        ]
    },
    {
        "id": "852a1c1c.2613f",
        "type": "json",
        "z": "c4ef1733.bc36a8",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 510,
        "y": 80,
        "wires": [
            [
                "15454eba.50d351"
            ]
        ]
    },
    {
        "id": "a3f88401.9623b8",
        "type": "json",
        "z": "c4ef1733.bc36a8",
        "name": "",
        "property": "jsonataResult",
        "action": "str",
        "pretty": true,
        "x": 270,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "39839c3f.68ab24",
        "type": "jsonata",
        "z": "c4ef1733.bc36a8",
        "name": "jsonata",
        "property": "payload",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 1040,
        "y": 80,
        "wires": [
            [
                "a3f88401.9623b8"
            ]
        ]
    },
    {
        "id": "15454eba.50d351",
        "type": "unsafe-function",
        "z": "c4ef1733.bc36a8",
        "name": "JsonataQuery",
        "func": "msg.jsonata = \"Body.SubModels[\\\"PUBLIC\\\" in PropertyValueStatementContainers.statements.Visibilty]\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 80,
        "wires": [
            [
                "39839c3f.68ab24"
            ]
        ]
    },
    {
        "id": "f7527cda.5b012",
        "type": "file in",
        "z": "786aaafb.231574",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 450,
        "y": 40,
        "wires": [
            [
                "bea41ae1.2c9688"
            ]
        ]
    },
    {
        "id": "bea41ae1.2c9688",
        "type": "json",
        "z": "786aaafb.231574",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 650,
        "y": 40,
        "wires": [
            [
                "9ee0526a.63c73"
            ]
        ]
    },
    {
        "id": "9ee0526a.63c73",
        "type": "unsafe-function",
        "z": "786aaafb.231574",
        "name": "JsonataQuery",
        "func": "msg.jsonata = \"Body.SubModels[(\\\"http://acplt.org/models/PhysicalConnection\\\" in ModelID.IDSpec)].PropertyValueStatementContainers.statements[$substringAfter(\" + \"\\\"\" + msg.req.params.id + \"\\\"\" + \", \\\"models/\\\") in $substringAfter(PropertyID.IDSpec, \\\"http://acplt.org/models/PhysicalConnection/\\\")]\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 40,
        "wires": [
            [
                "38bec566.fe79ba"
            ]
        ]
    },
    {
        "id": "38bec566.fe79ba",
        "type": "jsonata",
        "z": "786aaafb.231574",
        "name": "jsonata",
        "property": "payload",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 1140,
        "y": 40,
        "wires": [
            [
                "8a8a185a.1f2ec8"
            ]
        ]
    },
    {
        "id": "8a8a185a.1f2ec8",
        "type": "unsafe-function",
        "z": "786aaafb.231574",
        "name": "",
        "func": "msg.payload = msg.jsonataResult;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "c19ac6e7.9aeaf8",
        "type": "file in",
        "z": "4b6a31ae.51e96",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 574.9998168945312,
        "y": 196.6666717529297,
        "wires": [
            [
                "31aa7cf6.436564"
            ]
        ]
    },
    {
        "id": "31aa7cf6.436564",
        "type": "addflow",
        "z": "4b6a31ae.51e96",
        "name": "",
        "x": 738.3333129882812,
        "y": 196.6666717529297,
        "wires": [
            [
                "343c7ae9.c921c6"
            ]
        ]
    },
    {
        "id": "71e88904.3ead78",
        "type": "change",
        "z": "4b6a31ae.51e96",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 374.99993896484375,
        "y": 196.6666717529297,
        "wires": [
            [
                "c19ac6e7.9aeaf8"
            ]
        ]
    },
    {
        "id": "343c7ae9.c921c6",
        "type": "merge",
        "z": "4b6a31ae.51e96",
        "name": "",
        "timeout": "1",
        "x": 925,
        "y": 198,
        "wires": [
            []
        ]
    },
    {
        "id": "fb59797d.1ff768",
        "type": "unsafe-function",
        "z": "d8633d34.059f2",
        "name": "AML_Translation",
        "func": "msg.actionName = msg.payload._Attribs.ID;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 777.1428833007812,
        "y": 279.047607421875,
        "wires": [
            []
        ]
    },
    {
        "id": "509b9a91.e6f574",
        "type": "delflow",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "enabled": true,
        "x": 1120,
        "y": 220,
        "wires": [
            [
                "7c295142.669c6"
            ]
        ]
    },
    {
        "id": "d5cf465.083bfb8",
        "type": "unsafe-function",
        "z": "88bdbfa9.b5c8d",
        "name": "ListLoadedDrivers",
        "func": "var driversIds = context.global.get('Drivers');\nvar outputMsgs = [];\nfor(var element in driversIds){\n    outputMsgs.push({id:driversIds[element]});\n}\nif(outputMsgs.length > 0){\n    return [outputMsgs, null];   \n} else {\n    return [null, msg];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 480.3333740234375,
        "y": 303.46429443359375,
        "wires": [
            [
                "d4155fc6.2b467"
            ],
            [
                "412627f1.5db028"
            ]
        ]
    },
    {
        "id": "d05b5f1b.67e2b",
        "type": "config",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "properties": [
            {
                "p": "Drivers",
                "pt": "global",
                "to": "[]",
                "tot": "json"
            }
        ],
        "active": false,
        "x": 1710,
        "y": 140,
        "wires": []
    },
    {
        "id": "69324f69.01e2f",
        "type": "wait-paths",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "paths": "[\"path_2\",\"path_1\"]",
        "timeout": 15000,
        "finalTimeout": 60000,
        "x": 1525,
        "y": 326,
        "wires": [
            []
        ]
    },
    {
        "id": "412627f1.5db028",
        "type": "change",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "paths[\"path_1\"]",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "pathsCorrelationId",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1256,
        "y": 318,
        "wires": [
            [
                "69324f69.01e2f"
            ]
        ]
    },
    {
        "id": "80d73952.05b468",
        "type": "change",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "paths[\"path_2\"]",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "pathsCorrelationId",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1254,
        "y": 380,
        "wires": [
            [
                "69324f69.01e2f"
            ]
        ]
    },
    {
        "id": "22568f10.a8c3f",
        "type": "unsafe-function",
        "z": "88bdbfa9.b5c8d",
        "name": "checkEverythingDeleted",
        "func": "var driversIds = context.global.get('Drivers');\nif(driversIds.length == msg.count){\n    return msg;\n}\nelse{\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1475.4521484375,
        "y": 150.4381103515625,
        "wires": [
            [
                "d05b5f1b.67e2b",
                "412627f1.5db028"
            ]
        ]
    },
    {
        "id": "d4155fc6.2b467",
        "type": "getflows",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "x": 660,
        "y": 140,
        "wires": [
            [
                "330fdcf8.4bd194"
            ]
        ]
    },
    {
        "id": "330fdcf8.4bd194",
        "type": "switch",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "property": "err",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 140,
        "wires": [
            [
                "7c295142.669c6"
            ],
            [
                "91a7026.b9795"
            ]
        ]
    },
    {
        "id": "91a7026.b9795",
        "type": "unsafe-function",
        "z": "88bdbfa9.b5c8d",
        "name": "getFlowId",
        "func": "var outMsg = {};\noutMsg.flowId = msg.payload.id;\nreturn outMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 220,
        "wires": [
            [
                "509b9a91.e6f574"
            ]
        ]
    },
    {
        "id": "7c295142.669c6",
        "type": "counter",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "init": "0",
        "step": "1",
        "lower": null,
        "upper": null,
        "mode": "increment",
        "outputs": "1",
        "x": 1260,
        "y": 140,
        "wires": [
            [
                "22568f10.a8c3f"
            ]
        ]
    },
    {
        "id": "b9e017bad3605631",
        "type": "switch",
        "z": "c9cc6403f63368af",
        "name": "topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "observe",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "unobserve",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 710,
        "y": 500,
        "wires": [
            [
                "970956a062dc7e6c",
                "a54245b1cbd7f9fd"
            ],
            [
                "b7dfbd9603846da9",
                "9645aa040221dba5"
            ]
        ]
    },
    {
        "id": "970956a062dc7e6c",
        "type": "unsafe-function",
        "z": "c9cc6403f63368af",
        "name": "PrepareOutput",
        "func": "var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n\n// Create an Observation Event Object ------------------------------------\nvar observation = {};\nobservation.id = uuid;\nobservation.source = msg.source;\nobservation.direction = \"Output\";\nobservation.observableReference = msg.req.params.aasid + \"/\" + msg.req.params.submodelId + \"/\" + msg.req.params.id;\nif(context.flow.get(\"timestamp\")){\n    observation.timestamp = context.flow.get(\"timestamp\");\n} else{\n    observation.timestamp = new Date().getTime();\n}\nobservation.payload = \"Data Flow Created\";\n//observation.href = msg.href;\n// END Create an Observation Object --------------------------------\n//outputMsgs.push(observation);\ncontext.flow.set('ObsObj', observation);\n//msg.payload = outputMsgs;\n//msg.payload = JSON.stringify(observation);\n//msg.test = JSON.parse(msg.payload);\nmsg.payload = observation;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1175,
        "y": 500,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "a54245b1cbd7f9fd",
        "type": "unsafe-function",
        "z": "c9cc6403f63368af",
        "name": "",
        "func": "msg.topic = \"control\";\nmsg.payload = \"open\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1175,
        "y": 540,
        "wires": [
            [
                "d4d96ed88f6371ed"
            ]
        ],
        "l": false
    },
    {
        "id": "d4d96ed88f6371ed",
        "type": "gate",
        "z": "c9cc6403f63368af",
        "name": "",
        "controlTopic": "control",
        "defaultState": "closed",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "persist": false,
        "x": 1490,
        "y": 800,
        "wires": [
            [
                "4e95babbec5b3a72"
            ]
        ]
    },
    {
        "id": "4e95babbec5b3a72",
        "type": "unsafe-function",
        "z": "c9cc6403f63368af",
        "name": "",
        "func": "var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\nvar outMsg = {};\nvar ObsObj = context.flow.get('ObsObj');\nObsObj.id = uuid;\nvar timestamp = context.flow.get(\"$parent.timestamp\");\nObsObj.timestamp = timestamp;\nObsObj.payload = context.flow.get(\"variable\");\noutMsg.payload = ObsObj;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1635,
        "y": 800,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "b7dfbd9603846da9",
        "type": "unsafe-function",
        "z": "c9cc6403f63368af",
        "name": "",
        "func": "msg.topic = \"control\";\nmsg.payload = \"close\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1175,
        "y": 660,
        "wires": [
            [
                "d4d96ed88f6371ed"
            ]
        ],
        "l": false
    },
    {
        "id": "9645aa040221dba5",
        "type": "unsafe-function",
        "z": "c9cc6403f63368af",
        "name": "PrepareOutput",
        "func": "var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n\n// Create an Observation Event Object ------------------------------------\nvar observation = {};\nobservation.id = uuid;\nobservation.source = msg.source;\nobservation.direction = \"Output\";\nobservation.observableReference = msg.req.params.aasid + \"/\" + msg.req.params.submodelId + \"/\" + msg.req.params.id;\nif(context.flow.get(\"timestamp\")){\n    observation.timestamp = context.flow.get(\"timestamp\");\n} else{\n    observation.timestamp = new Date().getTime();\n}\nobservation.payload = \"Data Flow removed\";\n//observation.href = msg.href;\n// END Create an Observation Object --------------------------------\n//outputMsgs.push(observation);\n\n//msg.payload = outputMsgs;\n//msg.payload = JSON.stringify(observation);\n//msg.test = JSON.parse(msg.payload);\ncontext.flow.set(\"ObsObj\", \"\");\nmsg.payload = observation;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1175,
        "y": 600,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "04188a7b4d04c25a",
        "type": "unsafe-function",
        "z": "c9cc6403f63368af",
        "name": "",
        "func": "var propertyName = env.get(\"PropertyName\");\nvar Outmsg = {};\nOutmsg.topic = msg.topic;\nvar variable = context.flow.get(\"$parent.\" + propertyName);\ncontext.flow.set(\"variable\", variable);\n\nOutmsg.payload = variable;\nreturn Outmsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 875,
        "y": 800,
        "wires": [
            [
                "d4d96ed88f6371ed",
                "1cf60967c21ed590"
            ]
        ],
        "l": false
    },
    {
        "id": "1cf60967c21ed590",
        "type": "unsafe-function",
        "z": "c9cc6403f63368af",
        "name": "responseTime",
        "func": "var outMsg= {};\noutMsg.topic = \"put\";\noutMsg.payload = {\n    link: env.get(\"PropertyLink\"),\n    tstamp: context.flow.get(\"$parent.timestamp\"),\n    data: context.flow.get(\"variable\")\n};\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1075,
        "y": 860,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "1103a7d5c23b2b75",
        "type": "switch",
        "z": "c9cc6403f63368af",
        "name": "propertyLink",
        "property": "PropertyLink",
        "propertyType": "env",
        "rules": [
            {
                "t": "eq",
                "v": "link",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 570,
        "y": 500,
        "wires": [
            [
                "b9e017bad3605631"
            ]
        ]
    },
    {
        "id": "c9bb75bb18c3b9a7",
        "type": "switch",
        "z": "c9cc6403f63368af",
        "name": "scheduler",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sbi scheduling data routing",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 620,
        "y": 560,
        "wires": [
            [
                "04188a7b4d04c25a"
            ]
        ]
    },
    {
        "id": "8dd7e27f.bc284",
        "type": "comment",
        "z": "c7caf96e.a31f98",
        "name": "External Interface - Manifest - Configuration",
        "info": "",
        "x": 190,
        "y": 40,
        "wires": []
    },
    {
        "id": "23801d7a.c17572",
        "type": "comment",
        "z": "c7caf96e.a31f98",
        "g": "16640da3.5a20ca",
        "name": "External Interface - Health Check",
        "info": "",
        "x": 270,
        "y": 4600,
        "wires": []
    },
    {
        "id": "4768d29a.aacc4c",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "16640da3.5a20ca",
        "name": "",
        "url": "/aasServer/health",
        "method": "get",
        "upload": false,
        "swaggerDoc": "d61f3cdd.7e8e5",
        "x": 270,
        "y": 4660,
        "wires": [
            [
                "17d166e7.5b6559"
            ]
        ]
    },
    {
        "id": "17d166e7.5b6559",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "16640da3.5a20ca",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 540,
        "y": 4660,
        "wires": [
            [
                "98293416.fa8198"
            ]
        ]
    },
    {
        "id": "ebf8a1.a3dd076",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "16640da3.5a20ca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1970,
        "y": 4660,
        "wires": []
    },
    {
        "id": "f6f1e3c3.9ffa5",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "16640da3.5a20ca",
        "name": "",
        "env": [],
        "x": 1950,
        "y": 4700,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "98293416.fa8198",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "16640da3.5a20ca",
        "name": "6_Out",
        "mode": "link",
        "links": [
            "4453c69c3cb0f56a"
        ],
        "x": 995,
        "y": 4660,
        "wires": []
    },
    {
        "id": "43be3c31.fa03f4",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "16640da3.5a20ca",
        "name": "6_In",
        "links": [
            "e82c6228add581f9"
        ],
        "x": 1415,
        "y": 4660,
        "wires": [
            [
                "ebf8a1.a3dd076",
                "f6f1e3c3.9ffa5"
            ]
        ]
    },
    {
        "id": "f110f3ac.6b72e",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 590,
        "y": 820,
        "wires": [
            [
                "21db2b14.d6f9f4"
            ]
        ]
    },
    {
        "id": "a8092517.76dd38",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1900,
        "y": 820,
        "wires": []
    },
    {
        "id": "21db2b14.d6f9f4",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "1_Out",
        "mode": "link",
        "links": [
            "7f1f7cd7d51219f2"
        ],
        "x": 925,
        "y": 820,
        "wires": []
    },
    {
        "id": "31a80cba.e64364",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "1_In",
        "links": [
            "b4174f6d119b818d"
        ],
        "x": 1345,
        "y": 820,
        "wires": [
            [
                "a8092517.76dd38",
                "d548adc1.abff8"
            ]
        ]
    },
    {
        "id": "d548adc1.abff8",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "env": [],
        "x": 1880,
        "y": 860,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "3a568a54.3c63e6",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "url": "/aasServer/conf/importDriver",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 1360,
        "wires": [
            [
                "ed7feffb.fdc4d8"
            ]
        ]
    },
    {
        "id": "b102af28.a0df28",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 770,
        "y": 1360,
        "wires": []
    },
    {
        "id": "c0822d7.a2222d",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 750,
        "y": 1400,
        "wires": []
    },
    {
        "id": "ed7feffb.fdc4d8",
        "type": "template",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n    <head>\n        <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\" integrity=\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\" crossorigin=\"anonymous\">\n        <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\" integrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\" crossorigin=\"anonymous\"></script>\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\" integrity=\"sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy\" crossorigin=\"anonymous\"></script>\n    </head>\n    <div>\n        <form action=\"/aas/conf/addDriver\" method=\"POST\" enctype=\"multipart/form-data\">\n        \t<!-- COMPONENT START -->\n        \t<div class=\"form-group\">\n        \t\t<div class=\"input-group input-file\" name=\"driver\">\n            \t\t<input type=\"text\" class=\"form-control\" placeholder='Choose a file...' />\t\t\t\n                    <span class=\"input-group-btn\">\n                \t\t<button class=\"btn btn-default btn-choose\" type=\"button\">Choose</button>\n            \t\t</span>\n        \n        \n        \t\t</div>\n        \t</div>\n        \t<!-- COMPONENT END -->\n        \t<div class=\"form-group\">\n        \t\t<button type=\"submit\" class=\"btn btn-primary pull-right\">Submit</button>\n        \t\t<button type=\"reset\" class=\"btn btn-danger\">Reset</button>\n        \t</div>\n        </form>\n    </div>\n    <script>\n        function bs_input_file() {\n\t$(\".input-file\").before(\n\t\tfunction() {\n\t\t\tif ( ! $(this).prev().hasClass('input-ghost') ) {\n\t\t\t\tvar element = $(\"<input type='file' class='input-ghost' style='visibility:hidden; height:0'>\");\n\t\t\t\telement.attr(\"name\",$(this).attr(\"name\"));\n\t\t\t\telement.change(function(){\n\t\t\t\t\telement.next(element).find('input').val((element.val()).split('\\\\').pop());\n\t\t\t\t});\n\t\t\t\t$(this).find(\"button.btn-choose\").click(function(){\n\t\t\t\t\telement.click();\n\t\t\t\t});\n\t\t\t\t$(this).find(\"button.btn-reset\").click(function(){\n\t\t\t\t\telement.val(null);\n\t\t\t\t\t$(this).parents(\".input-file\").find('input').val('');\n\t\t\t\t});\n\t\t\t\t$(this).find('input').css(\"cursor\",\"pointer\");\n\t\t\t\t$(this).find('input').mousedown(function() {\n\t\t\t\t\t$(this).parents('.input-file').prev().click();\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t\treturn element;\n\t\t\t}\n\t\t}\n\t);\n}\n$(function() {\n\tbs_input_file();\n});\n    </script>\n</html>",
        "output": "str",
        "x": 610,
        "y": 1360,
        "wires": [
            [
                "b102af28.a0df28",
                "c0822d7.a2222d"
            ]
        ]
    },
    {
        "id": "fff82399.2f49b",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "1_1_In",
        "links": [
            "0ffc05dbfcc577c8"
        ],
        "x": 1815,
        "y": 1051,
        "wires": [
            [
                "82289ad6.a600d8",
                "ad85b295.7069f"
            ]
        ]
    },
    {
        "id": "82289ad6.a600d8",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2370,
        "y": 1051,
        "wires": []
    },
    {
        "id": "ad85b295.7069f",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "env": [],
        "x": 2350,
        "y": 1091,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "3a6700df.867d18",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 570,
        "y": 860,
        "wires": []
    },
    {
        "id": "f639dee1.4897a8",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 590,
        "y": 1220,
        "wires": [
            [
                "bac08a3b276490f0"
            ]
        ]
    },
    {
        "id": "e67e2ede.e4bdc8",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "1_2_Out",
        "mode": "link",
        "links": [
            "838ecef7315c2b72"
        ],
        "x": 1615,
        "y": 1271,
        "wires": []
    },
    {
        "id": "1a319556.d2c653",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "1_2_In",
        "links": [
            "0a2c564d4b239ae5"
        ],
        "x": 1815,
        "y": 1271,
        "wires": [
            [
                "81ab9e51.5c03b",
                "bbb6509c.913df8"
            ]
        ]
    },
    {
        "id": "81ab9e51.5c03b",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2370,
        "y": 1271,
        "wires": []
    },
    {
        "id": "bbb6509c.913df8",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "env": [],
        "x": 2350,
        "y": 1311,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "a0836dff.f2858",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1750,
        "y": 960,
        "wires": []
    },
    {
        "id": "4dc39fd1.c8f7c8",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 932,
        "wires": []
    },
    {
        "id": "4bdb43ab.883d8c",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "url": "/aasServer/auth/login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 552,
        "wires": [
            [
                "6f011ca1.98e9f4",
                "d1229e16.7c61f"
            ]
        ]
    },
    {
        "id": "7abd742a.218ba4",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1740,
        "y": 552,
        "wires": []
    },
    {
        "id": "4933497f.445138",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 512,
        "wires": []
    },
    {
        "id": "3ddccadd.035a56",
        "type": "http request",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://keycloak:8080/auth/realms/industry40_edge/protocol/openid-connect/token",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 840,
        "y": 552,
        "wires": [
            [
                "4933497f.445138",
                "fb74d752.dfd208"
            ]
        ]
    },
    {
        "id": "6f011ca1.98e9f4",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "Extract session parameters for login",
        "func": "msg.headers = {};\nmsg.headers[\"content-type\"] = \"application/x-www-form-urlencoded\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 552,
        "wires": [
            [
                "3ddccadd.035a56"
            ]
        ]
    },
    {
        "id": "fb74d752.dfd208",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1140,
        "y": 552,
        "wires": [
            [
                "d01f5c12.c02e08"
            ],
            [
                "d01f5c12.c02e08"
            ],
            [
                "5b2bd8f6.6d0e8"
            ]
        ]
    },
    {
        "id": "5b2bd8f6.6d0e8",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "process message statusCode 200",
        "func": "var outMsg = {};\noutMsg.access_token = msg.payload.access_token;\noutMsg.refresh_token = msg.payload.refresh_token;\nmsg.payload = outMsg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1430,
        "y": 572,
        "wires": [
            [
                "7abd742a.218ba4",
                "cac23a83.5575f8"
            ]
        ]
    },
    {
        "id": "d01f5c12.c02e08",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "process message statusCode 401",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1430,
        "y": 532,
        "wires": [
            [
                "7abd742a.218ba4"
            ]
        ]
    },
    {
        "id": "662a834.17435fc",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "url": "/aasServer/conf/updateScheduling",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 330,
        "y": 1220,
        "wires": [
            [
                "f639dee1.4897a8"
            ]
        ]
    },
    {
        "id": "78eea0af.f4d448",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1670,
        "y": 912,
        "wires": []
    },
    {
        "id": "82a9de6d.515358",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1410,
        "y": 951,
        "wires": [
            [
                "a0836dff.f2858",
                "78eea0af.f4d448"
            ]
        ]
    },
    {
        "id": "a1236aec.ff3a7",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 590,
        "y": 1000,
        "wires": [
            [
                "75f77efb0a5a8a91"
            ]
        ]
    },
    {
        "id": "636cba04.314864",
        "type": "httpInMultipart",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "url": "/aasServer/conf/addDriver",
        "method": "post",
        "fields": "[{\"name\": \"driver\"}]",
        "swaggerDoc": "",
        "x": 310,
        "y": 1000,
        "wires": [
            [
                "a1236aec.ff3a7"
            ]
        ]
    },
    {
        "id": "ac0847a4.fe5c1",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "1_1_Out",
        "mode": "link",
        "links": [
            "186f1523dd64d1f4"
        ],
        "x": 1615,
        "y": 1051,
        "wires": []
    },
    {
        "id": "f841ff35.b800c",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1750,
        "y": 1200,
        "wires": []
    },
    {
        "id": "39e95fc6.a1f0d",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 1152,
        "wires": []
    },
    {
        "id": "ea90329f.9037a",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1682.0833740234375,
        "y": 1113.0833129882812,
        "wires": []
    },
    {
        "id": "b6b487a5.93e0b",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1410,
        "y": 1171,
        "wires": [
            [
                "f841ff35.b800c",
                "ea90329f.9037a"
            ]
        ]
    },
    {
        "id": "fdba694e.cf01d",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 1760,
        "wires": []
    },
    {
        "id": "235c6137.8eecfe",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2310,
        "y": 2100,
        "wires": []
    },
    {
        "id": "7f25771a.9570b8",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2310,
        "y": 1600,
        "wires": []
    },
    {
        "id": "87e27c61.d45d5",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2310,
        "y": 1760,
        "wires": []
    },
    {
        "id": "2591dc6f.beecf4",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "env": [],
        "x": 2290,
        "y": 1640,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "62354c3.8a2cab4",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "x": 2290,
        "y": 1800,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "cbc42023.5d017",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "env": [],
        "x": 2290,
        "y": 2140,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "c4626f7b.fb5ac",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "3_In",
        "links": [
            "4afb1a25b07cb8e6"
        ],
        "x": 1755,
        "y": 1600,
        "wires": [
            [
                "7f25771a.9570b8",
                "2591dc6f.beecf4"
            ]
        ]
    },
    {
        "id": "8ddc3a56.0b1778",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "4_In",
        "links": [
            "9214f25b766f1160"
        ],
        "x": 1755,
        "y": 1760,
        "wires": [
            [
                "87e27c61.d45d5",
                "62354c3.8a2cab4"
            ]
        ]
    },
    {
        "id": "bc9740dc.6a656",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "5_In",
        "links": [
            "48dd0f77410601a7"
        ],
        "x": 1755,
        "y": 2100,
        "wires": [
            [
                "235c6137.8eecfe",
                "cbc42023.5d017"
            ]
        ]
    },
    {
        "id": "e2c6dfcd.e05b7",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "19_In",
        "links": [
            "5233c155331803fc"
        ],
        "x": 1735,
        "y": 1900,
        "wires": [
            [
                "bb4de309.e48c",
                "2554c114.74adde"
            ]
        ]
    },
    {
        "id": "2554c114.74adde",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "x": 2290,
        "y": 1940,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "bb4de309.e48c",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2310,
        "y": 1900,
        "wires": []
    },
    {
        "id": "d0bce444.7eb068",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "20_Out",
        "mode": "link",
        "links": [
            "5ef0045d948e2369"
        ],
        "x": 1515,
        "y": 2260,
        "wires": []
    },
    {
        "id": "eb085e57.c9db48",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "20_In",
        "links": [
            "eb26aa73861332b3"
        ],
        "x": 1735,
        "y": 2260,
        "wires": [
            [
                "437c7c89.d0b51c",
                "59776b4d.36b314"
            ]
        ]
    },
    {
        "id": "59776b4d.36b314",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "env": [],
        "x": 2290,
        "y": 2300,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "437c7c89.d0b51c",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2310,
        "y": 2260,
        "wires": []
    },
    {
        "id": "6e1fa46d.2719e4",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 530,
        "y": 1540,
        "wires": [
            [
                "c821c9288e370ff1"
            ]
        ]
    },
    {
        "id": "d5aae024.460208",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1290,
        "y": 1500,
        "wires": [
            [
                "366f54c4.ff9614"
            ]
        ]
    },
    {
        "id": "366f54c4.ff9614",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1550,
        "y": 1520,
        "wires": []
    },
    {
        "id": "6871882e.816d4",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "3_Out",
        "mode": "link",
        "links": [
            "0bfec8a08f4fdce7"
        ],
        "x": 1515,
        "y": 1600,
        "wires": []
    },
    {
        "id": "1af69126.217847",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "url": "aasServer/env/persist",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 1540,
        "wires": [
            [
                "6e1fa46d.2719e4"
            ]
        ]
    },
    {
        "id": "fced9d3f.eb0ca8",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "4_Out",
        "mode": "link",
        "links": [
            "c6f4185e611fdfc9"
        ],
        "x": 1515,
        "y": 1760,
        "wires": []
    },
    {
        "id": "45f9264.ffe21d8",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "process message statusCode 401/403",
        "func": "//msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1270,
        "y": 1700,
        "wires": [
            [
                "1ba0d77.6417ba9"
            ]
        ]
    },
    {
        "id": "1ba0d77.6417ba9",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1550,
        "y": 1720,
        "wires": []
    },
    {
        "id": "f2d59542.56fda",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 930,
        "y": 1700,
        "wires": [
            [
                "45f9264.ffe21d8"
            ],
            [
                "45f9264.ffe21d8"
            ],
            [
                "a1d646017f83c2c9"
            ]
        ]
    },
    {
        "id": "52d7e674.d4fa4",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 530,
        "y": 1700,
        "wires": [
            [
                "f8c1215f7496dbdd"
            ]
        ]
    },
    {
        "id": "dfbb29ed.486b38",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "url": "aasServer/env",
        "method": "get",
        "upload": false,
        "swaggerDoc": "e14ea6e9.388bf",
        "x": 250,
        "y": 1700,
        "wires": [
            [
                "52d7e674.d4fa4"
            ]
        ]
    },
    {
        "id": "28a0f7b.c53a608",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "url": "aasServer/shells",
        "method": "get",
        "upload": false,
        "swaggerDoc": "243cd5cc.02619a",
        "x": 260,
        "y": 1840,
        "wires": [
            [
                "f9901c42.d0c808"
            ]
        ]
    },
    {
        "id": "bc91a45b.ea963",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "19_Out",
        "mode": "link",
        "links": [
            "a5ed1db8d0106c4c"
        ],
        "x": 1515,
        "y": 1900,
        "wires": []
    },
    {
        "id": "f9901c42.d0c808",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 530,
        "y": 1840,
        "wires": [
            [
                "f2a32ab868332932"
            ]
        ]
    },
    {
        "id": "9b78a20.335f76",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1270,
        "y": 1840,
        "wires": [
            [
                "12a7495a.d95eef"
            ]
        ]
    },
    {
        "id": "12a7495a.d95eef",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1550,
        "y": 1860,
        "wires": []
    },
    {
        "id": "a3911acd.fe266",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/asset-information",
        "method": "get",
        "upload": false,
        "swaggerDoc": "f4862300.a8e8f",
        "x": 350,
        "y": 2040,
        "wires": [
            [
                "58da8c41.b4c39c"
            ]
        ]
    },
    {
        "id": "58da8c41.b4c39c",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 650,
        "y": 2040,
        "wires": [
            [
                "c390b600bba3634e"
            ]
        ]
    },
    {
        "id": "dae739c1.4c586",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1270,
        "y": 2040,
        "wires": [
            [
                "a750bb3b.e7537"
            ]
        ]
    },
    {
        "id": "a750bb3b.e7537",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1530,
        "y": 2060,
        "wires": []
    },
    {
        "id": "f7ea5270.5b57e",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "5_Out",
        "mode": "link",
        "links": [
            "481df700406161f4"
        ],
        "x": 1515,
        "y": 2100,
        "wires": []
    },
    {
        "id": "4f7412ad.7e1b64",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "url": "/aasServer/shells/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "3cb4416b.714dee",
        "x": 270,
        "y": 2200,
        "wires": [
            [
                "24535731.1df27"
            ]
        ]
    },
    {
        "id": "912eda47.361a98",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2270,
        "y": 2520,
        "wires": []
    },
    {
        "id": "9084f719.6afdf8",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2270,
        "y": 2760,
        "wires": []
    },
    {
        "id": "2520a136.899d6e",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2270,
        "y": 2880,
        "wires": []
    },
    {
        "id": "ca6f3523.f2b588",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2270,
        "y": 3000,
        "wires": []
    },
    {
        "id": "5651a9f8.d2bc98",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "env": [],
        "x": 2250,
        "y": 2560,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "1dbfef26.97a6f1",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "x": 2253,
        "y": 2807,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "bd2ae1ed.cbdaa",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "x": 2250,
        "y": 2920,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "890fd853.abfe18",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "x": 2250,
        "y": 3040,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "9f7abd5a.96875",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "7_In",
        "links": [
            "9a4e060dfca965ef"
        ],
        "x": 1735,
        "y": 2520,
        "wires": [
            [
                "912eda47.361a98",
                "5651a9f8.d2bc98"
            ]
        ]
    },
    {
        "id": "54372dd7.ec8b74",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "8_In",
        "links": [
            "d4bf39cbde4f66a7"
        ],
        "x": 1735,
        "y": 2760,
        "wires": [
            [
                "9084f719.6afdf8",
                "1dbfef26.97a6f1"
            ]
        ]
    },
    {
        "id": "cb3ea6e9.72b438",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "9_Out",
        "mode": "link",
        "links": [
            "dfc2457d14734dba"
        ],
        "x": 1535,
        "y": 2880,
        "wires": []
    },
    {
        "id": "87522ab0.ac1188",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "9_In",
        "links": [
            "87583a6df882d994"
        ],
        "x": 1735,
        "y": 2880,
        "wires": [
            [
                "2520a136.899d6e",
                "bd2ae1ed.cbdaa"
            ]
        ]
    },
    {
        "id": "8c4835ae.20d5b8",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "10_Out",
        "mode": "link",
        "links": [
            "dd78947c10d185c9"
        ],
        "x": 1535,
        "y": 3000,
        "wires": []
    },
    {
        "id": "345e490a.d99a46",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "10_In",
        "links": [
            "587be79558e3e030"
        ],
        "x": 1735,
        "y": 3000,
        "wires": [
            [
                "ca6f3523.f2b588",
                "890fd853.abfe18"
            ]
        ]
    },
    {
        "id": "a0cacb3.3af7d38",
        "type": "comment",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "External Interface - Data - Operations on Submodels",
        "info": "",
        "x": 363,
        "y": 2417,
        "wires": []
    },
    {
        "id": "a4eb92d0.81718",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "21_In",
        "links": [
            "af50fbee467b2142"
        ],
        "x": 1735,
        "y": 2640,
        "wires": [
            [
                "4599d634.2aa528",
                "228c3050.5c01b8"
            ]
        ]
    },
    {
        "id": "228c3050.5c01b8",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "env": [],
        "x": 2270,
        "y": 2680,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "4599d634.2aa528",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2270,
        "y": 2640,
        "wires": []
    },
    {
        "id": "5fa33903.676088",
        "type": "comment",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "External Interface - Data - Operations on Properties",
        "info": "",
        "x": 370,
        "y": 3140,
        "wires": []
    },
    {
        "id": "bac747df.172a08",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:submodelId/submodel/submodel-elements/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 520,
        "y": 3220,
        "wires": [
            [
                "73b0d61c.3c5ca8"
            ]
        ]
    },
    {
        "id": "9a24dda.82e0e2",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2290,
        "y": 3260,
        "wires": []
    },
    {
        "id": "9719e687.c005e8",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:submodelId/submodel/submodel-elements/:id",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 520,
        "y": 3340,
        "wires": [
            [
                "876d418.03db2c"
            ]
        ]
    },
    {
        "id": "8b05bd82.8d5c3",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2290,
        "y": 3380,
        "wires": []
    },
    {
        "id": "a33c8835.b4ae48",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:submodelId/submodel/submodel-elements/:id",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 510,
        "y": 3580,
        "wires": [
            [
                "9cbf611c.48b76"
            ]
        ]
    },
    {
        "id": "f6804404.570008",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2290,
        "y": 3620,
        "wires": []
    },
    {
        "id": "e0482beb.0de658",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "x": 2260,
        "y": 3300,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "f2fbc8fb.44c608",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "env": [],
        "x": 2260,
        "y": 3420,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "8a1eeeb2.31c1c",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "x": 2260,
        "y": 3660,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "f42c942d.6d6448",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "12_Out",
        "mode": "link",
        "links": [
            "49fdf2b46ec75338"
        ],
        "x": 1695,
        "y": 3260,
        "wires": []
    },
    {
        "id": "4a5f46fc.ea7c08",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "12_In",
        "links": [
            "c09468690038b481"
        ],
        "x": 1875,
        "y": 3260,
        "wires": [
            [
                "9a24dda.82e0e2",
                "e0482beb.0de658"
            ]
        ]
    },
    {
        "id": "6e7f5025.a4315",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "13_In",
        "links": [
            "cea3973997ec6b07"
        ],
        "x": 1875,
        "y": 3380,
        "wires": [
            [
                "8b05bd82.8d5c3",
                "f2fbc8fb.44c608"
            ]
        ]
    },
    {
        "id": "bc2fff91.b20fd",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "13_Out",
        "mode": "link",
        "links": [
            "bc3403fe8115720d"
        ],
        "x": 1695,
        "y": 3380,
        "wires": []
    },
    {
        "id": "53f11e8b.9b099",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "14_In",
        "links": [
            "af95caf412605a5d"
        ],
        "x": 1875,
        "y": 3620,
        "wires": [
            [
                "f6804404.570008",
                "8a1eeeb2.31c1c"
            ]
        ]
    },
    {
        "id": "9cae29d0.c4e968",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "14_Out",
        "mode": "link",
        "links": [
            "35f564a951c41d1e"
        ],
        "x": 1695,
        "y": 3620,
        "wires": []
    },
    {
        "id": "24535731.1df27",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 510,
        "y": 2200,
        "wires": [
            [
                "2c1e73b4e00e1fb7"
            ]
        ]
    },
    {
        "id": "f7b3bd79.a6fae8",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "process message statusCode 403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 2200,
        "wires": [
            [
                "37e8727d.28d00e"
            ]
        ]
    },
    {
        "id": "37e8727d.28d00e",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1550,
        "y": 2200,
        "wires": []
    },
    {
        "id": "b0306546.0474c",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 930,
        "y": 1540,
        "wires": [
            [
                "d5aae024.460208"
            ],
            [
                "d5aae024.460208"
            ],
            [
                "e8feba76b3a1c08d"
            ]
        ]
    },
    {
        "id": "ede7821.687b6",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1030,
        "y": 1220,
        "wires": [
            [
                "b6b487a5.93e0b"
            ],
            [
                "b6b487a5.93e0b"
            ],
            [
                "b771b80cfe4f4c80"
            ]
        ]
    },
    {
        "id": "25b28035.68b498",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1030,
        "y": 991,
        "wires": [
            [
                "82a9de6d.515358"
            ],
            [
                "82a9de6d.515358"
            ],
            [
                "9bc3f1302ee2eae3"
            ]
        ]
    },
    {
        "id": "c4394893.5e225",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 910,
        "y": 1840,
        "wires": [
            [
                "9b78a20.335f76"
            ],
            [
                "9b78a20.335f76"
            ],
            [
                "f8dd59bec9cdfd92"
            ]
        ]
    },
    {
        "id": "231ffe47.64b5b2",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 990,
        "y": 2040,
        "wires": [
            [
                "dae739c1.4c586"
            ],
            [
                "dae739c1.4c586"
            ],
            [
                "2677134f22e0b307"
            ]
        ]
    },
    {
        "id": "5357901a.ebafe8",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 910,
        "y": 2200,
        "wires": [
            [
                "f7b3bd79.a6fae8"
            ],
            [
                "f7b3bd79.a6fae8"
            ],
            [
                "b14a35d40773fb6c"
            ]
        ]
    },
    {
        "id": "143b6801.91912",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 550,
        "y": 2480,
        "wires": [
            [
                "285cbaebcd186f72"
            ]
        ]
    },
    {
        "id": "dfab21d7.5cff3",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1290,
        "y": 2460,
        "wires": [
            [
                "d7af0dba.b14dd"
            ]
        ]
    },
    {
        "id": "d7af0dba.b14dd",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1570,
        "y": 2480,
        "wires": []
    },
    {
        "id": "360b9a7b.0d5576",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 950,
        "y": 2480,
        "wires": [
            [
                "dfab21d7.5cff3"
            ],
            [
                "dfab21d7.5cff3"
            ],
            [
                "b45ed924c417fa33"
            ]
        ]
    },
    {
        "id": "6b96478d.7a9f2",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "7_Out",
        "mode": "link",
        "links": [
            "1017e3ea53b0dc76"
        ],
        "x": 1535,
        "y": 2520,
        "wires": []
    },
    {
        "id": "700a3d1b.785ba4",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "url": "/aasServer/submodels",
        "method": "get",
        "upload": false,
        "swaggerDoc": "b62cd952.177cc8",
        "x": 320,
        "y": 2480,
        "wires": [
            [
                "143b6801.91912"
            ]
        ]
    },
    {
        "id": "47978f85.8891b",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 610,
        "y": 2600,
        "wires": [
            [
                "a4fde9ca0f51233e"
            ]
        ]
    },
    {
        "id": "fe5f7f4c.e7e97",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1290,
        "y": 2580,
        "wires": [
            [
                "2855d825.21951"
            ]
        ]
    },
    {
        "id": "2855d825.21951",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1570,
        "y": 2600,
        "wires": []
    },
    {
        "id": "fa4974dc.1fa648",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 950,
        "y": 2600,
        "wires": [
            [
                "fe5f7f4c.e7e97"
            ],
            [
                "fe5f7f4c.e7e97"
            ],
            [
                "8877b550e2c00515"
            ]
        ]
    },
    {
        "id": "8b0ca178.67fdf8",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "url": "/aasServer/shells/:id/aas/submodels",
        "method": "get",
        "upload": false,
        "swaggerDoc": "40e0e792.156ad8",
        "x": 360,
        "y": 2600,
        "wires": [
            [
                "47978f85.8891b"
            ]
        ]
    },
    {
        "id": "8c710513.6043a8",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "21_Out",
        "mode": "link",
        "links": [
            "723802bfbefba041"
        ],
        "x": 1535,
        "y": 2640,
        "wires": []
    },
    {
        "id": "2cfbd2d.53f5fae",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 670,
        "y": 2700,
        "wires": [
            [
                "4026dd07eb40b103"
            ]
        ]
    },
    {
        "id": "3096c3fb.0bf594",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1290,
        "y": 2680,
        "wires": [
            [
                "76230fd.d0045f"
            ]
        ]
    },
    {
        "id": "382b8aa3.3d21ce",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "822bf506.7ffad",
        "x": 380,
        "y": 2700,
        "wires": [
            [
                "2cfbd2d.53f5fae"
            ]
        ]
    },
    {
        "id": "3de094e.8246d6c",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1010,
        "y": 2700,
        "wires": [
            [
                "3096c3fb.0bf594"
            ],
            [
                "3096c3fb.0bf594"
            ],
            [
                "e93422875c7c917a"
            ]
        ]
    },
    {
        "id": "a17709b9.3e472",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "8_Out",
        "mode": "link",
        "links": [
            "cb03268a76da7983"
        ],
        "x": 1535,
        "y": 2760,
        "wires": []
    },
    {
        "id": "76230fd.d0045f",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1570,
        "y": 2700,
        "wires": []
    },
    {
        "id": "7634d591.ced0a4",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 650,
        "y": 2820,
        "wires": [
            [
                "db0a1878cfd3b36f"
            ]
        ]
    },
    {
        "id": "712f2a7f.2f2cc4",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1290,
        "y": 2800,
        "wires": [
            [
                "2ba34b7e.d39f0c"
            ]
        ]
    },
    {
        "id": "80ddd535.92f168",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1010,
        "y": 2820,
        "wires": [
            [
                "712f2a7f.2f2cc4"
            ],
            [
                "712f2a7f.2f2cc4"
            ],
            [
                "7912b6b8665075c8"
            ]
        ]
    },
    {
        "id": "2ba34b7e.d39f0c",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1570,
        "y": 2820,
        "wires": []
    },
    {
        "id": "2205d4d4.72806c",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:id",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 380,
        "y": 2820,
        "wires": [
            [
                "7634d591.ced0a4"
            ]
        ]
    },
    {
        "id": "a165d74f.1c5bb",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 690,
        "y": 2940,
        "wires": [
            [
                "5e28d3d6e7fcee4b"
            ]
        ]
    },
    {
        "id": "f2597aa.1d7ae88",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1290,
        "y": 2920,
        "wires": [
            [
                "de785470.82c5b"
            ]
        ]
    },
    {
        "id": "4d1c9a11.497c04",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1010,
        "y": 2940,
        "wires": [
            [
                "f2597aa.1d7ae88"
            ],
            [
                "f2597aa.1d7ae88"
            ],
            [
                "b5c61584b9a4d748"
            ]
        ]
    },
    {
        "id": "de785470.82c5b",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1570,
        "y": 2940,
        "wires": []
    },
    {
        "id": "3fe41c39.bcab0c",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:id",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 390,
        "y": 2940,
        "wires": [
            [
                "a165d74f.1c5bb"
            ]
        ]
    },
    {
        "id": "73b0d61c.3c5ca8",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 930,
        "y": 3220,
        "wires": [
            [
                "a1969e7feaeb046c"
            ]
        ]
    },
    {
        "id": "b3ea9713.385ab8",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1490,
        "y": 3200,
        "wires": [
            [
                "539e5110.1ef598"
            ]
        ]
    },
    {
        "id": "d0dcfd84.fa36a",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1250,
        "y": 3220,
        "wires": [
            [
                "b3ea9713.385ab8"
            ],
            [
                "b3ea9713.385ab8"
            ],
            [
                "932caae9eef96d41"
            ]
        ]
    },
    {
        "id": "539e5110.1ef598",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1730,
        "y": 3220,
        "wires": []
    },
    {
        "id": "876d418.03db2c",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 930,
        "y": 3340,
        "wires": [
            [
                "b51e21c2b025c41f"
            ]
        ]
    },
    {
        "id": "e1532702.4731d",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1490,
        "y": 3320,
        "wires": [
            [
                "cd71006d.5e021"
            ]
        ]
    },
    {
        "id": "98bc07c7.2b47c",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1250,
        "y": 3340,
        "wires": [
            [
                "e1532702.4731d"
            ],
            [
                "e1532702.4731d"
            ],
            [
                "81887e0a48fc148f"
            ]
        ]
    },
    {
        "id": "cd71006d.5e021",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1730,
        "y": 3340,
        "wires": []
    },
    {
        "id": "9cbf611c.48b76",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 934,
        "y": 3580,
        "wires": [
            [
                "6c7ffe936d1b3a82"
            ]
        ]
    },
    {
        "id": "50d5b873.cdac08",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1490,
        "y": 3557,
        "wires": [
            [
                "9359dad8.bb01a"
            ]
        ]
    },
    {
        "id": "98e3a79d.ae8a58",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1250,
        "y": 3577,
        "wires": [
            [
                "50d5b873.cdac08"
            ],
            [
                "50d5b873.cdac08"
            ],
            [
                "1b8ead8c39ba6430"
            ]
        ]
    },
    {
        "id": "9359dad8.bb01a",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1730,
        "y": 3580,
        "wires": []
    },
    {
        "id": "bb1e7103.624268",
        "type": "comment",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "For testing pourpose",
        "info": "",
        "x": 270,
        "y": 1300,
        "wires": []
    },
    {
        "id": "d1229e16.7c61f",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 512,
        "wires": []
    },
    {
        "id": "cac23a83.5575f8",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1730,
        "y": 612,
        "wires": []
    },
    {
        "id": "2c538540.95c5ea",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "url": "/aasServer/auth/logout",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 692,
        "wires": [
            [
                "4edace3a.811f88",
                "41cdd4d9.fde994"
            ]
        ]
    },
    {
        "id": "8c6a4250.9b69c",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1730,
        "y": 692,
        "wires": []
    },
    {
        "id": "82db2401.4b2e08",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 652,
        "wires": []
    },
    {
        "id": "ceabdccc.dcc448",
        "type": "http request",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://keycloak:8080/auth/realms/industry40_edge/protocol/openid-connect/logout",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 850,
        "y": 692,
        "wires": [
            [
                "82db2401.4b2e08",
                "8c6a4250.9b69c"
            ]
        ]
    },
    {
        "id": "4edace3a.811f88",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "Extract session parameters for logout",
        "func": "msg.headers = {};\nmsg.headers[\"content-type\"] = \"application/x-www-form-urlencoded\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 692,
        "wires": [
            [
                "ceabdccc.dcc448"
            ]
        ]
    },
    {
        "id": "41cdd4d9.fde994",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 652,
        "wires": []
    },
    {
        "id": "ba514096.0b1438",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "init_model_path_in",
        "links": [
            "a07a1981.3c9568",
            "ba66f0af3cde4057"
        ],
        "x": 215,
        "y": 812,
        "wires": [
            [
                "f110f3ac.6b72e",
                "3a6700df.867d18"
            ]
        ]
    },
    {
        "id": "ecbd2ba0.e8bf9",
        "type": "comment",
        "z": "c7caf96e.a31f98",
        "g": "9e0d0c62.913b48",
        "name": "External Interface - FileData - Request File",
        "info": "",
        "x": 300,
        "y": 4340,
        "wires": []
    },
    {
        "id": "fef82414.50e9f8",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "9e0d0c62.913b48",
        "name": "",
        "url": "/aasx/docu/:fn",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 250,
        "y": 4440,
        "wires": [
            [
                "165ed216.5f840e"
            ]
        ]
    },
    {
        "id": "421a980b.ffb09",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "9e0d0c62.913b48",
        "name": "18_Out",
        "mode": "link",
        "links": [
            "909e2111c3a9f268"
        ],
        "x": 1875,
        "y": 4396,
        "wires": []
    },
    {
        "id": "3b26bcb7.39cf3c",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "9e0d0c62.913b48",
        "name": "18_In",
        "links": [
            "39c425339983c56d"
        ],
        "x": 2195,
        "y": 4396,
        "wires": [
            [
                "6764e5e4.add904",
                "62d70b6d.e3b8ec"
            ]
        ]
    },
    {
        "id": "4de1edb.3e19014",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "9e0d0c62.913b48",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2550,
        "y": 4396,
        "wires": []
    },
    {
        "id": "6764e5e4.add904",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "9e0d0c62.913b48",
        "name": "",
        "env": [],
        "x": 2510,
        "y": 4456,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "165ed216.5f840e",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "9e0d0c62.913b48",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 450,
        "y": 4436,
        "wires": [
            [
                "577c5207.33743c"
            ]
        ]
    },
    {
        "id": "7f57e4a0.47375c",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "9e0d0c62.913b48",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1050,
        "y": 4440,
        "wires": [
            [
                "5e3479cb.dad398"
            ],
            [
                "5e3479cb.dad398"
            ],
            [
                "360dec5ddd2bd11b"
            ]
        ]
    },
    {
        "id": "5e3479cb.dad398",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "9e0d0c62.913b48",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 4376,
        "wires": [
            [
                "4e6a55e7.3950c4"
            ]
        ]
    },
    {
        "id": "4e6a55e7.3950c4",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "9e0d0c62.913b48",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1590,
        "y": 4376,
        "wires": []
    },
    {
        "id": "d8850bdc.71f698",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "9e0d0c62.913b48",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1450,
        "y": 4460,
        "wires": [
            [
                "4e6a55e7.3950c4"
            ],
            [
                "421a980b.ffb09"
            ]
        ]
    },
    {
        "id": "62d70b6d.e3b8ec",
        "type": "function",
        "z": "c7caf96e.a31f98",
        "g": "9e0d0c62.913b48",
        "name": "Attachment",
        "func": "msg.headers[\"Content-Disposition\"] = \"attachment;\" + \"filename=\" + msg.req.params.fn;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2330,
        "y": 4396,
        "wires": [
            [
                "4de1edb.3e19014"
            ]
        ]
    },
    {
        "id": "577c5207.33743c",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "9e0d0c62.913b48",
        "name": "",
        "property": "payload.Submit",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 4436,
        "wires": [
            [
                "305810cf.42f6c"
            ],
            [
                "eb276c3207ba11fa"
            ]
        ]
    },
    {
        "id": "305810cf.42f6c",
        "type": "function",
        "z": "c7caf96e.a31f98",
        "g": "9e0d0c62.913b48",
        "name": "",
        "func": "msg.req.rawHeaders.unshift(msg.payload.Submit);\nmsg.req.rawHeaders.unshift(\"authorization\");\nmsg.req.rawHeaders.unshift(msg.payload.Submit);\nmsg.req.headers = {};\nmsg.req.headers[\"authorization\"] = msg.payload.Submit;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 720,
        "y": 4376,
        "wires": [
            [
                "eb276c3207ba11fa"
            ]
        ]
    },
    {
        "id": "91240be.20997f8",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "55103cdc.687e1c",
        "name": "",
        "url": "/aasServer/auth/discovery",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 290,
        "y": 260,
        "wires": [
            [
                "ed36ed82.0ad1a"
            ]
        ]
    },
    {
        "id": "273d9714.e8066",
        "type": "function",
        "z": "c7caf96e.a31f98",
        "g": "55103cdc.687e1c",
        "name": "",
        "func": "if(msg.req.rawHeaders[1] == \"localhost:1880\"){\n    return [null, msg];\n} else\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nnode.status({text:\"set Request Header\"});",
        "finalize": "",
        "x": 701,
        "y": 260,
        "wires": [
            [
                "7f3fe823.9a8048"
            ],
            [
                "9b8d87d6.a0f5c"
            ]
        ],
        "l": false
    },
    {
        "id": "7f3fe823.9a8048",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "55103cdc.687e1c",
        "name": "authDiscovery_out",
        "links": [
            "680dcd17.852524"
        ],
        "x": 1281,
        "y": 260,
        "wires": []
    },
    {
        "id": "dfbf1931.2137e",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "55103cdc.687e1c",
        "name": "authDiscovery_In",
        "links": [
            "30b288e1.ec51a8"
        ],
        "x": 1941,
        "y": 260,
        "wires": [
            [
                "53edd896.d570e8",
                "cba8b568.6c39a",
                "e477aa02.a2c4f8"
            ]
        ]
    },
    {
        "id": "53edd896.d570e8",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "55103cdc.687e1c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2356,
        "y": 260,
        "wires": []
    },
    {
        "id": "ed36ed82.0ad1a",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "55103cdc.687e1c",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 576,
        "y": 260,
        "wires": [
            [
                "273d9714.e8066",
                "f639ad5.0fd9f5"
            ]
        ]
    },
    {
        "id": "6296174d.657848",
        "type": "wait-paths",
        "z": "c7caf96e.a31f98",
        "g": "55103cdc.687e1c",
        "name": "",
        "paths": "[\"path_1\",\"path_2\"]",
        "timeout": 15000,
        "finalTimeout": 60000,
        "x": 1156,
        "y": 340,
        "wires": [
            [
                "7f3fe823.9a8048"
            ]
        ]
    },
    {
        "id": "9b8d87d6.a0f5c",
        "type": "function",
        "z": "c7caf96e.a31f98",
        "g": "55103cdc.687e1c",
        "name": "",
        "func": "msg.paths = {};\nmsg.paths[\"path_1\"] = \"discoveryServer\";\nmsg.pathsCorrelationId = \"init\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nnode.status({text:\"set path for WaitPath\"});",
        "finalize": "",
        "x": 881,
        "y": 340,
        "wires": [
            [
                "6296174d.657848"
            ]
        ],
        "l": false
    },
    {
        "id": "d0ee856f.bf96e",
        "type": "function",
        "z": "c7caf96e.a31f98",
        "g": "55103cdc.687e1c",
        "name": "",
        "func": "msg.paths = {};\nmsg.paths[\"path_2\"] = \"manifestReady\";\nmsg.pathsCorrelationId = \"init\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nnode.status({text:\"set path for WaitPath\"});",
        "finalize": "",
        "x": 881,
        "y": 400,
        "wires": [
            [
                "6296174d.657848"
            ]
        ],
        "l": false
    },
    {
        "id": "277cb63a.4b547a",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "55103cdc.687e1c",
        "name": "manifestready",
        "links": [
            "b4174f6d119b818d"
        ],
        "x": 641,
        "y": 400,
        "wires": [
            [
                "d0ee856f.bf96e"
            ]
        ]
    },
    {
        "id": "f639ad5.0fd9f5",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "55103cdc.687e1c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 816,
        "y": 180,
        "wires": []
    },
    {
        "id": "cba8b568.6c39a",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "55103cdc.687e1c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2066,
        "y": 200,
        "wires": []
    },
    {
        "id": "e477aa02.a2c4f8",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "55103cdc.687e1c",
        "name": "",
        "env": [],
        "x": 2336,
        "y": 320,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "bb684f25.d3519",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:submodelId/liveData/subscribe/submodel/submodel-elements/:id",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 540,
        "y": 3880,
        "wires": [
            [
                "8a618a8d.e62888"
            ]
        ]
    },
    {
        "id": "7b105e31.22111",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:submodelId/liveData/unsubscribe/submodel/submodel-elements/:id",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 530,
        "y": 4020,
        "wires": [
            [
                "6365223b.355cac"
            ]
        ]
    },
    {
        "id": "63547b46.f4c064",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2430,
        "y": 4060,
        "wires": []
    },
    {
        "id": "f679f510.e6f448",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2430,
        "y": 3940,
        "wires": []
    },
    {
        "id": "3af93222.96064e",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "x": 2401,
        "y": 3980,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "b763f8b6.fbb468",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "env": [],
        "x": 2403,
        "y": 4100,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "828df34.b6d9e1",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "16_Out_b",
        "mode": "link",
        "links": [
            "036f573e2e9b4183"
        ],
        "x": 1895,
        "y": 3940,
        "wires": []
    },
    {
        "id": "fc99534e.2e75a",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "16_In",
        "links": [
            "b5e82d6c2f67da44"
        ],
        "x": 2135,
        "y": 3940,
        "wires": [
            [
                "f679f510.e6f448",
                "3af93222.96064e"
            ]
        ]
    },
    {
        "id": "dac82e37.2d63d",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "17_In",
        "links": [
            "e72c15b993724d44"
        ],
        "x": 2135,
        "y": 4060,
        "wires": [
            [
                "63547b46.f4c064",
                "b763f8b6.fbb468"
            ]
        ]
    },
    {
        "id": "aca4e316.3e76",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "17_Out",
        "mode": "link",
        "links": [
            "e13dc00a62dd4477"
        ],
        "x": 1895,
        "y": 4060,
        "wires": []
    },
    {
        "id": "b06bbe8c.99281",
        "type": "comment",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "External Interface - LiveData - Request Properties",
        "info": "",
        "x": 370,
        "y": 3800,
        "wires": []
    },
    {
        "id": "a3ec15bc.b3e59",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "url": "/aasServer/subscriptions",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 4140,
        "wires": [
            [
                "e08da917.d8f298"
            ]
        ]
    },
    {
        "id": "184a6b3e.d382f5",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2430,
        "y": 4180,
        "wires": []
    },
    {
        "id": "ec19d6a4.7505f8",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "env": [],
        "x": 2410,
        "y": 4220,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "568d5f3.624242",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "22_Out",
        "mode": "link",
        "links": [
            "f1dda0e0acb0d3aa"
        ],
        "x": 1875,
        "y": 4180,
        "wires": []
    },
    {
        "id": "d5524b85.c3c27",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "22_In",
        "links": [
            "f53807a57083ee3a"
        ],
        "x": 2135,
        "y": 4180,
        "wires": [
            [
                "184a6b3e.d382f5",
                "ec19d6a4.7505f8"
            ]
        ]
    },
    {
        "id": "cfca74c7.b132b",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1930,
        "y": 3900,
        "wires": []
    },
    {
        "id": "ffb2df3a.e5c088",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1670,
        "y": 3869,
        "wires": [
            [
                "cfca74c7.b132b"
            ]
        ]
    },
    {
        "id": "8a618a8d.e62888",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 1030,
        "y": 3880,
        "wires": [
            [
                "82c84fc4ae533332"
            ]
        ]
    },
    {
        "id": "6365223b.355cac",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 1010,
        "y": 4020,
        "wires": [
            [
                "59daa494066fadf7"
            ]
        ]
    },
    {
        "id": "317b8add.0a862e",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1690,
        "y": 4000,
        "wires": [
            [
                "7126ac75.9556b4"
            ]
        ]
    },
    {
        "id": "7126ac75.9556b4",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1930,
        "y": 4009,
        "wires": []
    },
    {
        "id": "500ad330.b7d6b4",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1670,
        "y": 4120,
        "wires": [
            [
                "f25207a6.2f6878"
            ]
        ]
    },
    {
        "id": "8c6633ec.aa98",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1430,
        "y": 4140,
        "wires": [
            [
                "500ad330.b7d6b4"
            ],
            [
                "500ad330.b7d6b4"
            ],
            [
                "73c3652ac2a9986d"
            ]
        ]
    },
    {
        "id": "e08da917.d8f298",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 1010,
        "y": 4140,
        "wires": [
            [
                "b60fe97da951714e"
            ]
        ]
    },
    {
        "id": "f25207a6.2f6878",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1910,
        "y": 4129,
        "wires": []
    },
    {
        "id": "c47fe40f.da2528",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1490,
        "y": 1000,
        "wires": [
            [
                "a0836dff.f2858"
            ],
            [
                "ac0847a4.fe5c1"
            ]
        ]
    },
    {
        "id": "739cb114.af7408",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1510,
        "y": 1240,
        "wires": [
            [
                "f841ff35.b800c"
            ],
            [
                "e67e2ede.e4bdc8"
            ]
        ]
    },
    {
        "id": "43117f42.2a3338",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1390,
        "y": 1560,
        "wires": [
            [
                "366f54c4.ff9614"
            ],
            [
                "6871882e.816d4"
            ]
        ]
    },
    {
        "id": "c85f5829.6aa428",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1390,
        "y": 1740,
        "wires": [
            [
                "1ba0d77.6417ba9"
            ],
            [
                "fced9d3f.eb0ca8"
            ]
        ]
    },
    {
        "id": "9aff2f9e.fba2b8",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1390,
        "y": 1880,
        "wires": [
            [
                "12a7495a.d95eef"
            ],
            [
                "bc91a45b.ea963"
            ]
        ]
    },
    {
        "id": "674c00ab.c7757",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1390,
        "y": 2080,
        "wires": [
            [
                "a750bb3b.e7537"
            ],
            [
                "f7ea5270.5b57e"
            ]
        ]
    },
    {
        "id": "1b564165.83f9ef",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1390,
        "y": 2260,
        "wires": [
            [
                "37e8727d.28d00e"
            ],
            [
                "d0bce444.7eb068"
            ]
        ]
    },
    {
        "id": "30077481.6a5194",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 2500,
        "wires": [
            [
                "d7af0dba.b14dd"
            ],
            [
                "6b96478d.7a9f2"
            ]
        ]
    },
    {
        "id": "b1c19080.0790a",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 2620,
        "wires": [
            [
                "2855d825.21951"
            ],
            [
                "8c710513.6043a8"
            ]
        ]
    },
    {
        "id": "51378cd1.d13f34",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 2720,
        "wires": [
            [
                "76230fd.d0045f"
            ],
            [
                "a17709b9.3e472"
            ]
        ]
    },
    {
        "id": "7b6789df.b592a8",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 2840,
        "wires": [
            [
                "2ba34b7e.d39f0c"
            ],
            [
                "cb3ea6e9.72b438"
            ]
        ]
    },
    {
        "id": "5972e175.abd018",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 2960,
        "wires": [
            [
                "de785470.82c5b"
            ],
            [
                "8c4835ae.20d5b8"
            ]
        ]
    },
    {
        "id": "cce764f4.a4ddc8",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1570,
        "y": 3260,
        "wires": [
            [
                "539e5110.1ef598"
            ],
            [
                "f42c942d.6d6448"
            ]
        ]
    },
    {
        "id": "fd6d81a6.b3f8d8",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1570,
        "y": 3360,
        "wires": [
            [
                "cd71006d.5e021"
            ],
            [
                "bc2fff91.b20fd"
            ]
        ]
    },
    {
        "id": "b8a009e2.87f68",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1570,
        "y": 3600,
        "wires": [
            [
                "9359dad8.bb01a"
            ],
            [
                "9cae29d0.c4e968"
            ]
        ]
    },
    {
        "id": "44b5fdcb.b49084",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1770,
        "y": 4060,
        "wires": [
            [
                "7126ac75.9556b4"
            ],
            [
                "aca4e316.3e76"
            ]
        ]
    },
    {
        "id": "a84572c.caab99",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1770,
        "y": 4160,
        "wires": [
            [
                "f25207a6.2f6878"
            ],
            [
                "568d5f3.624242"
            ]
        ]
    },
    {
        "id": "822a3485.6454a",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1430,
        "y": 3889,
        "wires": [
            [
                "ffb2df3a.e5c088"
            ],
            [
                "ffb2df3a.e5c088"
            ],
            [
                "cfca74c7.b132b"
            ],
            [
                "980c299d2c876a72"
            ]
        ]
    },
    {
        "id": "e6ffd72c.9d6e5",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1750,
        "y": 3920,
        "wires": [
            [
                "cfca74c7.b132b"
            ],
            [
                "828df34.b6d9e1"
            ]
        ]
    },
    {
        "id": "691102d8.2e4ccc",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1430,
        "y": 4029,
        "wires": [
            [
                "317b8add.0a862e"
            ],
            [
                "317b8add.0a862e"
            ],
            [
                "7126ac75.9556b4"
            ],
            [
                "6007b6ab3ff27f27"
            ]
        ]
    },
    {
        "id": "3fb52f54.6765f",
        "type": "function",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "func": "if(Object.keys(msg.req.body).length === 0 || msg.req.body == \"\"){\n    msg.statusCode = \"400\";\n    msg.payload = \"No topic specified in message body\";\n    return msg;\n} else {\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nnode.status({text:\"check req params\"});",
        "finalize": "",
        "x": 1315,
        "y": 3880,
        "wires": [
            [
                "822a3485.6454a"
            ]
        ],
        "l": false
    },
    {
        "id": "9ebd49db.dcf8a8",
        "type": "function",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "func": "if(Object.keys(msg.req.body).length === 0 || msg.req.body == \"\"){\n    msg.statusCode = \"400\";\n    msg.payload = \"No topic specified in message body\";\n    return msg;\n} else {\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nnode.status({text:\"check req params\"});",
        "finalize": "",
        "x": 1315,
        "y": 4020,
        "wires": [
            [
                "691102d8.2e4ccc"
            ]
        ],
        "l": false
    },
    {
        "id": "75f77efb0a5a8a91",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 800,
        "y": 1000,
        "wires": [
            [
                "4dc39fd1.c8f7c8",
                "25b28035.68b498"
            ]
        ]
    },
    {
        "id": "9bc3f1302ee2eae3",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "links": [
            "4f93699f68dc2488"
        ],
        "timeout": "30",
        "x": 1340,
        "y": 1000,
        "wires": [
            [
                "c47fe40f.da2528"
            ]
        ]
    },
    {
        "id": "bac08a3b276490f0",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 800,
        "y": 1220,
        "wires": [
            [
                "39e95fc6.a1f0d",
                "ede7821.687b6"
            ]
        ]
    },
    {
        "id": "b771b80cfe4f4c80",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "6c18a80c.ec30a",
        "name": "",
        "links": [
            "4f93699f68dc2488"
        ],
        "timeout": "30",
        "x": 1340,
        "y": 1240,
        "wires": [
            [
                "739cb114.af7408"
            ]
        ]
    },
    {
        "id": "c821c9288e370ff1",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 740,
        "y": 1540,
        "wires": [
            [
                "b0306546.0474c"
            ]
        ]
    },
    {
        "id": "f8c1215f7496dbdd",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 740,
        "y": 1700,
        "wires": [
            [
                "f2d59542.56fda",
                "fdba694e.cf01d"
            ]
        ]
    },
    {
        "id": "f2a32ab868332932",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 740,
        "y": 1840,
        "wires": [
            [
                "c4394893.5e225"
            ]
        ]
    },
    {
        "id": "c390b600bba3634e",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 820,
        "y": 2040,
        "wires": [
            [
                "231ffe47.64b5b2"
            ]
        ]
    },
    {
        "id": "2c1e73b4e00e1fb7",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 720,
        "y": 2200,
        "wires": [
            [
                "5357901a.ebafe8"
            ]
        ]
    },
    {
        "id": "285cbaebcd186f72",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 760,
        "y": 2480,
        "wires": [
            [
                "360b9a7b.0d5576"
            ]
        ]
    },
    {
        "id": "a4fde9ca0f51233e",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 800,
        "y": 2600,
        "wires": [
            [
                "fa4974dc.1fa648"
            ]
        ]
    },
    {
        "id": "4026dd07eb40b103",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 840,
        "y": 2700,
        "wires": [
            [
                "3de094e.8246d6c"
            ]
        ]
    },
    {
        "id": "db0a1878cfd3b36f",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 840,
        "y": 2820,
        "wires": [
            [
                "80ddd535.92f168"
            ]
        ]
    },
    {
        "id": "5e28d3d6e7fcee4b",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 860,
        "y": 2940,
        "wires": [
            [
                "4d1c9a11.497c04"
            ]
        ]
    },
    {
        "id": "a1969e7feaeb046c",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 1100,
        "y": 3220,
        "wires": [
            [
                "d0dcfd84.fa36a"
            ]
        ]
    },
    {
        "id": "b51e21c2b025c41f",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 1100,
        "y": 3340,
        "wires": [
            [
                "98bc07c7.2b47c"
            ]
        ]
    },
    {
        "id": "6c7ffe936d1b3a82",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 1100,
        "y": 3580,
        "wires": [
            [
                "98e3a79d.ae8a58"
            ]
        ]
    },
    {
        "id": "82c84fc4ae533332",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 1200,
        "y": 3880,
        "wires": [
            [
                "3fb52f54.6765f"
            ]
        ]
    },
    {
        "id": "59daa494066fadf7",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 1200,
        "y": 4020,
        "wires": [
            [
                "9ebd49db.dcf8a8"
            ]
        ]
    },
    {
        "id": "b60fe97da951714e",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 1200,
        "y": 4140,
        "wires": [
            [
                "8c6633ec.aa98"
            ]
        ]
    },
    {
        "id": "eb276c3207ba11fa",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "9e0d0c62.913b48",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 900,
        "y": 4440,
        "wires": [
            [
                "7f57e4a0.47375c"
            ]
        ]
    },
    {
        "id": "e8feba76b3a1c08d",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "links": [
            "4f93699f68dc2488"
        ],
        "timeout": "30",
        "x": 1220,
        "y": 1560,
        "wires": [
            [
                "43117f42.2a3338"
            ]
        ]
    },
    {
        "id": "a1d646017f83c2c9",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "links": [
            "4f93699f68dc2488"
        ],
        "timeout": "30",
        "x": 1200,
        "y": 1740,
        "wires": [
            [
                "c85f5829.6aa428"
            ]
        ]
    },
    {
        "id": "f8dd59bec9cdfd92",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "links": [
            "4f93699f68dc2488"
        ],
        "timeout": "30",
        "x": 1200,
        "y": 1880,
        "wires": [
            [
                "9aff2f9e.fba2b8"
            ]
        ]
    },
    {
        "id": "2677134f22e0b307",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "links": [
            "4f93699f68dc2488"
        ],
        "timeout": "30",
        "x": 1200,
        "y": 2080,
        "wires": [
            [
                "674c00ab.c7757"
            ]
        ]
    },
    {
        "id": "b14a35d40773fb6c",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "links": [
            "4f93699f68dc2488"
        ],
        "timeout": "30",
        "x": 1200,
        "y": 2260,
        "wires": [
            [
                "1b564165.83f9ef"
            ]
        ]
    },
    {
        "id": "b45ed924c417fa33",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "links": [
            "4f93699f68dc2488"
        ],
        "timeout": "30",
        "x": 1220,
        "y": 2500,
        "wires": [
            [
                "30077481.6a5194"
            ]
        ]
    },
    {
        "id": "8877b550e2c00515",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "links": [
            "4f93699f68dc2488"
        ],
        "timeout": "30",
        "x": 1220,
        "y": 2620,
        "wires": [
            [
                "b1c19080.0790a"
            ]
        ]
    },
    {
        "id": "e93422875c7c917a",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "links": [
            "4f93699f68dc2488"
        ],
        "timeout": "30",
        "x": 1220,
        "y": 2720,
        "wires": [
            [
                "51378cd1.d13f34"
            ]
        ]
    },
    {
        "id": "7912b6b8665075c8",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "links": [
            "4f93699f68dc2488"
        ],
        "timeout": "30",
        "x": 1220,
        "y": 2840,
        "wires": [
            [
                "7b6789df.b592a8"
            ]
        ]
    },
    {
        "id": "b5c61584b9a4d748",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "links": [
            "4f93699f68dc2488"
        ],
        "timeout": "30",
        "x": 1220,
        "y": 2960,
        "wires": [
            [
                "5972e175.abd018"
            ]
        ]
    },
    {
        "id": "932caae9eef96d41",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "links": [
            "4f93699f68dc2488"
        ],
        "timeout": "30",
        "x": 1420,
        "y": 3260,
        "wires": [
            [
                "cce764f4.a4ddc8"
            ]
        ]
    },
    {
        "id": "81887e0a48fc148f",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "links": [
            "4f93699f68dc2488"
        ],
        "timeout": "30",
        "x": 1420,
        "y": 3360,
        "wires": [
            [
                "fd6d81a6.b3f8d8"
            ]
        ]
    },
    {
        "id": "1b8ead8c39ba6430",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "links": [
            "4f93699f68dc2488"
        ],
        "timeout": "30",
        "x": 1420,
        "y": 3600,
        "wires": [
            [
                "b8a009e2.87f68"
            ]
        ]
    },
    {
        "id": "980c299d2c876a72",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "links": [
            "4f93699f68dc2488"
        ],
        "timeout": "30",
        "x": 1600,
        "y": 3920,
        "wires": [
            [
                "e6ffd72c.9d6e5"
            ]
        ]
    },
    {
        "id": "6007b6ab3ff27f27",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "links": [
            "4f93699f68dc2488"
        ],
        "timeout": "30",
        "x": 1600,
        "y": 4060,
        "wires": [
            [
                "44b5fdcb.b49084"
            ]
        ]
    },
    {
        "id": "73c3652ac2a9986d",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "links": [
            "4f93699f68dc2488"
        ],
        "timeout": "30",
        "x": 1600,
        "y": 4160,
        "wires": [
            [
                "a84572c.caab99"
            ]
        ]
    },
    {
        "id": "360dec5ddd2bd11b",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "9e0d0c62.913b48",
        "name": "",
        "links": [
            "4f93699f68dc2488"
        ],
        "timeout": "30",
        "x": 1260,
        "y": 4460,
        "wires": [
            [
                "d8850bdc.71f698"
            ]
        ]
    },
    {
        "id": "5f9c19ddaffca140",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 910,
        "y": 3440,
        "wires": []
    },
    {
        "id": "a5fbb27052c80af6",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:submodelId/submodel/submodel-elements/:id",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 520,
        "y": 3480,
        "wires": [
            [
                "5f9c19ddaffca140",
                "91b87f68448d6ab5"
            ]
        ]
    },
    {
        "id": "a18835ea35619c5b",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2290,
        "y": 3520,
        "wires": []
    },
    {
        "id": "91b87f68448d6ab5",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 930,
        "y": 3480,
        "wires": [
            [
                "828604507255f1c3"
            ]
        ]
    },
    {
        "id": "93a7985e082d5ee6",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "name": "",
        "x": 2270,
        "y": 3560,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "b7afdc3c3ca8f3d9",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "name": "15_In",
        "links": [
            "b266166048fe33a9"
        ],
        "x": 1875,
        "y": 3520,
        "wires": [
            [
                "a18835ea35619c5b",
                "93a7985e082d5ee6"
            ]
        ]
    },
    {
        "id": "f117413afc52cadf",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "15_Out",
        "mode": "link",
        "links": [
            "77dc61431f9fc54d"
        ],
        "x": 1695,
        "y": 3520,
        "wires": []
    },
    {
        "id": "828604507255f1c3",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 1100,
        "y": 3480,
        "wires": [
            [
                "e11051798721b310"
            ]
        ]
    },
    {
        "id": "e11051798721b310",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1250,
        "y": 3480,
        "wires": [
            [
                "2f6e0dd8d3a9d534"
            ],
            [
                "2f6e0dd8d3a9d534"
            ],
            [
                "2b44a7a0105a7a7a"
            ]
        ]
    },
    {
        "id": "2f6e0dd8d3a9d534",
        "type": "unsafe-function",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "process message statusCode 401/403",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1490,
        "y": 3460,
        "wires": [
            [
                "d88d1f52a2427ba4"
            ]
        ]
    },
    {
        "id": "d88d1f52a2427ba4",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1730,
        "y": 3460,
        "wires": []
    },
    {
        "id": "2b44a7a0105a7a7a",
        "type": "link call",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "links": [
            "4f93699f68dc2488"
        ],
        "timeout": "30",
        "x": 1420,
        "y": 3500,
        "wires": [
            [
                "923ffc0345be1e2b"
            ]
        ]
    },
    {
        "id": "923ffc0345be1e2b",
        "type": "switch",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1590,
        "y": 3500,
        "wires": [
            [
                "d88d1f52a2427ba4"
            ],
            [
                "f117413afc52cadf"
            ]
        ]
    },
    {
        "id": "8d9b6faa.7b7c2",
        "type": "debug",
        "z": "c5585a5.017f6a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 380,
        "wires": []
    },
    {
        "id": "fe996312.ede278",
        "type": "auth-oidc",
        "z": "c5585a5.017f6a8",
        "name": "",
        "discovery": "http://localhost:1880/aasServer/auth/discovery",
        "x": 570,
        "y": 320,
        "wires": [
            [
                "1dd34f64.3c8ee9",
                "44ab6a92.c41e2c"
            ]
        ]
    },
    {
        "id": "a4ba255a.0b1968",
        "type": "function",
        "z": "c5585a5.017f6a8",
        "name": "CheckRoleMapping",
        "func": "//get token details\nvar userClient = msg.access_token.body.preferred_username;\nvar userRoles = [];\n//check Authenticated Organization\nvar securitySettings = context.global.get(env.get(\"SECURITY_SETTINGS_SUBMODEL_ID\"));\nvar submodelElements = securitySettings.submodelElements;\nfor(var element in submodelElements){\n    var submodelElement = submodelElements[element];\n    if(submodelElement.idShort == \"roleMapping\"){\n        var valueElements = submodelElement.value;\n        for(var valueElement in valueElements){\n            var roleMappingValues = valueElements[valueElement].value;\n            var roleMappingValueSize = 0;\n            var found = false;\n            var roleForUser = \"not_defined\";\n            for(var roleMappingValueElement in roleMappingValues){\n                if(roleMappingValues[roleMappingValueElement].idShort == \"subjects\"){\n                    roleMappingValueSize++;\n                    var subjectValues = roleMappingValues[roleMappingValueElement].value;\n                    for(var subjectValuesElement in subjectValues){\n                        var str = subjectValues[subjectValuesElement].value;\n                        if(str != \"\" && userClient.includes(str)){\n                            found = true;\n                            break;\n                        }\n                    }\n                } else {\n                    roleMappingValueSize++;\n                    roleForUser = roleMappingValues[roleMappingValueElement].value[0].idShort;\n                }\n                if((roleMappingValueSize == roleMappingValues.length)){\n                    if(found && roleForUser != \"not_defined\"){\n                        userRoles.push(roleForUser);\n                    }\n                    roleForUser = \"not_defined\";\n                    found = false;\n                    roleMappingValueSize = 0;\n                    \n                }\n            }\n        }\n    }\n}\nmsg.userRoles = userRoles;\nif(msg.userRoles.length > 0){\n    msg.statusCode = 200;\n} else {\n    msg.statusCode = 401;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nnode.status({text:\"CheckRoleMapping\"});",
        "finalize": "",
        "x": 975,
        "y": 340,
        "wires": [
            [
                "cd8ef673.74f8",
                "6da58ddcc4071873"
            ]
        ],
        "l": false
    },
    {
        "id": "1dd34f64.3c8ee9",
        "type": "debug",
        "z": "c5585a5.017f6a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 260,
        "wires": []
    },
    {
        "id": "cd8ef673.74f8",
        "type": "debug",
        "z": "c5585a5.017f6a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 380,
        "wires": []
    },
    {
        "id": "8953c64b.e767b8",
        "type": "function",
        "z": "c5585a5.017f6a8",
        "name": "verify Server DefaultUserSubjectAttributes",
        "func": "var securityMetamodelSubmodel = context.global.get(\"SecurityMetaModelForServer\");\nvar securityMetamodelSubmodelElements = securityMetamodelSubmodel.submodelElements;\nfor(var element in securityMetamodelSubmodelElements){\n    if(securityMetamodelSubmodelElements[element].idShort == \"defaultUserSubjectAttributes\"){\n        var values = securityMetamodelSubmodelElements[element].value;\n        var supportedSubjectAttributes = [];\n        for(var valueElement in values){\n            var el = values[valueElement].idShort;\n            if(msg.userRoles.includes(el)){\n                supportedSubjectAttributes.push(el);\n            }\n        }\n        msg.userRoles = supportedSubjectAttributes;\n        return msg;\n    }\n}\nmsg.payload = \"Error submodel: defaultUserSubjectAttributes does not exist!!!\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nnode.status({text:\"verify Server DefaultUserSubjectAttributes\"});",
        "finalize": "",
        "x": 495,
        "y": 600,
        "wires": [
            [
                "62aecc6a.828af4"
            ]
        ],
        "l": false
    },
    {
        "id": "44ab6a92.c41e2c",
        "type": "switch",
        "z": "c5585a5.017f6a8",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "403",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 810,
        "y": 320,
        "wires": [
            [
                "94e360f6.d6eed8",
                "6da58ddcc4071873"
            ],
            [
                "6da58ddcc4071873"
            ],
            [
                "a4ba255a.0b1968",
                "a223cefc.244d6"
            ]
        ]
    },
    {
        "id": "a223cefc.244d6",
        "type": "debug",
        "z": "c5585a5.017f6a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 400,
        "wires": []
    },
    {
        "id": "94e360f6.d6eed8",
        "type": "debug",
        "z": "c5585a5.017f6a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 140,
        "wires": []
    },
    {
        "id": "6ecd7218.b98c84",
        "type": "jsonata",
        "z": "c5585a5.017f6a8",
        "name": "jsonata",
        "property": "securityMetaModelJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 940,
        "y": 600,
        "wires": [
            [
                "c23501c4.a88058"
            ]
        ]
    },
    {
        "id": "62aecc6a.828af4",
        "type": "function",
        "z": "c5585a5.017f6a8",
        "name": "prepare JSONata query",
        "func": "var securityMetaModel = context.global.get('SecurityMetaModelForServer');\n\nmsg.securityMetaModelJsonStr = JSON.stringify(securityMetaModel);\nmsg.payload = msg.securityMetaModelJsonStr;\n//context.global.set(\"test\", msg.securityMetaModelJsonStr);\n//msg.jsonata = \"$[identification.id='\" + ShellId +\"'].submodels.keys\";\nmsg.jsonata = \"submodelElements[idShort='accessControlPolicyPoints'].value[idShort='policyAdministrationPoint'].value[idShort='localAccessControl'].value[idShort='accessPermissionRules'].value\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nnode.status({text:\"prepare JSONata query\"});",
        "finalize": "",
        "x": 755,
        "y": 600,
        "wires": [
            [
                "6ecd7218.b98c84"
            ]
        ],
        "l": false
    },
    {
        "id": "ddd43172.e4341",
        "type": "inject",
        "z": "c5585a5.017f6a8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "userRoles",
                "v": "[\"isAuthenticatedSecurityUser\", \"isAuthenticatedOrganisation\"]",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 540,
        "wires": [
            [
                "62aecc6a.828af4"
            ]
        ]
    },
    {
        "id": "c23501c4.a88058",
        "type": "function",
        "z": "c5585a5.017f6a8",
        "name": "process JSONata Result",
        "func": "if(msg.jsonataStatus == \"Success\"){\n    var accessPermissionRules = msg.jsonataResult;\n    var rulesToBeValidated = [];\n    for(var element in accessPermissionRules){\n        var rule = accessPermissionRules[element];\n        for(var elementValue in rule.value){\n            var subjectAttribute = rule.value[elementValue];\n            if(subjectAttribute.idShort == \"targetSubjectAttributes\"){\n                var userRoles = msg.userRoles;\n                for(var elementUserRole in userRoles){\n                    if(subjectAttribute.value[0].idShort == userRoles[elementUserRole]){\n                        rulesToBeValidated.push(rule);\n                    }\n                }\n            }\n        }\n    }\n    msg.jsonataResult = msg.jsonataResult.filter(function(val) {\n        return rulesToBeValidated.indexOf(val) != -1;\n    });\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nnode.status({text:\"process JSONata Result\"});",
        "finalize": "",
        "x": 1095,
        "y": 600,
        "wires": [
            [
                "1147a785.3a3098"
            ]
        ],
        "l": false
    },
    {
        "id": "9e53762a.145f38",
        "type": "inject",
        "z": "c5585a5.017f6a8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 100,
        "wires": [
            [
                "b4fc6c4a.aedd38"
            ]
        ]
    },
    {
        "id": "b4fc6c4a.aedd38",
        "type": "function",
        "z": "c5585a5.017f6a8",
        "name": "",
        "func": "var httpVerbs2CRUD = {};\n\nhttpVerbs2CRUD[\"POST\"] = \"CREATE\";\nhttpVerbs2CRUD[\"GET\"] = \"READ\";\nhttpVerbs2CRUD[\"PUT\"] = \"UPDATE\";\nhttpVerbs2CRUD[\"DELETE\"] = \"DELETE\";\n\ncontext.flow.set(\"httpVerbs2CRUD\", httpVerbs2CRUD);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "1147a785.3a3098",
        "type": "function",
        "z": "c5585a5.017f6a8",
        "name": "process JSONata Result",
        "func": "var verify = function(request, object, permission){\n    for(var element in permission){\n        if(object == \"API:*\" || object.includes(request.url)){\n            if(permission[element].idShort == \"kindOfPermission\"){\n                if(permission[element].value == \"Deny\" || permission[element].value == \"NotApplicable\" || permission[element].value == \"Undefined\"){\n                    return false;\n                }\n            } else if(permission[element].idShort.includes(\"permission\")){\n                var propertyKeys = permission[element].value.keys;\n                for(var key in propertyKeys){\n                    if(propertyKeys[key].type == \"Property\"){\n                        var httpVerbs2CRUD = context.flow.get(\"httpVerbs2CRUD\");\n                        if(propertyKeys[key].value == httpVerbs2CRUD[request.method]){\n                            return true;\n                        }\n                    }\n                }\n            }\n        } else {\n            return false;\n        }\n    }\n}\n\nvar permissionsPerUser = msg.jsonataResult;\nfor(var permissionElement in permissionsPerUser){\n    var permissionsValue = permissionsPerUser[permissionElement].value;\n    for(var permissionsValueElement in permissionsValue){\n        if(permissionsValue[permissionsValueElement].idShort == \"permissionsPerObject\"){\n            var permissionsPerObjectValue = permissionsValue[permissionsValueElement].value;\n            for(var permissionsPerObjectValueElement in permissionsPerObjectValue){\n                var object = \"\";\n                var permission = \"\";\n                var permissionPerObjectValue = permissionsPerObjectValue[permissionsPerObjectValueElement].value;\n                for(var permissionPerObjectValueElement in permissionPerObjectValue){\n                    if(permissionPerObjectValue[permissionPerObjectValueElement].idShort == \"object\"){\n                        object = permissionPerObjectValue[permissionPerObjectValueElement].value;\n                    } else if (permissionPerObjectValue[permissionPerObjectValueElement].idShort == \"permission\"){\n                        permission = permissionPerObjectValue[permissionPerObjectValueElement].value;\n                    }\n                }\n                //Verify permisisons\n                var request = {url: msg.req.url, method: msg.req.method}\n                if(verify(request, object, permission)){\n                    msg.validatedPermission = true;\n                    return msg;\n                }\n            }\n        }\n    }\n}\nmsg.validatedPermission = false;\n                \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nnode.status({text:\"verify permission rules\"});",
        "finalize": "",
        "x": 1255,
        "y": 600,
        "wires": [
            [
                "da1785cd.c5582"
            ]
        ],
        "l": false
    },
    {
        "id": "2f75e9df.42f21e",
        "type": "debug",
        "z": "c5585a5.017f6a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 520,
        "wires": []
    },
    {
        "id": "da1785cd.c5582",
        "type": "function",
        "z": "c5585a5.017f6a8",
        "name": "",
        "func": "if(msg.validatedPermission){\n    msg.statusCode = \"200\";\n} else {\n    msg.statusCode = \"403\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nnode.status({text:\"create msg status\"});",
        "finalize": "",
        "x": 1415,
        "y": 600,
        "wires": [
            [
                "2f75e9df.42f21e",
                "8afa8b16224177cc"
            ]
        ],
        "l": false
    },
    {
        "id": "b89681fd.492748",
        "type": "debug",
        "z": "c5585a5.017f6a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 520,
        "wires": []
    },
    {
        "id": "5801760d2dab07fc",
        "type": "link in",
        "z": "c5585a5.017f6a8",
        "name": "validateToken in",
        "links": [],
        "x": 275,
        "y": 320,
        "wires": [
            [
                "8d9b6faa.7b7c2",
                "fe996312.ede278"
            ]
        ]
    },
    {
        "id": "6da58ddcc4071873",
        "type": "link out",
        "z": "c5585a5.017f6a8",
        "name": "validateToken out",
        "mode": "return",
        "links": [],
        "x": 1675,
        "y": 320,
        "wires": []
    },
    {
        "id": "4f93699f68dc2488",
        "type": "link in",
        "z": "c5585a5.017f6a8",
        "name": "validateRoles in",
        "links": [],
        "x": 275,
        "y": 600,
        "wires": [
            [
                "b89681fd.492748",
                "8953c64b.e767b8"
            ]
        ]
    },
    {
        "id": "8afa8b16224177cc",
        "type": "link out",
        "z": "c5585a5.017f6a8",
        "name": "validateRoles out",
        "mode": "return",
        "links": [],
        "x": 1675,
        "y": 600,
        "wires": []
    },
    {
        "id": "9b820339a1f8b3cb",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2110,
        "y": 120,
        "wires": []
    },
    {
        "id": "7f1f7cd7d51219f2",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "1_In",
        "links": [
            "21db2b14.d6f9f4"
        ],
        "x": 235,
        "y": 220,
        "wires": [
            [
                "8a3ea1ebe95504e3",
                "d626116ced2dc4f4"
            ]
        ]
    },
    {
        "id": "b4174f6d119b818d",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "1_Out",
        "links": [
            "31a80cba.e64364",
            "277cb63a.4b547a"
        ],
        "x": 3095,
        "y": 220,
        "wires": []
    },
    {
        "id": "0bfec8a08f4fdce7",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "3_In",
        "links": [
            "acf520d7.dad7a",
            "2f77b324.8f4834",
            "6871882e.816d4"
        ],
        "x": 235,
        "y": 996,
        "wires": [
            [
                "e2d8169cf9e31e54"
            ]
        ]
    },
    {
        "id": "4afb1a25b07cb8e6",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "3_Out",
        "links": [
            "c4626f7b.fb5ac",
            "2c990cd.ab65f74"
        ],
        "x": 3135,
        "y": 996,
        "wires": []
    },
    {
        "id": "c6f4185e611fdfc9",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "4_In",
        "links": [
            "c34ae37f.12318",
            "3bb19eca.92cfd2",
            "fced9d3f.eb0ca8"
        ],
        "x": 235,
        "y": 1068,
        "wires": [
            [
                "ef709bb1d7e09037"
            ]
        ]
    },
    {
        "id": "9214f25b766f1160",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "4_Out",
        "links": [
            "8ddc3a56.0b1778",
            "5304bdc8.6dda34"
        ],
        "x": 3135,
        "y": 1068,
        "wires": []
    },
    {
        "id": "481df700406161f4",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "5_In",
        "links": [
            "bbf9bf7d.66354",
            "883acf9b.5a7a2",
            "f7ea5270.5b57e"
        ],
        "x": 235,
        "y": 1216,
        "wires": [
            [
                "d73d9df5e4f7eac3"
            ]
        ]
    },
    {
        "id": "48dd0f77410601a7",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "5_Out",
        "links": [
            "bc9740dc.6a656"
        ],
        "x": 3135,
        "y": 1216,
        "wires": []
    },
    {
        "id": "76f745f16c707c2b",
        "type": "switch",
        "z": "f415efa5cb36c48f",
        "name": "IF_Error_Detected",
        "property": "payload.errors",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1630,
        "y": 1465,
        "wires": [
            [
                "413b5b775d4582fd"
            ],
            [
                "b3a30b9d97af7bfd"
            ]
        ]
    },
    {
        "id": "7f04b3822449d4f1",
        "type": "unsafe-function",
        "z": "f415efa5cb36c48f",
        "name": "preparingCheckingRules",
        "func": "var errors = [];\nmsg.payload = {};\nvar NOVAAS_Overall_St = context.global.get(\"NOVAAS_Overall_St\");\nif((NOVAAS_Overall_St === false))\n   {\n        errors.push(\"Asset Administration Shell not configured\");\n       \n   } \n \nmsg.payload.errors = errors;\n    \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1370,
        "y": 1465,
        "wires": [
            [
                "76f745f16c707c2b",
                "a4814a8bb7bd567a"
            ]
        ]
    },
    {
        "id": "413b5b775d4582fd",
        "type": "unsafe-function",
        "z": "f415efa5cb36c48f",
        "name": "createOutputMsg",
        "func": "msg.statusCode = 200;\nmsg.payload = \"ok\";\nmsg.headers = {};\nmsg.headers['content-type'] = 'text/plain';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1890,
        "y": 1425,
        "wires": [
            [
                "e82c6228add581f9"
            ]
        ]
    },
    {
        "id": "b3a30b9d97af7bfd",
        "type": "unsafe-function",
        "z": "f415efa5cb36c48f",
        "name": "createOutputMsg",
        "func": "msg.statusCode = 503;\nmsg.payload = msg.payload.errors;\nmsg.headers = {};\nmsg.headers['content-type'] = 'text/plain';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1890,
        "y": 1485,
        "wires": [
            [
                "e82c6228add581f9"
            ]
        ]
    },
    {
        "id": "4453c69c3cb0f56a",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "6_In",
        "links": [
            "98293416.fa8198"
        ],
        "x": 235,
        "y": 1465,
        "wires": [
            [
                "7f04b3822449d4f1"
            ]
        ]
    },
    {
        "id": "e82c6228add581f9",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "6_Out",
        "links": [
            "43be3c31.fa03f4"
        ],
        "x": 3135,
        "y": 1465,
        "wires": []
    },
    {
        "id": "1bc0d53ba52e0732",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1650,
        "y": 1540,
        "wires": []
    },
    {
        "id": "d1dcdbde24e5d8b0",
        "type": "unsafe-function",
        "z": "f415efa5cb36c48f",
        "name": "OnlyPublicSubmodels",
        "func": "var submodels = msg.payload.InternalElement;\nfor(var submodel = 0; submodel < submodels.length; submodel++){\n    var attributes = submodels[submodel].Attribute;\n    for(var attribute in attributes){\n        if(attributes[attribute]._Attribs.Name == \"Visibility\" && attributes[attribute].Value[0].toLowerCase() == \"false\"){\n            //Remove from the list\n            submodels.splice(submodel, 1);\n            submodel--;\n            break;\n        } else if(attributes[attribute]._Attribs.Name == \"Visibility\" && attributes[attribute].Value[0].toLowerCase() == \"true\"){\n            //Check only DataManifests\n            var dsms = submodels[submodel].InternalElement;\n            if(typeof dsms !== \"undefined\"){\n                for(var dsm = 0; dsm < dsms.length; dsm++){\n                    var dsm_attributes = dsms[dsm].Attribute;\n                    for(var dsm_attribute in dsm_attributes){\n                        if(dsm_attributes[dsm_attribute]._Attribs.Name == \"Visibility\" && dsm_attributes[dsm_attribute].Value[0] == \"false\"){\n                            //Remove from the list\n                            dsms.splice(dsm, 1);\n                            dsm--;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1860,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "1017e3ea53b0dc76",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "7_In",
        "links": [
            "2fa79041.17ff8",
            "17da0b60.6a2f3d",
            "6b96478d.7a9f2"
        ],
        "x": 235,
        "y": 1580,
        "wires": [
            [
                "c3dc8e1cea37e3a5"
            ]
        ]
    },
    {
        "id": "9a4e060dfca965ef",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "7_Out",
        "links": [
            "9f7abd5a.96875",
            "caa59972.e5a99"
        ],
        "x": 3135,
        "y": 1580,
        "wires": []
    },
    {
        "id": "493bc07df0d791ad",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1750,
        "y": 1720,
        "wires": []
    },
    {
        "id": "d4bf39cbde4f66a7",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "8_Out",
        "links": [
            "54372dd7.ec8b74",
            "e2acf77b.dc7f68"
        ],
        "x": 3135,
        "y": 1760,
        "wires": []
    },
    {
        "id": "cb03268a76da7983",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "8_In",
        "links": [
            "b859d557.e838d8",
            "e2af5e8a.78213",
            "a17709b9.3e472"
        ],
        "x": 235,
        "y": 1760,
        "wires": [
            [
                "e677f97c15bf98f6"
            ]
        ]
    },
    {
        "id": "4d33c17c38255c67",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1630,
        "y": 1820,
        "wires": []
    },
    {
        "id": "7a9d23eb290e4068",
        "type": "msg-router",
        "z": "f415efa5cb36c48f",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2030,
        "y": 1880,
        "wires": [
            [
                "87583a6df882d994"
            ],
            [
                "e9af1dd4474a45f1"
            ]
        ]
    },
    {
        "id": "87583a6df882d994",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "9_Out",
        "links": [
            "87522ab0.ac1188",
            "74e66928.59585"
        ],
        "x": 3135,
        "y": 1860,
        "wires": []
    },
    {
        "id": "dfc2457d14734dba",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "9_In",
        "links": [
            "cb3ea6e9.72b438",
            "786ee408.b667c4"
        ],
        "x": 235,
        "y": 1880,
        "wires": [
            [
                "c70caa7ada260630"
            ]
        ]
    },
    {
        "id": "6668deaf3c61a639",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1670,
        "y": 2040,
        "wires": []
    },
    {
        "id": "b8743e16f1fcb826",
        "type": "msg-router",
        "z": "f415efa5cb36c48f",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2030,
        "y": 2080,
        "wires": [
            [
                "587be79558e3e030"
            ],
            [
                "b02343341548cb6d"
            ]
        ]
    },
    {
        "id": "587be79558e3e030",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "10_Out",
        "links": [
            "345e490a.d99a46",
            "d5e2a42c.8dffb8"
        ],
        "x": 3135,
        "y": 2060,
        "wires": []
    },
    {
        "id": "dd78947c10d185c9",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "10_In",
        "links": [
            "8c4835ae.20d5b8",
            "b636e41a.e74f28"
        ],
        "x": 235,
        "y": 2080,
        "wires": [
            [
                "c67e488ed2e65d28"
            ]
        ]
    },
    {
        "id": "7a3b2485af13c6b0",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1670,
        "y": 2160,
        "wires": []
    },
    {
        "id": "bc02e5913d585fcc",
        "type": "msg-router",
        "z": "f415efa5cb36c48f",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2030,
        "y": 2260,
        "wires": [
            [
                "c4787cf0c3e052bb"
            ],
            [
                "e1996a1656ac271d"
            ]
        ]
    },
    {
        "id": "c4787cf0c3e052bb",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "11_Out",
        "links": [
            "d932c8d.cf79c38",
            "51031ae7.2a3aa4"
        ],
        "x": 3135,
        "y": 2238,
        "wires": []
    },
    {
        "id": "587742d762266c6d",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "11_In",
        "links": [
            "d50a98f1.b0b938",
            "1e00e0ac.7b7297"
        ],
        "x": 235,
        "y": 2258,
        "wires": [
            [
                "55270577fba4fc05"
            ]
        ]
    },
    {
        "id": "389f5d7b17f6532f",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1790,
        "y": 2360,
        "wires": []
    },
    {
        "id": "c09468690038b481",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "12_Out",
        "links": [
            "4a5f46fc.ea7c08",
            "c659a5d0.7355b8"
        ],
        "x": 3115,
        "y": 2400,
        "wires": []
    },
    {
        "id": "49fdf2b46ec75338",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "12_In",
        "links": [
            "f42c942d.6d6448",
            "a0c9ccc4.12d298"
        ],
        "x": 235,
        "y": 2400,
        "wires": [
            [
                "9dcf832cda386516"
            ]
        ]
    },
    {
        "id": "7960469ad4497a49",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1730,
        "y": 2520,
        "wires": []
    },
    {
        "id": "488998e297d79210",
        "type": "msg-router",
        "z": "f415efa5cb36c48f",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2030,
        "y": 2580,
        "wires": [
            [
                "cea3973997ec6b07"
            ],
            [
                "d86b4b628f132f76"
            ]
        ]
    },
    {
        "id": "cea3973997ec6b07",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "13_Out",
        "links": [
            "6e7f5025.a4315",
            "bcb152e2.608288"
        ],
        "x": 3115,
        "y": 2560,
        "wires": []
    },
    {
        "id": "bc3403fe8115720d",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "13_In",
        "links": [
            "bc2fff91.b20fd",
            "df1cae54.a6ed38"
        ],
        "x": 235,
        "y": 2580,
        "wires": [
            [
                "d6e1e8e14e2bed66"
            ]
        ]
    },
    {
        "id": "0c50aae32b43a4bb",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1730,
        "y": 2700,
        "wires": []
    },
    {
        "id": "6d5f761c134233fb",
        "type": "msg-router",
        "z": "f415efa5cb36c48f",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2030,
        "y": 2740,
        "wires": [
            [
                "af95caf412605a5d"
            ],
            [
                "75069c95f9678337"
            ]
        ]
    },
    {
        "id": "af95caf412605a5d",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "14_Out",
        "links": [
            "53f11e8b.9b099",
            "b6041910.8e7b8"
        ],
        "x": 3115,
        "y": 2720,
        "wires": []
    },
    {
        "id": "35f564a951c41d1e",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "14_In",
        "links": [
            "9cae29d0.c4e968",
            "e2cbc28f.14c87"
        ],
        "x": 235,
        "y": 2740,
        "wires": [
            [
                "7a7f5a962619b889"
            ]
        ]
    },
    {
        "id": "644bf16974ca4cc6",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1730,
        "y": 2860,
        "wires": []
    },
    {
        "id": "10e511e82c836816",
        "type": "msg-router",
        "z": "f415efa5cb36c48f",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2030,
        "y": 2920,
        "wires": [
            [
                "b266166048fe33a9"
            ],
            [
                "cdf4c73d6d630dc9"
            ]
        ]
    },
    {
        "id": "b266166048fe33a9",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "15_Out",
        "mode": "link",
        "links": [
            "b7afdc3c3ca8f3d9"
        ],
        "x": 3115,
        "y": 2900,
        "wires": []
    },
    {
        "id": "77dc61431f9fc54d",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "15_In",
        "links": [
            "f117413afc52cadf"
        ],
        "x": 235,
        "y": 2920,
        "wires": [
            [
                "6ebd5059cc166d66"
            ]
        ]
    },
    {
        "id": "bcdfd890eb2e91c2",
        "type": "switch",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "IF_StatusCode",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1040,
        "y": 3700,
        "wires": [
            [
                "41587f0637db95e9"
            ],
            [
                "cfd6c763986a2c52"
            ],
            [
                "cfd6c763986a2c52"
            ]
        ]
    },
    {
        "id": "cfd6c763986a2c52",
        "type": "unsafe-function",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "checkMsgRequest",
        "func": "var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\nif(msg.res){\n    // Create an Observation Event Object ------------------------------------\n    var observation = {};\n    observation.id = uuid;\n    observation.source = context.global.get(\"AASIdentifier\");\n    observation.direction = \"Output\";\n    observation.observableReference = msg.req.params.aasid + \"/\" + msg.req.params.submodelId + \"/\" + msg.req.params.id;\n    observation.timestamp = new Date().getTime();\n    observation.payload = msg.payload;\n    msg.payload = observation;\n    return [msg, null];\n} else {\n    msg.topic = msg.req.params.id;\n    return [null, msg];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 2750,
        "y": 3720,
        "wires": [
            [
                "cb55ae8f6ab1795a",
                "b5e82d6c2f67da44"
            ],
            [
                "b5e82d6c2f67da44"
            ]
        ]
    },
    {
        "id": "cb55ae8f6ab1795a",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3030,
        "y": 3720,
        "wires": []
    },
    {
        "id": "036f573e2e9b4183",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "16_In_b",
        "links": [
            "828df34.b6d9e1",
            "848b9065.852548"
        ],
        "x": 235,
        "y": 3700,
        "wires": [
            [
                "b13f02576aacce85"
            ]
        ]
    },
    {
        "id": "b5e82d6c2f67da44",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "16_Out_a",
        "links": [
            "fc99534e.2e75a",
            "73e6b16a.683058"
        ],
        "x": 3115,
        "y": 3680,
        "wires": []
    },
    {
        "id": "e72c15b993724d44",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "17_Out",
        "links": [
            "dac82e37.2d63d",
            "e61e4b18.21bfc8"
        ],
        "x": 3115,
        "y": 3820,
        "wires": []
    },
    {
        "id": "e13dc00a62dd4477",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "17_In",
        "links": [
            "aca4e316.3e76",
            "fa0d23e4.4f25c"
        ],
        "x": 235,
        "y": 3820,
        "wires": [
            [
                "ab7f21495153f5fa"
            ]
        ]
    },
    {
        "id": "a4814a8bb7bd567a",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1585.5833740234375,
        "y": 1419.7291259765625,
        "wires": []
    },
    {
        "id": "8e2938633210d796",
        "type": "comment",
        "z": "f415efa5cb36c48f",
        "name": "AAS Rosource Monitoring - Component Manger",
        "info": "",
        "x": 600,
        "y": 4623,
        "wires": []
    },
    {
        "id": "8a3ea1ebe95504e3",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 670,
        "y": 140,
        "wires": []
    },
    {
        "id": "98e8c09f56fc40a1",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "g": "b85ff5d2fdca6f85",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 750,
        "y": 4343,
        "wires": []
    },
    {
        "id": "b6b4c4d3b88b980a",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1170,
        "y": 180,
        "wires": []
    },
    {
        "id": "49eb0c3d325b8b34",
        "type": "switch",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "IF_StatusCode",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1040,
        "y": 3820,
        "wires": [
            [
                "d76c83f99068841f"
            ],
            [
                "713bc92ebcc0465b"
            ],
            [
                "713bc92ebcc0465b"
            ]
        ]
    },
    {
        "id": "14b5b585fb0247e5",
        "type": "switch",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "IF_statusMessage_not_null",
        "property": "statusMessage",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1960,
        "y": 3620,
        "wires": [
            [
                "6ddc06b9a268c3c5"
            ]
        ]
    },
    {
        "id": "492f981e7052ee92",
        "type": "comment",
        "z": "f415efa5cb36c48f",
        "g": "b85ff5d2fdca6f85",
        "name": "Interaction with AAS - NBI",
        "info": "",
        "x": 530,
        "y": 4283,
        "wires": []
    },
    {
        "id": "24f86b003f0a61df",
        "type": "comment",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "Interaction with AAS - SBI",
        "info": "",
        "x": 390,
        "y": 3580,
        "wires": []
    },
    {
        "id": "909e2111c3a9f268",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "18_In",
        "links": [
            "48ef191e.d28c98",
            "421a980b.ffb09"
        ],
        "x": 235,
        "y": 4183,
        "wires": [
            [
                "8c6ea5484ec85e5f"
            ]
        ]
    },
    {
        "id": "39c425339983c56d",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "18_Out",
        "links": [
            "e7a9e126.1cef",
            "3b26bcb7.39cf3c"
        ],
        "x": 3115,
        "y": 4183,
        "wires": []
    },
    {
        "id": "186f1523dd64d1f4",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "1_1_In",
        "links": [
            "ece6df22.01841",
            "ac0847a4.fe5c1"
        ],
        "x": 235,
        "y": 860,
        "wires": [
            [
                "9aad423377192ab0"
            ]
        ]
    },
    {
        "id": "0ffc05dbfcc577c8",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "1_1_Out",
        "links": [
            "fff82399.2f49b"
        ],
        "x": 3135,
        "y": 900,
        "wires": []
    },
    {
        "id": "9aad423377192ab0",
        "type": "switch",
        "z": "f415efa5cb36c48f",
        "name": "IF_Manifest_File_Metadata",
        "property": "req.files.driver",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 500,
        "y": 860,
        "wires": [
            [
                "7a7387119ef25075"
            ],
            [
                "fd6cb2c9ca26693e"
            ]
        ]
    },
    {
        "id": "9821d5e38252c0d2",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1070,
        "y": 780,
        "wires": []
    },
    {
        "id": "7a7387119ef25075",
        "type": "unsafe-function",
        "z": "f415efa5cb36c48f",
        "name": "Read File ",
        "func": "var fs = context.global.get('fs');\nvar content = \"\";\nfs.readFile(msg.req.files.driver[0].path, \"utf8\", function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    content = data;\n\n    // Invoke the next step here however you like\n    //console.log(content);   // Put all of the code here (not the best solution)\n    processFile();          // Or put the next step in a function and invoke it\n});\n\nfunction processFile() {\n    msg.payload = content;\n    node.send(msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 840,
        "wires": [
            [
                "9821d5e38252c0d2",
                "0ffc05dbfcc577c8",
                "a2f5b9e72316ae71"
            ]
        ]
    },
    {
        "id": "5b27d0eb242b7307",
        "type": "addflow",
        "z": "f415efa5cb36c48f",
        "name": "",
        "x": 1640,
        "y": 820,
        "wires": [
            [
                "8de46335a7faea2a"
            ]
        ]
    },
    {
        "id": "56ce48674f810aa3",
        "type": "delflow",
        "z": "f415efa5cb36c48f",
        "name": "",
        "enabled": true,
        "x": 1640,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "a2f5b9e72316ae71",
        "type": "json",
        "z": "f415efa5cb36c48f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1230,
        "y": 800,
        "wires": [
            [
                "2623e995cd7d4f27"
            ]
        ]
    },
    {
        "id": "2623e995cd7d4f27",
        "type": "unsafe-function",
        "z": "f415efa5cb36c48f",
        "name": "Get FlowIds",
        "func": "var drivers = context.global.get(\"Drivers\");\nfor (var element in drivers){\n    if(msg.payload.id === drivers[element].id || msg.payload.label === drivers[element].label){\n        msg.flowId = drivers[element].id;\n        drivers.splice(1, element);\n        context.global.set(\"Drivers\", drivers);\n        return [msg, msg];\n    }\n}\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "x": 1390,
        "y": 800,
        "wires": [
            [
                "56ce48674f810aa3"
            ],
            [
                "5b27d0eb242b7307"
            ]
        ]
    },
    {
        "id": "8de46335a7faea2a",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1810,
        "y": 820,
        "wires": []
    },
    {
        "id": "fd6cb2c9ca26693e",
        "type": "unsafe-function",
        "z": "f415efa5cb36c48f",
        "name": "Read File Null",
        "func": "msg.statusCode = 400;\nmsg.payload = \"no attached file\";\nmsg.headers = {};\nmsg.headers['content-type'] = 'text/plain';\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 880,
        "wires": [
            [
                "0ffc05dbfcc577c8"
            ]
        ]
    },
    {
        "id": "713bc92ebcc0465b",
        "type": "unsafe-function",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "checkMsgRequest",
        "func": "var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\nif(msg.res){\n    // Create an Observation Event Object ------------------------------------\n    var observation = {};\n    observation.id = uuid;\n    observation.source = context.global.get(\"AASIdentifier\");\n    observation.direction = \"Output\";\n    observation.observableReference = msg.req.params.aasid + \"/\" + msg.req.params.submodelId + \"/\" + msg.req.params.id;\n    observation.timestamp = new Date().getTime();\n    observation.payload = msg.payload;\n    msg.payload = observation;\n    return [msg, null];\n} else {\n    msg.topic = msg.req.params.id;\n    return [null, msg];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 2750,
        "y": 3840,
        "wires": [
            [
                "e72c15b993724d44"
            ],
            [
                "e72c15b993724d44"
            ]
        ]
    },
    {
        "id": "ed15284c8ed9698d",
        "type": "inject",
        "z": "f415efa5cb36c48f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 40,
        "wires": [
            [
                "71c930e8d191b11e"
            ]
        ]
    },
    {
        "id": "71c930e8d191b11e",
        "type": "unsafe-function",
        "z": "f415efa5cb36c48f",
        "name": "Set Global Context",
        "func": "\nvar os = context.global.get('os');\nvar path = context.global.get('path');\nvar fs = context.global.get('fs');\n\ncontext.global.set(\"Drivers\", []);\n\nvar interfaces = os.networkInterfaces();\nvar addresses = [];\n\nfor (var k in interfaces) {\n    for (var k2 in interfaces[k]) {\n        var address = interfaces[k][k2];\n        if (address.family === 'IPv4' && !address.internal) {\n            addresses.push(address.address);\n        }\n    }\n}\n\nvar host = addresses[0];\nvar port = context.global.get('uiPort');\n\n\ncontext.global.set('namespace',\"http://\" + host + \":\" + port);\n\n                   \n//Retrieving the home directory\nvar homedirectory = context.global.get('staticDocs');\nvar asmodelfolderRef = \"aasx/_rels/aasx-origin.rels\";\n\nvar modelDirRef = path.join(homedirectory, asmodelfolderRef);\ncontext.global.set(\"ModelDirRef\", modelDirRef);\nmsg.filename = modelDirRef;\n\nvar msg2 = {};\nvar thumbnailRef = \"_rels/.rels\";\n\nvar thumbnailDirRef = path.join(homedirectory, thumbnailRef);\ncontext.global.set(\"AssetThumbnailRef\", thumbnailDirRef);\nmsg2.filename = thumbnailDirRef;\n\n\n\n\nvar novaasIdentifier = context.global.get(\"AASIdentifier\") || \"\";\nif(novaasIdentifier === \"\"){\n    novaasIdentifier = \"http://novaas@\" + host + \":\" + port + \"/aas\";\n}\n\ncontext.global.set(\"AASIdentifier\", novaasIdentifier);\ncontext.global.set(\"encrypt\", false);\n\nreturn [msg, msg2];",
        "outputs": 2,
        "noerr": 0,
        "x": 630,
        "y": 40,
        "wires": [
            [
                "1b1317d96c3773ff"
            ],
            [
                "75ac1eff328a0460"
            ]
        ]
    },
    {
        "id": "5f986a9c4efcb40a",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1650,
        "y": 20,
        "wires": []
    },
    {
        "id": "a5ed1db8d0106c4c",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "19_In",
        "links": [
            "23e7fb8f.11fddc",
            "bc91a45b.ea963"
        ],
        "x": 235,
        "y": 1136,
        "wires": [
            [
                "99e5913de3130cd8"
            ]
        ]
    },
    {
        "id": "5233c155331803fc",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "19_Out",
        "links": [
            "e2c6dfcd.e05b7"
        ],
        "x": 3135,
        "y": 1136,
        "wires": []
    },
    {
        "id": "fbf1a133ef95e913",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1670,
        "y": 1280,
        "wires": []
    },
    {
        "id": "5ef0045d948e2369",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "20_In",
        "links": [
            "d0bce444.7eb068"
        ],
        "x": 235,
        "y": 1320,
        "wires": [
            [
                "eee7483a83a7ab95"
            ]
        ]
    },
    {
        "id": "eb26aa73861332b3",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "20_Out",
        "links": [
            "eb085e57.c9db48"
        ],
        "x": 3135,
        "y": 1320,
        "wires": []
    },
    {
        "id": "a31896501b7e7943",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1730,
        "y": 1620,
        "wires": []
    },
    {
        "id": "723802bfbefba041",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "21_In",
        "links": [
            "727480a5.4236c",
            "8c710513.6043a8"
        ],
        "x": 235,
        "y": 1660,
        "wires": [
            [
                "bc102615a20cc11f"
            ]
        ]
    },
    {
        "id": "af50fbee467b2142",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "21_Out",
        "links": [
            "a4eb92d0.81718"
        ],
        "x": 3135,
        "y": 1660,
        "wires": []
    },
    {
        "id": "f1dda0e0acb0d3aa",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "22_In",
        "links": [
            "568d5f3.624242",
            "400d9646.413fe8"
        ],
        "x": 238,
        "y": 3900,
        "wires": [
            [
                "9c0ecfad5fbb3226"
            ]
        ]
    },
    {
        "id": "f53807a57083ee3a",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "22_Out",
        "links": [
            "d5524b85.c3c27",
            "7acbb909.02b518"
        ],
        "x": 3114,
        "y": 3900,
        "wires": []
    },
    {
        "id": "838ecef7315c2b72",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "23_In",
        "links": [
            "e67e2ede.e4bdc8"
        ],
        "x": 235,
        "y": 3980,
        "wires": [
            [
                "dabf6f00bad223ed"
            ]
        ]
    },
    {
        "id": "0a2c564d4b239ae5",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "23_Out",
        "links": [
            "1a319556.d2c653"
        ],
        "x": 3115,
        "y": 3980,
        "wires": []
    },
    {
        "id": "9c4082fd02249e34",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "g": "b85ff5d2fdca6f85",
        "name": "CallbackIn",
        "links": [
            "e05fcd52.be3ca8",
            "84b54255.d93878",
            "7af20dccc87566d5"
        ],
        "x": 235,
        "y": 4363,
        "wires": [
            [
                "98e8c09f56fc40a1",
                "f7e593d009947a60"
            ]
        ]
    },
    {
        "id": "a1230fbb48c84418",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "g": "b85ff5d2fdca6f85",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2370,
        "y": 4363,
        "wires": []
    },
    {
        "id": "c1fc2d96eadc66fd",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "status_SBI_In",
        "links": [
            "796fdeb5.8f68b8",
            "898d8bc.861cc78",
            "062a8c06448f6900"
        ],
        "x": 235,
        "y": 4060,
        "wires": [
            [
                "371ca9c1d8dd1cea"
            ]
        ]
    },
    {
        "id": "e145d526dab3c12a",
        "type": "unsafe-function",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "check AAS Status",
        "func": "var manifest = msg.payload;\nif(manifest != \"\" && manifest.submodels.length > 0){\n    var statusCheckSBI = context.global.get(\"statusCheckSBI\");\n    if(statusCheckSBI.connected){\n        if(statusCheckSBI.nrOfDataSources > 0){\n            if((typeof context.global.get('namespace') !== \"undefined\")){\n                context.global.set(\"NOVAAS_Overall_Status\", \"ok\");\n                msg.payload = context.global.get(\"NOVAAS_Overall_Status\");\n                return msg;\n            }\n        }\n    }\n}\ncontext.global.set(\"NOVAAS_Overall_Status\", \"not_ok\");\nmsg.payload = context.global.get(\"NOVAAS_Overall_Status\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 4060,
        "wires": [
            [
                "9f780d309e2d62ff"
            ]
        ]
    },
    {
        "id": "be59bd11c9bdba5d",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 4020,
        "wires": []
    },
    {
        "id": "9f780d309e2d62ff",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "NOVAAS_status_UI_out",
        "links": [
            "b3d953ee.708f1",
            "ef469c86.b0f528"
        ],
        "x": 3115,
        "y": 4060,
        "wires": []
    },
    {
        "id": "5f3ef4cb89738bf3",
        "type": "OS",
        "z": "f415efa5cb36c48f",
        "name": "",
        "x": 1850,
        "y": 4900,
        "wires": [
            [
                "a1d1160cd68c56e6",
                "a17c53aa9f99f2f2"
            ]
        ]
    },
    {
        "id": "6b4fa64fec25aba9",
        "type": "inject",
        "z": "f415efa5cb36c48f",
        "name": "Test",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1650,
        "y": 4800,
        "wires": [
            [
                "5f3ef4cb89738bf3"
            ]
        ]
    },
    {
        "id": "a1d1160cd68c56e6",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2240,
        "y": 4820,
        "wires": []
    },
    {
        "id": "b9c315e5880a2e4f",
        "type": "unsafe-function",
        "z": "f415efa5cb36c48f",
        "name": "set Model Filepath",
        "func": "var modelFilePath = context.global.get(\"staticDocs\").slice(0, -1) + msg.payload.Relationships.Relationship[0].$.Target;\ncontext.global.set(\"ModelFilePath\", modelFilePath);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1410,
        "y": 40,
        "wires": [
            [
                "5f986a9c4efcb40a",
                "ba66f0af3cde4057"
            ]
        ]
    },
    {
        "id": "1b1317d96c3773ff",
        "type": "file in",
        "z": "f415efa5cb36c48f",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1070,
        "y": 40,
        "wires": [
            [
                "e3e8fe977e1c4f87"
            ]
        ]
    },
    {
        "id": "e3e8fe977e1c4f87",
        "type": "xml",
        "z": "f415efa5cb36c48f",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1210,
        "y": 40,
        "wires": [
            [
                "b9c315e5880a2e4f"
            ]
        ]
    },
    {
        "id": "75ac1eff328a0460",
        "type": "file in",
        "z": "f415efa5cb36c48f",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1070,
        "y": 100,
        "wires": [
            [
                "fca1336d3a82bd63"
            ]
        ]
    },
    {
        "id": "fca1336d3a82bd63",
        "type": "xml",
        "z": "f415efa5cb36c48f",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1210,
        "y": 100,
        "wires": [
            [
                "881f2fc0304e67c2"
            ]
        ]
    },
    {
        "id": "881f2fc0304e67c2",
        "type": "unsafe-function",
        "z": "f415efa5cb36c48f",
        "name": "set Thumbnail Filepath",
        "func": "var thumbnailFilePath = msg.payload.Relationships.Relationship[1].$.Target;\ncontext.global.set(\"ThumbnailFilePath\", thumbnailFilePath);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1420,
        "y": 100,
        "wires": [
            [
                "4afa9f9588956903"
            ]
        ]
    },
    {
        "id": "4afa9f9588956903",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1630,
        "y": 100,
        "wires": []
    },
    {
        "id": "8c6ea5484ec85e5f",
        "type": "unsafe-function",
        "z": "f415efa5cb36c48f",
        "name": "PrepareOutput",
        "func": "//msg.filename = msg.payload.value;\n//msg.staticDocs = \"/home/gido/.node-red-novaas/\";\nvar fn = msg.req.params.fn;\n//msg.filename = context.global.get('staticDocs') + \"aasx/Document/\" + fn;\nmsg.payload = \"-name\" + \" \" + fn;\n//msg.payload = \"aasx/4830902_DPDM-6-15-PA---_0_.pdf\";\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 980,
        "y": 4180,
        "wires": [
            [
                "ddbda3e5eb6ac2b9"
            ]
        ]
    },
    {
        "id": "f9cfa72059424398",
        "type": "file in",
        "z": "f415efa5cb36c48f",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1850,
        "y": 4160,
        "wires": [
            [
                "39c425339983c56d"
            ]
        ]
    },
    {
        "id": "de688879cdb45d89",
        "type": "change",
        "z": "f415efa5cb36c48f",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1670,
        "y": 4160,
        "wires": [
            [
                "f9cfa72059424398"
            ]
        ]
    },
    {
        "id": "ddbda3e5eb6ac2b9",
        "type": "exec",
        "z": "f415efa5cb36c48f",
        "command": "find",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1250,
        "y": 4180,
        "wires": [
            [
                "74bb7c3aa75768a8",
                "fbc7d019e3d555f1"
            ],
            [],
            []
        ]
    },
    {
        "id": "74bb7c3aa75768a8",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 4140,
        "wires": []
    },
    {
        "id": "fbc7d019e3d555f1",
        "type": "unsafe-function",
        "z": "f415efa5cb36c48f",
        "name": "PrepareOutput",
        "func": "//msg.filename = msg.payload.value;\n//msg.staticDocs = \"/home/gido/.node-red-novaas/\";\nif(msg.payload != \"\"){\n    msg.filename = msg.payload;\n    //msg.payload = \"aasx/4830902_DPDM-6-15-PA---_0_.pdf\";\n    return [msg, null];\n} else {\n    msg.payload = \"document Not found\"\n    return [null, msg];\n}\n\n\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "x": 1480,
        "y": 4180,
        "wires": [
            [
                "de688879cdb45d89"
            ],
            [
                "39c425339983c56d"
            ]
        ]
    },
    {
        "id": "ba66f0af3cde4057",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "init_model_path_out",
        "mode": "link",
        "links": [
            "ba514096.0b1438"
        ],
        "x": 1815,
        "y": 40,
        "wires": []
    },
    {
        "id": "d626116ced2dc4f4",
        "type": "unsafe-function",
        "z": "f415efa5cb36c48f",
        "name": "Read File ",
        "func": "var fs = context.global.get('fs');\nvar content = \"\";\nfs.readFile(context.global.get('ModelFilePath'), \"utf8\", function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    content = data;\n\n    // Invoke the next step here however you like\n    //console.log(content);   // Put all of the code here (not the best solution)\n    processFile();          // Or put the next step in a function and invoke it\n});\n\nfunction processFile() {\n    msg.payload = content;\n    node.send(msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 220,
        "wires": [
            [
                "b6b4c4d3b88b980a",
                "99e469f80f1b188e"
            ]
        ]
    },
    {
        "id": "880b6fcb1e0267ac",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "f5d81204558f97fa"
        ],
        "x": 2980,
        "y": 280,
        "wires": [],
        "l": true
    },
    {
        "id": "e9af1dd4474a45f1",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "f5d81204558f97fa"
        ],
        "x": 2320,
        "y": 1900,
        "wires": [],
        "l": true
    },
    {
        "id": "b02343341548cb6d",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "f5d81204558f97fa"
        ],
        "x": 2340,
        "y": 2100,
        "wires": [],
        "l": true
    },
    {
        "id": "e1996a1656ac271d",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "f5d81204558f97fa"
        ],
        "x": 2340,
        "y": 2280,
        "wires": [],
        "l": true
    },
    {
        "id": "d86b4b628f132f76",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "f5d81204558f97fa"
        ],
        "x": 2340,
        "y": 2600,
        "wires": [],
        "l": true
    },
    {
        "id": "75069c95f9678337",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "f5d81204558f97fa"
        ],
        "x": 2340,
        "y": 2760,
        "wires": [],
        "l": true
    },
    {
        "id": "cdf4c73d6d630dc9",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "f5d81204558f97fa"
        ],
        "x": 2340,
        "y": 2940,
        "wires": [],
        "l": true
    },
    {
        "id": "6ddc06b9a268c3c5",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "NOVAAS_(Un)SubscriptionEvent_UI",
        "links": [
            "3da1a7ea98029b38"
        ],
        "x": 3000,
        "y": 3620,
        "wires": [],
        "l": true
    },
    {
        "id": "0f237688f2da86da",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "NOVAAS_(Un)SubscriptionEvent_UI",
        "links": [
            "3da1a7ea98029b38"
        ],
        "x": 2980,
        "y": 3780,
        "wires": [],
        "l": true
    },
    {
        "id": "4dca94ace516235f",
        "type": "switch",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "IF_statusMessage_not_null",
        "property": "statusMessage",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1960,
        "y": 3780,
        "wires": [
            [
                "0f237688f2da86da"
            ]
        ]
    },
    {
        "id": "99e469f80f1b188e",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "f6e9f8d542a7920d"
        ],
        "timeout": "30",
        "x": 1400,
        "y": 220,
        "wires": [
            [
                "b4174f6d119b818d",
                "880b6fcb1e0267ac"
            ]
        ]
    },
    {
        "id": "e2d8169cf9e31e54",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "0164be2bfb26ca39"
        ],
        "timeout": "30",
        "x": 1480,
        "y": 1000,
        "wires": [
            [
                "4afb1a25b07cb8e6"
            ]
        ]
    },
    {
        "id": "ef709bb1d7e09037",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "f23ca43625a9e6a1"
        ],
        "timeout": "30",
        "x": 1480,
        "y": 1060,
        "wires": [
            [
                "9214f25b766f1160"
            ]
        ]
    },
    {
        "id": "99e5913de3130cd8",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "410c0fbada5c9e58"
        ],
        "timeout": "30",
        "x": 1480,
        "y": 1140,
        "wires": [
            [
                "5233c155331803fc"
            ]
        ]
    },
    {
        "id": "d73d9df5e4f7eac3",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "0aa1678d42d04e72"
        ],
        "timeout": "30",
        "x": 1500,
        "y": 1220,
        "wires": [
            [
                "48dd0f77410601a7"
            ]
        ]
    },
    {
        "id": "eee7483a83a7ab95",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "b29f3cd6cc3a7088"
        ],
        "timeout": "30",
        "x": 1480,
        "y": 1320,
        "wires": [
            [
                "fbf1a133ef95e913",
                "eb26aa73861332b3"
            ]
        ]
    },
    {
        "id": "c3dc8e1cea37e3a5",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "26fc65d4261431c7"
        ],
        "timeout": "30",
        "x": 1500,
        "y": 1580,
        "wires": [
            [
                "1bc0d53ba52e0732",
                "9a4e060dfca965ef"
            ]
        ]
    },
    {
        "id": "bc102615a20cc11f",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "24a7ab1961126e37"
        ],
        "timeout": "30",
        "x": 1520,
        "y": 1660,
        "wires": [
            [
                "a31896501b7e7943",
                "af50fbee467b2142"
            ]
        ]
    },
    {
        "id": "e677f97c15bf98f6",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "10d99437d3489b69"
        ],
        "timeout": "30",
        "x": 1500,
        "y": 1760,
        "wires": [
            [
                "493bc07df0d791ad",
                "d4bf39cbde4f66a7"
            ]
        ]
    },
    {
        "id": "c67e488ed2e65d28",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "69ab768613b20c33"
        ],
        "timeout": "30",
        "x": 1520,
        "y": 2080,
        "wires": [
            [
                "6668deaf3c61a639",
                "b8743e16f1fcb826"
            ]
        ]
    },
    {
        "id": "c70caa7ada260630",
        "type": "function",
        "z": "f415efa5cb36c48f",
        "name": "",
        "func": "var headers = msg.req.headers;\nif (headers[\"content-type\"] == \"application/json\") {\n        return [msg, null];\n} else {\n    msg.statusCode = 400;\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1880,
        "wires": [
            [
                "ecb51a353e4a07ab"
            ],
            [
                "7a9d23eb290e4068"
            ]
        ]
    },
    {
        "id": "ecb51a353e4a07ab",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "959c1c2a13d3838f"
        ],
        "timeout": "30",
        "x": 1480,
        "y": 1860,
        "wires": [
            [
                "4d33c17c38255c67",
                "7a9d23eb290e4068"
            ]
        ]
    },
    {
        "id": "55270577fba4fc05",
        "type": "function",
        "z": "f415efa5cb36c48f",
        "name": "",
        "func": "var headers = msg.req.headers;\nif (headers[\"content-type\"] == \"application/json\") {\n        return [msg, null];\n} else {\n    msg.statusCode = 400;\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 2260,
        "wires": [
            [
                "d57ba74abf36bcbb"
            ],
            [
                "bc02e5913d585fcc"
            ]
        ]
    },
    {
        "id": "d57ba74abf36bcbb",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "6480f6dc57289f5c"
        ],
        "timeout": "30",
        "x": 1500,
        "y": 2220,
        "wires": [
            [
                "7a3b2485af13c6b0",
                "bc02e5913d585fcc"
            ]
        ]
    },
    {
        "id": "d6e1e8e14e2bed66",
        "type": "function",
        "z": "f415efa5cb36c48f",
        "name": "",
        "func": "var headers = msg.req.headers;\nif (headers[\"content-type\"] == \"application/json\") {\n        return [msg, null];\n} else {\n    msg.statusCode = 400;\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 2580,
        "wires": [
            [
                "9f10ecfcf9bb5364"
            ],
            [
                "488998e297d79210"
            ]
        ]
    },
    {
        "id": "9f10ecfcf9bb5364",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "817163f47e171076"
        ],
        "timeout": "30",
        "x": 1540,
        "y": 2540,
        "wires": [
            [
                "7960469ad4497a49",
                "488998e297d79210"
            ]
        ]
    },
    {
        "id": "7a7f5a962619b889",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "54548e6e797fc2e6"
        ],
        "timeout": "30",
        "x": 1560,
        "y": 2740,
        "wires": [
            [
                "0c50aae32b43a4bb",
                "6d5f761c134233fb"
            ]
        ]
    },
    {
        "id": "6ebd5059cc166d66",
        "type": "function",
        "z": "f415efa5cb36c48f",
        "name": "",
        "func": "var headers = msg.req.headers;\nif (headers[\"content-type\"] == \"application/json\") {\n        return [msg, null];\n} else {\n    msg.statusCode = 400;\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2920,
        "wires": [
            [
                "9681f56d26ce608a"
            ],
            [
                "10e511e82c836816"
            ]
        ]
    },
    {
        "id": "9681f56d26ce608a",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "86895e325b7e997f"
        ],
        "timeout": "30",
        "x": 1560,
        "y": 2900,
        "wires": [
            [
                "644bf16974ca4cc6",
                "10e511e82c836816"
            ]
        ]
    },
    {
        "id": "b13f02576aacce85",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "",
        "links": [
            "fb2a08fad5b64437"
        ],
        "timeout": "30",
        "x": 760,
        "y": 3700,
        "wires": [
            [
                "bcdfd890eb2e91c2"
            ]
        ]
    },
    {
        "id": "ab7f21495153f5fa",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "",
        "links": [
            "fb2a08fad5b64437"
        ],
        "timeout": "30",
        "x": 760,
        "y": 3820,
        "wires": [
            [
                "49eb0c3d325b8b34"
            ]
        ]
    },
    {
        "id": "371ca9c1d8dd1cea",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "",
        "links": [
            "f23ca43625a9e6a1"
        ],
        "timeout": "30",
        "x": 700,
        "y": 4060,
        "wires": [
            [
                "be59bd11c9bdba5d",
                "e145d526dab3c12a"
            ]
        ]
    },
    {
        "id": "41587f0637db95e9",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "",
        "links": [
            "4b32084ae98e0bb3"
        ],
        "timeout": "30",
        "x": 1580,
        "y": 3660,
        "wires": [
            [
                "14b5b585fb0247e5",
                "b5e82d6c2f67da44"
            ]
        ]
    },
    {
        "id": "d76c83f99068841f",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "",
        "links": [
            "8f5ca84b1787a611"
        ],
        "timeout": "30",
        "x": 1600,
        "y": 3800,
        "wires": [
            [
                "4dca94ace516235f",
                "e72c15b993724d44"
            ]
        ]
    },
    {
        "id": "9c0ecfad5fbb3226",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "",
        "links": [
            "f5b83e1a5370f003"
        ],
        "timeout": "30",
        "x": 1640,
        "y": 3900,
        "wires": [
            [
                "f53807a57083ee3a"
            ]
        ]
    },
    {
        "id": "dabf6f00bad223ed",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "g": "d56f57bf073f180e",
        "name": "",
        "links": [
            "e64dbf3f587db429"
        ],
        "timeout": "30",
        "x": 1660,
        "y": 3980,
        "wires": [
            [
                "0a2c564d4b239ae5"
            ]
        ]
    },
    {
        "id": "f7e593d009947a60",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "g": "b85ff5d2fdca6f85",
        "name": "",
        "links": [
            "6e6900c8e71ac69e"
        ],
        "timeout": "30",
        "x": 1400,
        "y": 4360,
        "wires": [
            [
                "a1230fbb48c84418"
            ]
        ]
    },
    {
        "id": "c84b0c7cde581592",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "OSsysDscr in",
        "links": [],
        "x": 735,
        "y": 4900,
        "wires": [
            [
                "5f3ef4cb89738bf3"
            ]
        ]
    },
    {
        "id": "a17c53aa9f99f2f2",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "OSsysDscr out",
        "mode": "return",
        "links": [],
        "x": 2795,
        "y": 4900,
        "wires": []
    },
    {
        "id": "9dcf832cda386516",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "fb2a08fad5b64437"
        ],
        "timeout": "30",
        "x": 1360,
        "y": 2400,
        "wires": [
            [
                "389f5d7b17f6532f",
                "c09468690038b481"
            ]
        ]
    },
    {
        "id": "680dcd17.852524",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "authDiscovery_In",
        "links": [
            "7f3fe823.9a8048"
        ],
        "x": 235,
        "y": 3060,
        "wires": [
            [
                "8256e693.081db8"
            ]
        ]
    },
    {
        "id": "8256e693.081db8",
        "type": "function",
        "z": "f415efa5cb36c48f",
        "name": "",
        "func": "var securityShellId = env.get(\"SECURITY_SHELL_ID\");\n\nvar securityMetamodelSubmodelId = env.get(\"SECURITY_METAMODEL_SUBMODEL_ID\");\n\nmsg.req = {params: {aasid: securityShellId, \n                    id: securityMetamodelSubmodelId\n}}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 3060,
        "wires": [
            [
                "a3afa02c.98eec",
                "c05bc5944d08b711"
            ]
        ]
    },
    {
        "id": "a3afa02c.98eec",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 3000,
        "wires": []
    },
    {
        "id": "b1ae420.2a962c",
        "type": "function",
        "z": "f415efa5cb36c48f",
        "name": "",
        "func": "if(msg.statusCode == \"200\"){\n    var submodel = msg.payload;\n    context.global.set(submodel.idShort, submodel);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 840,
        "y": 3060,
        "wires": [
            [
                "ba791c76.ca6668"
            ]
        ]
    },
    {
        "id": "c102822a.1e575",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 3000,
        "wires": []
    },
    {
        "id": "ba791c76.ca6668",
        "type": "switch",
        "z": "f415efa5cb36c48f",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 3060,
        "wires": [
            [
                "94d9bd76.3bbfe8"
            ],
            [
                "30b288e1.ec51a8"
            ]
        ]
    },
    {
        "id": "94d9bd76.3bbfe8",
        "type": "function",
        "z": "f415efa5cb36c48f",
        "name": "",
        "func": "var securityShellId = env.get(\"SECURITY_SHELL_ID\");\n\nvar securitySettingsSubmodelId = env.get(\"SECURITY_SETTINGS_SUBMODEL_ID\");\n\nmsg.req = {params: {aasid: securityShellId, \n                    id: securitySettingsSubmodelId\n}}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1180,
        "y": 3020,
        "wires": [
            [
                "5359dadc1b142318"
            ]
        ]
    },
    {
        "id": "30b288e1.ec51a8",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "authDiscovery_Out",
        "links": [
            "dfbf1931.2137e"
        ],
        "x": 3115,
        "y": 3060,
        "wires": []
    },
    {
        "id": "b7fd4964.adaaa8",
        "type": "http request",
        "z": "f415efa5cb36c48f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2550,
        "y": 3020,
        "wires": [
            [
                "30b288e1.ec51a8"
            ]
        ]
    },
    {
        "id": "94880e4c.56e838",
        "type": "switch",
        "z": "f415efa5cb36c48f",
        "name": "",
        "property": "url",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1910,
        "y": 3020,
        "wires": [
            [
                "b7fd4964.adaaa8"
            ],
            [
                "30b288e1.ec51a8"
            ]
        ]
    },
    {
        "id": "c8aab420.394018",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1670,
        "y": 2980,
        "wires": []
    },
    {
        "id": "b0411ba2.7e517",
        "type": "function",
        "z": "f415efa5cb36c48f",
        "name": "",
        "func": "if(msg.statusCode == \"200\"){\n    var submodel = msg.payload;\n    var submodelElements = submodel.submodelElements;\n    msg.url = \"\";\n    for(var element in submodelElements){\n        if(submodelElements[element].idShort == \"authenticationServer\") {\n            var values = submodelElements[element].value;\n            for(var valueElement in values){\n                if(values[valueElement].idShort == \"serverDiscoveryDocument\"){\n                    msg.url = values[valueElement].value;\n                    context.global.set(submodel.idShort, submodel);\n                } else if(values[valueElement].idShort == \"authenticationServerClient\"){\n                    context.global.set(values[valueElement].idShort, values[valueElement].value);\n                }\n            }\n            if(msg.url != \"\"){\n                return msg;\n            }\n        }\n    }\n    msg.statusCode = 400;\n    msg.payload = \"Error, serverDiscoveryDocument element does not exist\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1680,
        "y": 3020,
        "wires": [
            [
                "94880e4c.56e838",
                "909057dc.9fead"
            ]
        ]
    },
    {
        "id": "909057dc.9fead",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1830,
        "y": 2980,
        "wires": []
    },
    {
        "id": "c05bc5944d08b711",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "10d99437d3489b69"
        ],
        "timeout": "30",
        "x": 650,
        "y": 3060,
        "wires": [
            [
                "b1ae420.2a962c",
                "c102822a.1e575"
            ]
        ]
    },
    {
        "id": "5359dadc1b142318",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "10d99437d3489b69"
        ],
        "timeout": "30",
        "x": 1450,
        "y": 3020,
        "wires": [
            [
                "c8aab420.394018",
                "b0411ba2.7e517"
            ]
        ]
    },
    {
        "id": "7b48ced64946a8d2",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "g": "b85ff5d2fdca6f85",
        "name": "updateValueCallbackIn",
        "links": [
            "1fc06f6a8f3492b8",
            "8f9d3dd5a645bd46"
        ],
        "x": 235,
        "y": 4460,
        "wires": [
            [
                "893f967b73205095",
                "4872c068f48e839b"
            ]
        ]
    },
    {
        "id": "893f967b73205095",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "g": "b85ff5d2fdca6f85",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 450,
        "y": 4400,
        "wires": []
    },
    {
        "id": "5cea18b9856d1364",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "g": "b85ff5d2fdca6f85",
        "name": "",
        "links": [
            "86895e325b7e997f"
        ],
        "timeout": "30",
        "x": 860,
        "y": 4460,
        "wires": [
            [
                "e1994719bd7b4722"
            ]
        ]
    },
    {
        "id": "e1994719bd7b4722",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "g": "b85ff5d2fdca6f85",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2350,
        "y": 4460,
        "wires": []
    },
    {
        "id": "4872c068f48e839b",
        "type": "function",
        "z": "f415efa5cb36c48f",
        "g": "b85ff5d2fdca6f85",
        "name": "prepareUpdate",
        "func": "let splittedLink = [];\nsplittedLink = msg.link.split(\"/\");\nlet submodelId = splittedLink[splittedLink.length - 2];\nlet id = splittedLink[splittedLink.length - 1];\nlet aasId = msg.link.replace(\"/\" + submodelId + \"/\" + id, \"\");\nmsg.req = {\n    \"params\": { \"id\": id, \"submodelId\": submodelId, \"aasid\": aasId },\n    \"query\": { \"content\": msg.content }\n};\nif (Array.isArray(msg.value)) {\n    msg.value = msg.value.join(\";\");\n}\nmsg.payload = {};\nmsg.payload[id] = msg.value;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 4460,
        "wires": [
            [
                "a9c22279a032d681",
                "5cea18b9856d1364"
            ]
        ]
    },
    {
        "id": "a9c22279a032d681",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "g": "b85ff5d2fdca6f85",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 690,
        "y": 4420,
        "wires": []
    },
    {
        "id": "355ebc421a110c7e",
        "type": "actionflows_in",
        "z": "f415efa5cb36c48f",
        "name": "readSubmodelsFromAASUI in",
        "priority": "50",
        "links": [],
        "scope": "global",
        "x": 820,
        "y": 3400,
        "wires": [
            [
                "ea408c5004601f00"
            ]
        ]
    },
    {
        "id": "d60fe42b9bccc43c",
        "type": "actionflows_out",
        "z": "f415efa5cb36c48f",
        "name": "readSubmodelsFromAASUI out",
        "links": [],
        "x": 2770,
        "y": 3400,
        "wires": []
    },
    {
        "id": "baee765b243800f1",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1570,
        "y": 3360,
        "wires": []
    },
    {
        "id": "5534012c19356fdd",
        "type": "actionflows_in",
        "z": "f415efa5cb36c48f",
        "name": "updateSubmodelsFromAASUI in",
        "priority": "50",
        "links": [],
        "scope": "global",
        "x": 830,
        "y": 3480,
        "wires": [
            [
                "a65e63269d871d7e"
            ]
        ]
    },
    {
        "id": "234e0e0259ba0a70",
        "type": "actionflows_out",
        "z": "f415efa5cb36c48f",
        "name": "updateSubmodelsFromAASUI out",
        "links": [],
        "x": 2780,
        "y": 3480,
        "wires": []
    },
    {
        "id": "a65e63269d871d7e",
        "type": "unsafe-function",
        "z": "f415efa5cb36c48f",
        "name": "reterieveSubmodels",
        "func": "var submodels = msg.payload.InternalElement;\nmsg.payload = submodels;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1400,
        "y": 3480,
        "wires": [
            [
                "f94ed95503d469d7"
            ]
        ]
    },
    {
        "id": "f94ed95503d469d7",
        "type": "split",
        "z": "f415efa5cb36c48f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1670,
        "y": 3480,
        "wires": [
            [
                "6fd12bf18b772336",
                "e9596de65b955c7a"
            ]
        ]
    },
    {
        "id": "6fd12bf18b772336",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1790,
        "y": 3440,
        "wires": []
    },
    {
        "id": "bc236bd8fcc807bf",
        "type": "comment",
        "z": "f415efa5cb36c48f",
        "name": "Interaction with the AASUI, to be checked",
        "info": "",
        "x": 560,
        "y": 3200,
        "wires": []
    },
    {
        "id": "ea408c5004601f00",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "26fc65d4261431c7"
        ],
        "timeout": "30",
        "x": 1420,
        "y": 3400,
        "wires": [
            [
                "baee765b243800f1",
                "d60fe42b9bccc43c"
            ]
        ]
    },
    {
        "id": "e9596de65b955c7a",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "6480f6dc57289f5c"
        ],
        "timeout": "30",
        "x": 2000,
        "y": 3480,
        "wires": [
            [
                "234e0e0259ba0a70"
            ]
        ]
    },
    {
        "id": "3d24e4987a9374bb",
        "type": "link in",
        "z": "f415efa5cb36c48f",
        "name": "newConfiguration in",
        "links": [],
        "x": 815,
        "y": 3300,
        "wires": [
            [
                "14c24f89282d4443"
            ]
        ]
    },
    {
        "id": "a48c3697a0e3068c",
        "type": "link out",
        "z": "f415efa5cb36c48f",
        "name": "newConfiguration out",
        "mode": "return",
        "links": [],
        "x": 2785,
        "y": 3300,
        "wires": []
    },
    {
        "id": "14c24f89282d4443",
        "type": "function",
        "z": "f415efa5cb36c48f",
        "name": "manipulate Message",
        "func": "context.global.set(\"encrypt\", msg.payload.configuration.encrypt);\nmsg.payload = msg.payload.configuration.scheduling;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 3300,
        "wires": [
            [
                "b66c98a4ecdfcfaa"
            ]
        ]
    },
    {
        "id": "b66c98a4ecdfcfaa",
        "type": "link call",
        "z": "f415efa5cb36c48f",
        "name": "",
        "links": [
            "e64dbf3f587db429"
        ],
        "timeout": "30",
        "x": 1740,
        "y": 3300,
        "wires": [
            [
                "a48c3697a0e3068c",
                "1e9f28b8ed7f8f81"
            ]
        ]
    },
    {
        "id": "1e9f28b8ed7f8f81",
        "type": "debug",
        "z": "f415efa5cb36c48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2130,
        "y": 3220,
        "wires": []
    },
    {
        "id": "5a9c6dc54f6069c0",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "PersistModel",
        "func": "var manifest = context.flow.get('manifest');\nvar manifestJsonStr = JSON.stringify(manifest);\nmsg.payload = manifestJsonStr;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 1720,
        "wires": [
            [
                "706d0da20dacfe81"
            ]
        ]
    },
    {
        "id": "9a3d66f571d49632",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "RetrievingModelFilePath",
        "func": "msg.filename = context.global.get(\"ModelFilePath\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 1720,
        "wires": [
            [
                "5a9c6dc54f6069c0"
            ]
        ]
    },
    {
        "id": "c9e71b0b714443f3",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "RetrievingSubmodels...",
        "func": "var manifest = context.flow.get(\"manifest\");\nmsg.payload = manifest.submodels;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 500,
        "wires": [
            [
                "bd360da56e2833e5"
            ]
        ]
    },
    {
        "id": "f8e4e56adbf49e5b",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "BuildingJsonataQuery...",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\nmsg.shellsJsonStr = JSON.stringify(shells);\nmsg.jsonata = \"$[identification.id='\" + ShellId +\"'].submodels.keys\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 640,
        "wires": [
            [
                "944cfdbce8c78959"
            ]
        ]
    },
    {
        "id": "0966e160b48d7cd6",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "BuildingJsonataQuery...",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\nmsg.shellsJsonStr = JSON.stringify(shells);\nmsg.jsonata = \"$[identification.id='\" + ShellId +\"].submodels.keys\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 720,
        "wires": [
            [
                "e939d54315bf8cec"
            ]
        ]
    },
    {
        "id": "767191c8db596be1",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "BuildingJsonataQuery...",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\nmsg.shellsJsonStr = JSON.stringify(shells);\nmsg.jsonata = \"$[identification.id='\" + ShellId +\"'].submodels\";\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 840,
        "wires": [
            [
                "cfdf7e8192caeefe"
            ]
        ]
    },
    {
        "id": "2d8e5f9ba5767627",
        "type": "switch",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1440,
        "y": 837,
        "wires": [
            [
                "ba18a7c048639488",
                "ae42a704ace0ab61"
            ],
            [
                "ba18a7c048639488"
            ]
        ]
    },
    {
        "id": "ec857db83f5e4e62",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "UpdatingSubmodel...",
        "func": "var submodel = msg.payload;\n\nif(msg.jsonataStatus == \"Success\"){\n    var manifest = context.flow.get(\"manifest\");\n    var submodels = manifest.submodels;\n    for(var element in submodels){\n        if(submodels[element].identification.id == submodel.identification.id){\n            submodels[element] = submodel;\n            msg.statusCode = \"200\";\n            context.flow.set(\"manifest\", manifest);\n            return msg;\n        }\n    }\n} else {\n   msg.payload = \"Error submodel not found\";\n    msg.statusCode = \"409\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1140,
        "y": 1000,
        "wires": [
            [
                "940df06033c58b4f"
            ]
        ]
    },
    {
        "id": "940df06033c58b4f",
        "type": "switch",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1350,
        "y": 1000,
        "wires": [
            [
                "02679a37ad35e36a",
                "0b0e39c4b5249a5e"
            ],
            [
                "0b0e39c4b5249a5e"
            ]
        ]
    },
    {
        "id": "203418efeab70566",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "RetrievingEnvironment...",
        "func": "msg.payload = context.flow.get(\"manifest\");\nmsg.AASID = context.flow.get('AASIdentifier');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 240,
        "wires": [
            [
                "a1f57d4bcaa8fea6"
            ]
        ]
    },
    {
        "id": "bb49f9805616eaea",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "AddSubmodelElement",
        "func": "if(msg.jsonataStatus == \"Success\"){\n    msg.payload = \"Error submodelElement ID already exists\";\n    msg.statusCode = \"409\";\n    return msg;\n} else {\n    var submodel = JSON.parse(msg.submodelJsonStr);\n    submodel.submodelElements.push(msg.submodelElement);\n    msg.payload = submodel;\n    return msg;\n    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1640,
        "y": 1180,
        "wires": [
            [
                "f2e3a5ec84d16dcf"
            ]
        ]
    },
    {
        "id": "f2e3a5ec84d16dcf",
        "type": "switch",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "409",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1840,
        "y": 1180,
        "wires": [
            [
                "05aa21257d09df99"
            ],
            [
                "66877862a340f98b"
            ]
        ]
    },
    {
        "id": "a3afedf6fbdf3e1a",
        "type": "actionflows_in",
        "z": "9c0ecc72f77c934a",
        "name": "removeProperty in",
        "priority": "50",
        "links": [],
        "scope": "global",
        "x": 480,
        "y": 2120,
        "wires": [
            [
                "1d5cdbd080716130"
            ]
        ]
    },
    {
        "id": "5aefb9d4c191a786",
        "type": "actionflows_out",
        "z": "9c0ecc72f77c934a",
        "name": "removeProperty out",
        "links": [],
        "x": 1893.8097534179688,
        "y": 2118.3331909179688,
        "wires": []
    },
    {
        "id": "1d5cdbd080716130",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "RemovingProperty...",
        "func": "//var xml_string = msg.payload;\n//var XML = context.global.get('XML');\n\nvar propertyID = msg.req.params.id;\n//var doc = XML.parse( xml_string, { preserveAttributes: true, forceArrays: true  } );\n/*\nvar xml_string_composed = XML.stringify( doc, 'CAEXFile');\nmsg.composed = xml_string_composed;\n*/\n\n/*var parser = null;\n\ntry {\n    parser = new XML.Parser(xml_string, { preserveAttributes: true, forceArrays: true} );\n}\ncatch (err) {\n    throw err;\n}*/\n//var manifest = context.global.get(\"manifest\");\n//var manifest = parser.getTree();\n\n/*\nmsg.AASID = context.flow.get('AASIdentifier');\nvar propertiesList = context.flow.get('properties');\nfor(var propertyIndex in propertiesList){\n    if(propertyID == propertiesList[propertyIndex]._Attribs.ID){\n        propertiesList.splice(propertyIndex, 1);\n        var submodels = context.flow.get(\"submodels\");\n        for(var submodelIndex in submodels){\n        var properties = submodel.InternalElement;\n        for(var propertyIndex2 in properties){\n            if(properties[propertyIndex2]._Attribs.ID == propertyID){\n                propertiesList.splice(propertyIndex2, 1);\n            }\n        }\n        msg.statusCode = \"200\";\n        return msg;\n        }\n    }\n}\n\nmsg.payload = \"Error Property not found for Id: \" + propertyID;\nmsg.statusCode = \"404\";\nreturn msg;\n*/\n\nmsg.AASID = context.flow.get('AASIdentifier');\nvar manifest = context.flow.get('manifest');\nvar body = manifest.InstanceHierarchy[0].InternalElement[1];\nvar submodels = body.InternalElement;\nfor(var submodel in submodels){\n    var properties = submodels[submodel].InternalElement;\n    for(var propertyIndex in properties){\n        if(properties[propertyIndex]._Attribs.ID == propertyID){\n            properties.splice(propertyIndex, 1);\n            msg.statusCode = \"200\";\n            return msg;\n        }\n    }\n}\n\nmsg.payload = \"Error Property not found for Id: \" + propertyID;\nmsg.statusCode = \"404\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 2120,
        "wires": [
            [
                "0c8d855e3392b117"
            ]
        ]
    },
    {
        "id": "0c8d855e3392b117",
        "type": "switch",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1210.3809509277344,
        "y": 2109.2854614257812,
        "wires": [
            [
                "c0fbb4b7cd5887c7"
            ],
            [
                "5aefb9d4c191a786"
            ]
        ]
    },
    {
        "id": "3118db9f5b4fb3e8",
        "type": "actionflows_in",
        "z": "9c0ecc72f77c934a",
        "name": "updateProperty in",
        "priority": "50",
        "links": [],
        "scope": "global",
        "x": 480.3333740234375,
        "y": 2235.9522705078125,
        "wires": [
            [
                "182d8fbf7c04de76"
            ]
        ]
    },
    {
        "id": "6ebe303830ca25c3",
        "type": "actionflows_out",
        "z": "9c0ecc72f77c934a",
        "name": "updateProperty out",
        "links": [],
        "x": 1894.8096923828125,
        "y": 2242.333251953125,
        "wires": []
    },
    {
        "id": "182d8fbf7c04de76",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "UpdatingProperty...",
        "func": "var property = msg.payload;\n/*\nvar xml_string_composed = XML.stringify( doc, 'CAEXFile');\nmsg.composed = xml_string_composed;\n*/\n\n/*var parser = null;\n\ntry {\n    parser = new XML.Parser(xml_string, { preserveAttributes: true, forceArrays: true} );\n}\ncatch (err) {\n    throw err;\n}*/\n//var manifest = context.global.get(\"manifest\");\n//var manifest = parser.getTree();\n\n\n/*msg.AASID = context.flow.get('AASIdentifier');\nvar propertiesList = context.flow.get('properties');\nfor(var propertyIndex in propertiesList){\n    if(property._Attribs.ID == propertiesList[propertyIndex]._Attribs.ID){\n        propertiesList[propertyIndex] = property;\n        msg.statusCode = \"200\";\n        return msg;\n    }\n}\n\nmsg.statusCode = \"404\";\nreturn msg;*/\n\nmsg.AASID = context.flow.get('AASIdentifier');\nvar manifest = context.flow.get('manifest');\nvar body = manifest.InstanceHierarchy[0].InternalElement[1];\nvar submodels = body.InternalElement;\nfor(var submodel in submodels){\n    var properties = submodels[submodel].InternalElement;\n    for(var propertyIndex in properties){\n        if(property._Attribs.ID == properties[propertyIndex]._Attribs.ID){\n            properties[propertyIndex] = property;\n            msg.statusCode = \"200\";\n            return msg;\n        }\n    }\n}\n\nmsg.statusCode = \"404\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 2240,
        "wires": [
            [
                "0e3033afc09dd64f"
            ]
        ]
    },
    {
        "id": "0e3033afc09dd64f",
        "type": "switch",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1217.3808898925781,
        "y": 2236.28515625,
        "wires": [
            [
                "de1ebd5d16dc3668"
            ],
            [
                "6ebe303830ca25c3"
            ]
        ]
    },
    {
        "id": "e784fdb6ea9a778a",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "RetrievingPropertyById...",
        "func": "var propertyId = msg.req.params.id;\n\n/*msg.AASID = context.flow.get('AASIdentifier');\nvar propertyId = msg.req.params.id;\nvar properties = context.flow.get(\"properties\");\nfor(var propertyIndex in properties){\n        var property = properties[propertyIndex];\n        var id = property._Attribs.ID; \n        if (id.localeCompare(propertyId) === 0){\n                msg.payload = property;\n                msg.statusCode = \"200\";\n                return msg;\n        }\n    }\nmsg.statusCode = \"404\";\nmsg.payload = \"property with id:\" + propertyId + \" not found\"\nreturn msg;*/\n\nmsg.AASID = context.flow.get('AASIdentifier');\nvar manifest = context.flow.get('manifest');\nvar body = manifest.InstanceHierarchy[0].InternalElement[1];\nvar submodels = body.InternalElement;\nfor(var submodel in submodels){\n    var properties = submodels[submodel].InternalElement;\n    for(var propertyIndex in properties){\n        var property = properties[propertyIndex];\n        var id = property._Attribs.ID;\n        if (id.localeCompare(propertyId) === 0){\n                msg.payload = property;\n                msg.statusCode = \"200\";\n                return msg;\n        }\n    }\n}\n\nmsg.statusCode = \"404\";\nmsg.payload = \"property with id:\" + propertyId + \" not found\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 850,
        "y": 2040,
        "wires": [
            [
                "598d9a71c8c88a3c"
            ]
        ]
    },
    {
        "id": "598d9a71c8c88a3c",
        "type": "switch",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1072.8570556640625,
        "y": 2038.5714111328125,
        "wires": [
            [
                "10f8f616b8e20cea"
            ],
            [
                "83c40dea83e88de5"
            ]
        ]
    },
    {
        "id": "10f8f616b8e20cea",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "RetrievingDataInterface...",
        "func": "var property = msg.payload;\nvar di = property.InternalElement[1];\nmsg.payload = di;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1347.1429443359375,
        "y": 1995.71435546875,
        "wires": [
            [
                "83c40dea83e88de5"
            ]
        ]
    },
    {
        "id": "9de0656e6e8da38b",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "RetrievingAssets...",
        "func": "var ShellId = msg.req.params.aasid;\nif(msg.jsonataStatus == \"Success\"){\n    var keys = msg.jsonataResult;\n    var manifest = context.flow.get(\"manifest\");\n    var assets = manifest.assets;\n    for(var index1 in keys){\n        var key = keys[index1];\n        for(var index2 in assets){\n            var asset = assets[index2];\n            if(asset.identification.id === key.value){\n                msg.payload = asset;\n                msg.statusCode = \"200\";\n                return msg;\n            }\n        }\n    }\n    msg.payload = \"Asset not found\";\n    msg.statusCode = \"400\";\n} else {\n    msg.statusCode = \"404\";\n    msg.payload = \"Asset Administration Shell with id:\" + ShellId + \" not found\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 360,
        "wires": [
            [
                "c98fbb2371d5bf31"
            ]
        ]
    },
    {
        "id": "3af66dd8a4c4e689",
        "type": "inject",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 461,
        "y": 57.500030517578125,
        "wires": [
            [
                "448034660f5c8eab"
            ]
        ]
    },
    {
        "id": "448034660f5c8eab",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "IntializeVariables",
        "func": "//Initialize flow variables\n/*var uuid = context.global.get('AASIdentifier')||'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });*/\n/*var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });*/\n\nvar manifest = context.flow.get(\"manifest\") || \"\";\n//var submodels = context.flow.get(\"submodels\") || \"\";\n//var properties = context.flow.get(\"properties\") || \"\";\n\ncontext.flow.set(\"manifest\", manifest);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 778.1428527832031,
        "y": 57.500030517578125,
        "wires": [
            []
        ]
    },
    {
        "id": "6586e90fe3351cf0",
        "type": "json",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 140,
        "wires": [
            [
                "1702ab9a851b0156",
                "3487af5dc03691c4"
            ]
        ]
    },
    {
        "id": "1702ab9a851b0156",
        "type": "debug",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 910,
        "y": 100,
        "wires": []
    },
    {
        "id": "3487af5dc03691c4",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "CreateInMemoryManifest",
        "func": "var manifest = msg.payload;\ncontext.flow.set(\"manifest\", manifest);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 140,
        "wires": [
            [
                "4e61d6893af314c5"
            ]
        ]
    },
    {
        "id": "b6b63e5adda106bf",
        "type": "wait-paths",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "paths": "[\"path_2\",\"path_1\"]",
        "timeout": 15000,
        "finalTimeout": 60000,
        "x": 1430,
        "y": 180,
        "wires": [
            [
                "822b5345a580d957"
            ]
        ]
    },
    {
        "id": "4e61d6893af314c5",
        "type": "change",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "paths[\"path_1\"]",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 140,
        "wires": [
            [
                "b6b63e5adda106bf"
            ]
        ]
    },
    {
        "id": "8297ad45eeb980cb",
        "type": "change",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "paths[\"path_2\"]",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 180,
        "wires": [
            [
                "b6b63e5adda106bf"
            ]
        ]
    },
    {
        "id": "944cfdbce8c78959",
        "type": "jsonata",
        "z": "9c0ecc72f77c934a",
        "name": "jsonata",
        "property": "shellsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 950,
        "y": 640,
        "wires": [
            [
                "256d752fda7e4a1e"
            ]
        ]
    },
    {
        "id": "256d752fda7e4a1e",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "ReadSubmodel",
        "func": "var ShellId = msg.req.params.aasid;\nvar submodelId = msg.req.params.id;\nif(msg.jsonataStatus == \"Success\"){\n    var keys = msg.jsonataResult;\n    var manifest = context.flow.get(\"manifest\");\n    var submodels = manifest.submodels;\n    for(var index1 in keys){\n        var key = keys[index1];\n        for(var index2 in submodels){\n            var submodel = submodels[index2];\n            if(submodel.identification.id === key.value){\n                if(submodel.idShort === submodelId){\n                    msg.payload = submodel;\n                    msg.statusCode = \"200\";\n                    return msg;\n                }\n            }\n        }\n    }\n    msg.payload = \"Submodel with id:\" + submodelId + \" not found\";\n    msg.statusCode = \"400\";\n} else {\n    msg.statusCode = \"404\";\n    msg.payload = \"Asset Administration Shell with id:\" + ShellId + \" not found\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 640,
        "wires": [
            [
                "1fa899666b68c9b7"
            ]
        ]
    },
    {
        "id": "e939d54315bf8cec",
        "type": "jsonata",
        "z": "9c0ecc72f77c934a",
        "name": "jsonata",
        "property": "shellsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 940,
        "y": 720,
        "wires": [
            [
                "d65567ff4f57cdd2"
            ]
        ]
    },
    {
        "id": "d65567ff4f57cdd2",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "Add/Update Submodel",
        "func": "var submodel = msg.payload;\nvar submodelId = msg.req.param.id;\nif(msg.jsonataStatus == \"Success\"){\n    \n    var keys = msg.jsonataResult;\n    var manifest = context.flow.get(\"manifest\");\n    var submodels = manifest.submodels;\n    for(var index1 in keys){\n        var key = keys[index1];\n        for(var index2 in submodels){\n            var submodel = submodels[index2];\n            if(submodel.identification.id === key.value){\n                if(submodel.idShort === submodelId){\n                    submodels[index2] = submodel;\n                    msg.statusCode = \"200\";\n                    context.flow.set(\"manifest\", manifest);\n                    return msg;\n                }\n            }\n        }\n    }\n} else {\n    msg.statusCode = \"201\";\n    var manifest = context.flow.get(\"manifest\");\n    manifest.submodels.push(msg.payload);\n    var shells = manifest.assetAdministrationShells;\n    for(var element in shells){\n        if(shells[element].identification.id == shellId){\n            var submodelRef = {};\n            var keys = [];\n            var ref = {};\n            ref.type = \"Submodel\";\n            ref.local = true;\n            ref.value = submodel.identification.id;\n            ref.index = 0;\n            ref.idType = submodel.identification.idType;\n            keys.push(ref);\n            submodelRef.keys = keys;\n            context.flow.set(\"manifest\", manifest);\n        }\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 720,
        "wires": [
            [
                "e8be448ff9ab0aa7",
                "540f5d0d27390ac6"
            ]
        ]
    },
    {
        "id": "c0fb90347c7a28b4",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "BuildingJsonataQuery...",
        "func": "//var xml_string = msg.payload;\n//var XML = context.global.get('XML');\n\nvar submodel = msg.payload;\nvar manifest = context.flow.get(\"manifest\");\nmsg.submodelsJsonStr = JSON.stringify(manifest.submodels);\nmsg.jsonata = \"$[identification.id='\" + submodel.identification.id +\"']\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 1000,
        "wires": [
            [
                "946dd1ba3bfe6d97"
            ]
        ]
    },
    {
        "id": "946dd1ba3bfe6d97",
        "type": "jsonata",
        "z": "9c0ecc72f77c934a",
        "name": "jsonata",
        "property": "submodelsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 940,
        "y": 1000,
        "wires": [
            [
                "ec857db83f5e4e62"
            ]
        ]
    },
    {
        "id": "9943d052ceeeadbf",
        "type": "comment",
        "z": "9c0ecc72f77c934a",
        "name": "No more Supported",
        "info": "",
        "x": 390,
        "y": 1940,
        "wires": []
    },
    {
        "id": "919a6c4f9af17474",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "BuildingJsonataQuery...",
        "func": "//var xml_string = msg.payload;\n//var XML = context.global.get('XML');\n\nvar conceptDescription = msg.payload;\nvar manifest = context.flow.get(\"manifest\");\nmsg.conceptDescriptionsJsonStr = JSON.stringify(manifest.conceptDescriptions);\nmsg.jsonata = \"$[identification.id='\" + conceptDescription.identification.id +\"']\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 1620,
        "wires": [
            [
                "3b78ac16c65d9bc3"
            ]
        ]
    },
    {
        "id": "3b78ac16c65d9bc3",
        "type": "jsonata",
        "z": "9c0ecc72f77c934a",
        "name": "jsonata",
        "property": "conceptDescriptionsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 940,
        "y": 1620,
        "wires": [
            [
                "1ec44d1e14f6b722"
            ]
        ]
    },
    {
        "id": "1ec44d1e14f6b722",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "AddConceptDescription",
        "func": "if(msg.jsonataStatus == \"Success\"){\n    msg.payload = \"Error Concept Description with ID already exists\";\n    msg.statusCode = \"409\";\n} else {\n    msg.statusCode = \"201\";\n    var manifest = context.flow.get(\"manifest\");\n    manifest.conceptDescriptions.push(msg.payload);\n    context.flow.set(\"manifest\", manifest);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 1620,
        "wires": [
            [
                "7cab65a4899f92b7"
            ]
        ]
    },
    {
        "id": "7cab65a4899f92b7",
        "type": "switch",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "409",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1350,
        "y": 1620,
        "wires": [
            [
                "587bffa3c1116a38",
                "ac7f7445cb3b2c22"
            ],
            [
                "ac7f7445cb3b2c22"
            ]
        ]
    },
    {
        "id": "4c936bebaae62d6d",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "BuildingJsonataQuery...",
        "func": "var submodelElement = msg.submodelElement;\nmsg.submodelJsonStr = JSON.stringify(msg.payload);\nmsg.jsonata = \"$.submodelElements[idShort='\" + submodelElement.idShort + \"']\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1210,
        "y": 1180,
        "wires": [
            [
                "aeb556947183fa29"
            ]
        ]
    },
    {
        "id": "6bad5f3a2df7cd5e",
        "type": "switch",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 1260,
        "wires": [
            [
                "4c936bebaae62d6d"
            ],
            [
                "05aa21257d09df99"
            ]
        ]
    },
    {
        "id": "fad31c576b924146",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "submodelElement",
        "func": "msg.submodelElement = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 1260,
        "wires": [
            [
                "e30d510a2039a9be"
            ]
        ]
    },
    {
        "id": "aeb556947183fa29",
        "type": "jsonata",
        "z": "9c0ecc72f77c934a",
        "name": "jsonata",
        "property": "submodelJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 1440,
        "y": 1180,
        "wires": [
            [
                "bb49f9805616eaea"
            ]
        ]
    },
    {
        "id": "a4d123cd81593b8f",
        "type": "switch",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 1380,
        "wires": [
            [
                "af31823ed8cc34ce"
            ],
            [
                "cdccbdaaa2411436"
            ]
        ]
    },
    {
        "id": "af31823ed8cc34ce",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "RemoveSubmodelElement",
        "func": "var manifest = context.flow.get(\"manifest\");\nvar submodels = manifest.submodels;\nfor(var elementSub in submodels){\n    var submodelElements = submodels[elementSub].submodelElements;\n    for(var elementSubElem in submodelElements){\n        if(submodelElements[elementSubElem].idShort == msg.payload.idShort){\n            submodelElements.splice(elementSubElem, 1);\n            context.flow.set(\"manifest\", manifest);\n            msg.statusCode = \"200\";\n            return msg;\n        }\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 1360,
        "wires": [
            [
                "cdccbdaaa2411436"
            ]
        ]
    },
    {
        "id": "417d1d85b7093402",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "RetrievingShells...",
        "func": "var manifest = context.flow.get(\"manifest\");\nmsg.payload = manifest.assetAdministrationShells;;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1127.4263916015625,
        "y": 299.59288024902344,
        "wires": [
            [
                "189a7e9d6446eccf"
            ]
        ]
    },
    {
        "id": "72a257384d34dbe4",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "RetrievingAas...",
        "func": "var ShellId = msg.req.params.id;\nif(msg.jsonataStatus == \"Success\"){\n    msg.payload = msg.jsonataResult;\n    msg.statusCode = \"200\";\n} else {\n    msg.statusCode = \"404\";\n    msg.payload = \"Asset Adminsitration Shell with id:\" + ShellId + \" not found\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 440,
        "wires": [
            [
                "d56454e805ce26a6"
            ]
        ]
    },
    {
        "id": "0f5bf2aa8413e2be",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "BuildingJsonataQuery...",
        "func": "var ShellId = msg.req.params.id;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\nmsg.shellsJsonStr = JSON.stringify(shells);\nmsg.jsonata = \"$[identification.id='\" + ShellId +\"']\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 440,
        "wires": [
            [
                "b2bef6ceb92e81b8"
            ]
        ]
    },
    {
        "id": "b2bef6ceb92e81b8",
        "type": "jsonata",
        "z": "9c0ecc72f77c934a",
        "name": "jsonata",
        "property": "shellsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 900,
        "y": 440,
        "wires": [
            [
                "72a257384d34dbe4"
            ]
        ]
    },
    {
        "id": "3dec09cfba262a04",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "BuildingJsonataQuery...",
        "func": "var ShellId = msg.req.params.id;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\nmsg.shellsJsonStr = JSON.stringify(shells);\nmsg.jsonata = \"$[identification.id='\" + ShellId +\"'].submodels\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 560,
        "wires": [
            [
                "5b2198b5f0e669a1"
            ]
        ]
    },
    {
        "id": "5b2198b5f0e669a1",
        "type": "jsonata",
        "z": "9c0ecc72f77c934a",
        "name": "jsonata",
        "property": "shellsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 950,
        "y": 560,
        "wires": [
            [
                "2b39cebeceabe0e2"
            ]
        ]
    },
    {
        "id": "2b39cebeceabe0e2",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "ReadSubmodel",
        "func": "var ShellId = msg.req.params.id;\nif(msg.jsonataStatus == \"Success\"){\n    msg.payload = msg.jsonataResult;\n    msg.statusCode = \"200\";\n} else {\n    msg.statusCode = \"404\";\n    msg.payload = \"Asset Administration Shell with id:\" + ShellId + \" not found\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 560,
        "wires": [
            [
                "4c12b239ee33d48d"
            ]
        ]
    },
    {
        "id": "d8b3127717b415e7",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "Remove Submodel",
        "func": "var submodel = msg.payload;\nvar submodelId = msg.req.params.id;\nvar shellId = msg.req.params.aasid;\n\nif(msg.jsonataStatus == \"Success\"){\n    var refs = msg.jsonataResult;\n    var manifest = context.flow.get(\"manifest\");\n    var submodels = manifest.submodels;\n    var deletedSubmodelRef = \"\";\n    for(var index1 in refs){\n        var ref = refs[index1];\n        for(var index2 in submodels){\n            var submodel = submodels[index2];\n            if(submodel.identification.id === ref.keys[0].value){\n                if(submodel.idShort === submodelId){\n                    submodels.splice(index2, 1);\n                    deletedSubmodelRef = submodel.identification.id;\n                    break;\n                }\n            }\n        }\n    }\n    if(deletedSubmodelRef !== \"\"){\n        var shells = manifest.assetAdministrationShells;\n        for(var index3 in shells){\n            var shell = shells[index3];\n            if(shell.identification.id == shellId){\n                var submodelRefs = shell.submodels;\n                for(var index4 in submodelRefs){\n                    var submodelRef = submodelRefs[index4];\n                    if(submodelRef.keys[0].value === deletedSubmodelRef){\n                        submodelRefs.splice(index4, 1);\n                        break;\n                    }\n                }\n            }\n        }\n        msg.statusCode = \"200\";\n        context.flow.set(\"manifest\", manifest);\n    } else {\n        msg.statusCode = \"400\";\n        msg.payload = \"Submodel with id: \" + submodelId + \" not found\";\n    }\n    \n} else {\n    msg.statusCode = \"400\";\n    msg.payload = \"Asset Administration Shell with id:\" + shellId + \" not found\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1190,
        "y": 837,
        "wires": [
            [
                "2d8e5f9ba5767627"
            ]
        ]
    },
    {
        "id": "cfdf7e8192caeefe",
        "type": "jsonata",
        "z": "9c0ecc72f77c934a",
        "name": "jsonata",
        "property": "shellsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 960,
        "y": 840,
        "wires": [
            [
                "d8b3127717b415e7"
            ]
        ]
    },
    {
        "id": "ad3c19ce0e2456f5",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "BuildingJsonataQuery...",
        "func": "var submodelId = msg.req.params.submodelId;\nvar submodelCollectionId = [];\nsubmodelCollectionId = msg.req.params.submodelId.split(\".\");\nvar jsonataQuery = \"[$[idShort=\\\"\" + submodelId + \"\\\"]]\";\n\nvar manifest = context.flow.get('manifest');\n    \nvar submodels = manifest.submodels;\nmsg.submodelsJsonStr = JSON.stringify(submodels);\nmsg.jsonata = jsonataQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 1100,
        "wires": [
            [
                "ae5d808f69df19ae",
                "bc72e16f84fd3f95"
            ]
        ]
    },
    {
        "id": "ae5d808f69df19ae",
        "type": "jsonata",
        "z": "9c0ecc72f77c934a",
        "name": "jsonata",
        "property": "submodelsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 990,
        "y": 1100,
        "wires": [
            [
                "daa8871e7a5b1315",
                "9f76c400e35b0791"
            ]
        ]
    },
    {
        "id": "c629b02e8a75a937",
        "type": "debug",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1520,
        "y": 1040,
        "wires": []
    },
    {
        "id": "bc72e16f84fd3f95",
        "type": "debug",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1040,
        "y": 1060,
        "wires": []
    },
    {
        "id": "daa8871e7a5b1315",
        "type": "debug",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1300,
        "y": 1060,
        "wires": []
    },
    {
        "id": "9f76c400e35b0791",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "ReadSubmodelElement",
        "func": "var iterate = function(submodelElementId, collectionIds, submodelElements){\n    for(var index in submodelElements){\n        var submodelElement = submodelElements[index];\n        if(submodelElement.modelType.name !== \"SubmodelElementCollection\"){\n                if(submodelElement.idShort === submodelElementId){\n                    return submodelElement;\n                    \n                }\n            }  else {\n                for(var collIndex in collectionIds){\n                    var collectionId = collectionIds[collIndex];\n                    if(submodelElement.idShort === collectionId){\n                        collectionIds.splice(collIndex, 1);\n                        var result = iterate(submodelElementId, collectionIds, submodelElement.value);\n                        return result;\n                }\n                }\n                \n            }\n    }\n    return \"\";\n}\n\nvar submodelElementId = msg.req.params.id;\nvar submodelId = msg.req.params.submodelId;\n\nvar submodelCollectionId = [];\nvar splittedSubmodel = submodelElementId.split(\".\");\n//submodelId = splittedSubmodel[0];\n\nif(splittedSubmodel.length > 1){\n    for(var index in splittedSubmodel){\n        if(index < (splittedSubmodel.length - 1)){\n            submodelCollectionId.push(splittedSubmodel[index]);\n        } else {\n            submodelElementId = splittedSubmodel[index];\n        }\n    }\n}\n\nvar selectedSubmodels = [];\nvar selctedSubmodelElements = [];\nif(msg.jsonataStatus == \"Success\"){\n    var submodels = msg.jsonataResult;\n    for(var index1 in submodels){\n        var submodelElements = submodels[index1].submodelElements;\n        var result = iterate(submodelElementId, submodelCollectionId, submodelElements);\n        if (result != \"\"){\n            selectedSubmodels.push(submodels[index1]);\n            selctedSubmodelElements.push(result);\n        }\n    }\n    if(selectedSubmodels.length > 0){\n        var manifest = context.flow.get(\"manifest\");\n        var shells = manifest.assetAdministrationShells;\n        var ShellId = msg.req.params.aasid;\n        for(var index3 in shells){\n            if(shells[index3].identification.id === ShellId){\n                var submodelRefs = shells[index3].submodels;\n                for(var index4 in submodelRefs){\n                    var ref = submodelRefs[index4];\n                    for(var index5 in selectedSubmodels){\n                        if(ref.keys[0].value === selectedSubmodels[index5].identification.id){\n                            msg.statusCode = \"200\";\n                            msg.payload = selctedSubmodelElements[index5];\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        msg.statusCode = \"404\";\n        msg.payload = \"SubmodelElement with id:\" + submodelElementId + \" not found\";\n    }\n    \n\n} else {\n    msg.statusCode = \"404\";\n    msg.payload = \"Submodel with id:\" + submodelId + \" not found\";\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1100,
        "wires": [
            [
                "c629b02e8a75a937",
                "087de3211e557366"
            ]
        ]
    },
    {
        "id": "a7ea7dc45d3ddb11",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "BuildingJsonataQuery...",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\nmsg.shellsJsonStr = JSON.stringify(shells);\nmsg.jsonata = \"$[identification.id='\" + ShellId +\"'].asset.keys\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 360,
        "wires": [
            [
                "61cc4292f1376b09"
            ]
        ]
    },
    {
        "id": "61cc4292f1376b09",
        "type": "jsonata",
        "z": "9c0ecc72f77c934a",
        "name": "jsonata",
        "property": "shellsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 900,
        "y": 360,
        "wires": [
            [
                "9de0656e6e8da38b",
                "aea63968c2411ad4"
            ]
        ]
    },
    {
        "id": "aea63968c2411ad4",
        "type": "debug",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 400,
        "wires": []
    },
    {
        "id": "f6e9f8d542a7920d",
        "type": "link in",
        "z": "9c0ecc72f77c934a",
        "name": "createEnv in",
        "links": [],
        "x": 315,
        "y": 180,
        "wires": [
            [
                "8297ad45eeb980cb",
                "6586e90fe3351cf0"
            ]
        ]
    },
    {
        "id": "822b5345a580d957",
        "type": "link out",
        "z": "9c0ecc72f77c934a",
        "name": "createEnv out",
        "mode": "return",
        "links": [],
        "x": 2215,
        "y": 180,
        "wires": []
    },
    {
        "id": "0164be2bfb26ca39",
        "type": "link in",
        "z": "9c0ecc72f77c934a",
        "name": "persistEnv in",
        "links": [],
        "x": 315,
        "y": 1720,
        "wires": [
            [
                "9a3d66f571d49632"
            ]
        ]
    },
    {
        "id": "53e56d4e1cacdf99",
        "type": "link out",
        "z": "9c0ecc72f77c934a",
        "name": "persistEnv out",
        "mode": "return",
        "links": [],
        "x": 2215,
        "y": 1720,
        "wires": []
    },
    {
        "id": "f23ca43625a9e6a1",
        "type": "link in",
        "z": "9c0ecc72f77c934a",
        "name": "readEnv in",
        "links": [],
        "x": 315,
        "y": 240,
        "wires": [
            [
                "203418efeab70566"
            ]
        ]
    },
    {
        "id": "a1f57d4bcaa8fea6",
        "type": "link out",
        "z": "9c0ecc72f77c934a",
        "name": "readEnv out",
        "mode": "return",
        "links": [],
        "x": 2215,
        "y": 240,
        "wires": []
    },
    {
        "id": "410c0fbada5c9e58",
        "type": "link in",
        "z": "9c0ecc72f77c934a",
        "name": "readShells in",
        "links": [],
        "x": 315,
        "y": 300,
        "wires": [
            [
                "417d1d85b7093402"
            ]
        ]
    },
    {
        "id": "189a7e9d6446eccf",
        "type": "link out",
        "z": "9c0ecc72f77c934a",
        "name": "readShells out",
        "mode": "return",
        "links": [],
        "x": 2215,
        "y": 300,
        "wires": []
    },
    {
        "id": "0aa1678d42d04e72",
        "type": "link in",
        "z": "9c0ecc72f77c934a",
        "name": "readAssets in",
        "links": [],
        "x": 315,
        "y": 360,
        "wires": [
            [
                "a7ea7dc45d3ddb11"
            ]
        ]
    },
    {
        "id": "c98fbb2371d5bf31",
        "type": "link out",
        "z": "9c0ecc72f77c934a",
        "name": "readAssets out",
        "mode": "return",
        "links": [],
        "x": 2215,
        "y": 360,
        "wires": []
    },
    {
        "id": "b29f3cd6cc3a7088",
        "type": "link in",
        "z": "9c0ecc72f77c934a",
        "name": "readAas in",
        "links": [],
        "x": 315,
        "y": 440,
        "wires": [
            [
                "0f5bf2aa8413e2be"
            ]
        ]
    },
    {
        "id": "d56454e805ce26a6",
        "type": "link out",
        "z": "9c0ecc72f77c934a",
        "name": "readAas out",
        "mode": "return",
        "links": [],
        "x": 2215,
        "y": 440,
        "wires": []
    },
    {
        "id": "26fc65d4261431c7",
        "type": "link in",
        "z": "9c0ecc72f77c934a",
        "name": "readSubmodels in",
        "links": [],
        "x": 315,
        "y": 500,
        "wires": [
            [
                "c9e71b0b714443f3"
            ]
        ]
    },
    {
        "id": "bd360da56e2833e5",
        "type": "link out",
        "z": "9c0ecc72f77c934a",
        "name": "readSubmodels out",
        "mode": "return",
        "links": [],
        "x": 2215,
        "y": 500,
        "wires": []
    },
    {
        "id": "24a7ab1961126e37",
        "type": "link in",
        "z": "9c0ecc72f77c934a",
        "name": "readAasSubmodels in",
        "links": [],
        "x": 315,
        "y": 560,
        "wires": [
            [
                "3dec09cfba262a04"
            ]
        ]
    },
    {
        "id": "4c12b239ee33d48d",
        "type": "link out",
        "z": "9c0ecc72f77c934a",
        "name": "readAasSubmodels out",
        "mode": "return",
        "links": [],
        "x": 2215,
        "y": 560,
        "wires": []
    },
    {
        "id": "10d99437d3489b69",
        "type": "link in",
        "z": "9c0ecc72f77c934a",
        "name": "readSubmodel in",
        "links": [],
        "x": 315,
        "y": 640,
        "wires": [
            [
                "f8e4e56adbf49e5b"
            ]
        ]
    },
    {
        "id": "1fa899666b68c9b7",
        "type": "link out",
        "z": "9c0ecc72f77c934a",
        "name": "readSubmodel out",
        "mode": "return",
        "links": [],
        "x": 2215,
        "y": 640,
        "wires": []
    },
    {
        "id": "959c1c2a13d3838f",
        "type": "link in",
        "z": "9c0ecc72f77c934a",
        "name": "addSubmodel in",
        "links": [],
        "x": 315,
        "y": 720,
        "wires": [
            [
                "0966e160b48d7cd6"
            ]
        ]
    },
    {
        "id": "e8be448ff9ab0aa7",
        "type": "link out",
        "z": "9c0ecc72f77c934a",
        "name": "addSubmodel out",
        "mode": "return",
        "links": [],
        "x": 2215,
        "y": 720,
        "wires": []
    },
    {
        "id": "540f5d0d27390ac6",
        "type": "link call",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "links": [
            "0164be2bfb26ca39"
        ],
        "timeout": "30",
        "x": 1410,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "69ab768613b20c33",
        "type": "link in",
        "z": "9c0ecc72f77c934a",
        "name": "removeSubmodel in",
        "links": [],
        "x": 315,
        "y": 840,
        "wires": [
            [
                "767191c8db596be1"
            ]
        ]
    },
    {
        "id": "ba18a7c048639488",
        "type": "link out",
        "z": "9c0ecc72f77c934a",
        "name": "removeSubmodel out",
        "mode": "return",
        "links": [],
        "x": 2215,
        "y": 840,
        "wires": []
    },
    {
        "id": "ae42a704ace0ab61",
        "type": "link call",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "links": [
            "0164be2bfb26ca39"
        ],
        "timeout": "30",
        "x": 1610,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "02679a37ad35e36a",
        "type": "link call",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "links": [
            "0164be2bfb26ca39"
        ],
        "timeout": "30",
        "x": 1530,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "6480f6dc57289f5c",
        "type": "link in",
        "z": "9c0ecc72f77c934a",
        "name": "updateSubmodel in",
        "links": [],
        "x": 315,
        "y": 1000,
        "wires": [
            [
                "c0fb90347c7a28b4"
            ]
        ]
    },
    {
        "id": "0b0e39c4b5249a5e",
        "type": "link out",
        "z": "9c0ecc72f77c934a",
        "name": "updateSubmodel out",
        "mode": "return",
        "links": [],
        "x": 2215,
        "y": 1000,
        "wires": []
    },
    {
        "id": "fb2a08fad5b64437",
        "type": "link in",
        "z": "9c0ecc72f77c934a",
        "name": "readSubmodelElement in",
        "links": [],
        "x": 315,
        "y": 1100,
        "wires": [
            [
                "ad3c19ce0e2456f5"
            ]
        ]
    },
    {
        "id": "087de3211e557366",
        "type": "link out",
        "z": "9c0ecc72f77c934a",
        "name": "readSubmodelElement out",
        "mode": "return",
        "links": [],
        "x": 2215,
        "y": 1100,
        "wires": []
    },
    {
        "id": "817163f47e171076",
        "type": "link in",
        "z": "9c0ecc72f77c934a",
        "name": "addSubmodelElement in",
        "links": [],
        "x": 315,
        "y": 1260,
        "wires": [
            [
                "fad31c576b924146"
            ]
        ]
    },
    {
        "id": "05aa21257d09df99",
        "type": "link out",
        "z": "9c0ecc72f77c934a",
        "name": "addSubmodelElement out",
        "mode": "return",
        "links": [],
        "x": 2215,
        "y": 1260,
        "wires": []
    },
    {
        "id": "66877862a340f98b",
        "type": "link call",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "links": [
            "6480f6dc57289f5c"
        ],
        "timeout": "30",
        "x": 1910,
        "y": 1240,
        "wires": [
            [
                "05aa21257d09df99"
            ]
        ]
    },
    {
        "id": "54548e6e797fc2e6",
        "type": "link in",
        "z": "9c0ecc72f77c934a",
        "name": "removeSubmodelElement in",
        "links": [],
        "x": 315,
        "y": 1380,
        "wires": [
            [
                "10a70546ca560fec"
            ]
        ]
    },
    {
        "id": "cdccbdaaa2411436",
        "type": "link out",
        "z": "9c0ecc72f77c934a",
        "name": "removeSubmodelElement out",
        "mode": "return",
        "links": [],
        "x": 2215,
        "y": 1380,
        "wires": []
    },
    {
        "id": "10a70546ca560fec",
        "type": "link call",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "links": [
            "fb2a08fad5b64437"
        ],
        "timeout": "30",
        "x": 850,
        "y": 1380,
        "wires": [
            [
                "a4d123cd81593b8f"
            ]
        ]
    },
    {
        "id": "e30d510a2039a9be",
        "type": "link call",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "links": [
            "10d99437d3489b69"
        ],
        "timeout": "30",
        "x": 910,
        "y": 1260,
        "wires": [
            [
                "6bad5f3a2df7cd5e"
            ]
        ]
    },
    {
        "id": "587bffa3c1116a38",
        "type": "link call",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "links": [
            "0164be2bfb26ca39"
        ],
        "timeout": "30",
        "x": 1570,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "86895e325b7e997f",
        "type": "link in",
        "z": "9c0ecc72f77c934a",
        "name": "updateSubmodelElement in",
        "links": [],
        "x": 315,
        "y": 1500,
        "wires": [
            [
                "c99decec.108e8"
            ]
        ]
    },
    {
        "id": "6249d0ae120cfb6c",
        "type": "link out",
        "z": "9c0ecc72f77c934a",
        "name": "updateSubmodelElement out",
        "mode": "return",
        "links": [],
        "x": 2215,
        "y": 1500,
        "wires": []
    },
    {
        "id": "059d6bc1b406b2b3",
        "type": "link in",
        "z": "9c0ecc72f77c934a",
        "name": "addConceptDescription in",
        "links": [],
        "x": 315,
        "y": 1620,
        "wires": [
            [
                "919a6c4f9af17474"
            ]
        ]
    },
    {
        "id": "ac7f7445cb3b2c22",
        "type": "link out",
        "z": "9c0ecc72f77c934a",
        "name": "addConceptDescription out",
        "mode": "return",
        "links": [],
        "x": 2215,
        "y": 1620,
        "wires": []
    },
    {
        "id": "c0fbb4b7cd5887c7",
        "type": "link call",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "links": [
            "0164be2bfb26ca39"
        ],
        "timeout": "30",
        "x": 1390,
        "y": 2080,
        "wires": [
            [
                "5aefb9d4c191a786"
            ]
        ]
    },
    {
        "id": "de1ebd5d16dc3668",
        "type": "link call",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "links": [
            "0164be2bfb26ca39"
        ],
        "timeout": "30",
        "x": 1390,
        "y": 2220,
        "wires": [
            [
                "6ebe303830ca25c3"
            ]
        ]
    },
    {
        "id": "83c40dea83e88de5",
        "type": "actionflows_out",
        "z": "9c0ecc72f77c934a",
        "name": "readPropertyInterface out",
        "links": [],
        "x": 1933.0951843261719,
        "y": 2045.952392578125,
        "wires": []
    },
    {
        "id": "7afb25a91abf5db7",
        "type": "actionflows_in",
        "z": "9c0ecc72f77c934a",
        "name": "readPropertyInterface in",
        "priority": "50",
        "links": [],
        "scope": "global",
        "x": 425.7141418457031,
        "y": 2040,
        "wires": [
            [
                "e784fdb6ea9a778a"
            ]
        ]
    },
    {
        "id": "706d0da20dacfe81",
        "type": "file",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1340,
        "y": 1720,
        "wires": [
            [
                "53e56d4e1cacdf99"
            ]
        ]
    },
    {
        "id": "768efb1a.62c604",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "UpdatingSubmodelElement...",
        "func": "let submodelElement = \"\";\nlet submodelElementId = msg.req.params.id;\nlet submodelId = msg.req.params.submodelId;\nlet persist = \"false\";\nif (msg.req.query.content == \"value\") {\n\n    msg.payload.value = msg.submodelElement[msg.submodelElementId];\n    submodelElement = msg.payload;\n\n} else {\n    submodelElement = msg.submodelElement;\n    persist = \"true\";\n}\n\nvar updateSubmodelElement = function (submodelElements, submodelElement, value) {\n\n    let updated = false;\n    for (let index in submodelElements) {\n        let element = submodelElements[index];\n        if (element.modelType.name == \"SubmodelElementCollection\") {\n            updated = updateSubmodelElement(element.value, submodelElement, value);\n            if (updated) {\n                return updated;\n            }\n        } else {\n\n            if (element.idShort == submodelElement.idShort) {\n                element.value = value;\n                return true;\n            }\n\n        }\n    }\n    return updated;\n\n}\n\nif (msg.jsonataStatus == \"Success\") {\n    let value = msg.submodelElement[msg.submodelElementId];\n    let submodelElement = msg.payload;\n    let submodel = msg.jsonataResult[0];\n    let submodelIdentifier = submodel.identification.id;\n    let manifestSubmodelToUpdate = \"\";\n    let result = false;\n    let manifest = context.flow.get(\"manifest\");\n    let manifestSubmodels = manifest.submodels;\n    for (let manifestSubmodel in manifestSubmodels) {\n        let manifestSubmodelIdentifier = manifestSubmodels[manifestSubmodel].identification.id;\n        if (submodelIdentifier == manifestSubmodelIdentifier) {\n            let manifestSubmodelElements = manifestSubmodels[manifestSubmodel].submodelElements;\n            result = updateSubmodelElement(manifestSubmodelElements, submodelElement, value);\n            if (result) {\n                context.flow.set(\"manifest\", manifest);\n                if (persist == \"true\") {\n                    return [msg, null];\n                } else {\n                    return [null, msg];\n                }\n            }\n        }\n    }\n\n    msg.statusCode = \"404\";\n    //msg.payload = \"Submodel with id:\" + submodelIdentifier + \" not found!!!\";\n    return [null, msg];\n\n} else {\n    msg.statusCode = \"404\";\n    msg.payload = \"Submodel with id:\" + submodelId + \" not found\";\n    return [null, msg];\n}\n\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "x": 1790,
        "y": 1440,
        "wires": [
            [
                "2e0ef87ae37655e9",
                "6249d0ae120cfb6c"
            ],
            [
                "6249d0ae120cfb6c"
            ]
        ]
    },
    {
        "id": "3cf9675a.eb4928",
        "type": "switch",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1510,
        "y": 1460,
        "wires": [
            [
                "78f4c2e4.f28bcc",
                "768efb1a.62c604"
            ],
            [
                "6249d0ae120cfb6c"
            ]
        ]
    },
    {
        "id": "c99decec.108e8",
        "type": "unsafe-function",
        "z": "9c0ecc72f77c934a",
        "name": "BuildingJsonataQuery...",
        "func": "//var xml_string = msg.payload;\n//var XML = context.global.get('XML');\n\nmsg.submodelElement = msg.payload;\nmsg.submodelElementId = msg.req.params.id;\nmsg.req.params.id = msg.req.params.submodelId;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 1500,
        "wires": [
            [
                "02157f126a36c845"
            ]
        ]
    },
    {
        "id": "78f4c2e4.f28bcc",
        "type": "debug",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1490,
        "y": 1400,
        "wires": []
    },
    {
        "id": "eebdedc7c3c0954d",
        "type": "link call",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "links": [
            "fb2a08fad5b64437"
        ],
        "timeout": "30",
        "x": 1310,
        "y": 1460,
        "wires": [
            [
                "3cf9675a.eb4928"
            ]
        ]
    },
    {
        "id": "37b3dae381c34ec2",
        "type": "debug",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 1420,
        "wires": []
    },
    {
        "id": "02157f126a36c845",
        "type": "link call",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "links": [
            "10d99437d3489b69"
        ],
        "timeout": "30",
        "x": 730,
        "y": 1500,
        "wires": [
            [
                "37b3dae381c34ec2",
                "f416fff6010dbb4f"
            ]
        ]
    },
    {
        "id": "f416fff6010dbb4f",
        "type": "switch",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 1500,
        "wires": [
            [
                "67a4873f76838cd0"
            ],
            [
                "6249d0ae120cfb6c"
            ]
        ]
    },
    {
        "id": "67a4873f76838cd0",
        "type": "change",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "req.params.id",
                "pt": "msg",
                "to": "submodelElementId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 1460,
        "wires": [
            [
                "eebdedc7c3c0954d"
            ]
        ]
    },
    {
        "id": "2e0ef87ae37655e9",
        "type": "link call",
        "z": "9c0ecc72f77c934a",
        "name": "",
        "links": [
            "0164be2bfb26ca39"
        ],
        "timeout": "30",
        "x": 2080,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "7935eecd6cc1f862",
        "type": "comment",
        "z": "92b23faeba8402de",
        "name": "Return Data Flow Created",
        "info": "",
        "x": 1050,
        "y": 319,
        "wires": []
    },
    {
        "id": "9886daea8cc40acf",
        "type": "unsafe-function",
        "z": "92b23faeba8402de",
        "name": "UpdateSubscriptions",
        "func": "var subscriptions = context.flow.get(\"subscriptions\");\nvar subscription = msg.req.params.aasid + \";\" + msg.req.params.submodelId + \";\" + msg.req.params.id + \";\" + msg.req.body;\nsubscriptions.push(subscription);\ncontext.flow.set(\"subscriptions\", subscriptions);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1280,
        "y": 339,
        "wires": [
            [
                "9b5721d1972cc2d0"
            ]
        ]
    },
    {
        "id": "83f9ca8ee3e301e9",
        "type": "comment",
        "z": "92b23faeba8402de",
        "name": "Internal Interface Entry Point",
        "info": "",
        "x": 260,
        "y": 20,
        "wires": []
    },
    {
        "id": "bc399f81e7b745ed",
        "type": "inject",
        "z": "92b23faeba8402de",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 225.952392578125,
        "y": 75.857177734375,
        "wires": [
            [
                "d3a9cb947b4a9fda"
            ]
        ]
    },
    {
        "id": "d3a9cb947b4a9fda",
        "type": "unsafe-function",
        "z": "92b23faeba8402de",
        "name": "flowVariables",
        "func": "context.flow.set('subscriptions', []);\ncontext.global.set('statusCheckSBI', \"\");",
        "outputs": 1,
        "noerr": 0,
        "x": 810.3273315429688,
        "y": 75.85719299316406,
        "wires": [
            []
        ]
    },
    {
        "id": "dec21473368cfcfa",
        "type": "unsafe-function",
        "z": "92b23faeba8402de",
        "name": "UpdateSubscriptions",
        "func": "var subscriptions = context.flow.get(\"subscriptions\");\nvar subscription = msg.req.params.aasid + \";\" + msg.req.params.submodelId + \";\" + msg.req.params.id + \";\" + msg.req.body;\nfor(var index in subscriptions){\n    if(subscriptions[index] == subscription){\n        subscriptions.splice(index, 1);\n    }\n}\ncontext.flow.set(\"subscriptions\", subscriptions);\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1280,
        "y": 480,
        "wires": [
            [
                "75dcb1025d391fe3"
            ]
        ]
    },
    {
        "id": "3f55fba58ca339be",
        "type": "comment",
        "z": "92b23faeba8402de",
        "name": "Return Data Flow Deleted",
        "info": "",
        "x": 1050,
        "y": 460,
        "wires": []
    },
    {
        "id": "c9073efe67935f40",
        "type": "debug",
        "z": "92b23faeba8402de",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 460,
        "y": 300,
        "wires": []
    },
    {
        "id": "f26fdac1d1e1145c",
        "type": "debug",
        "z": "92b23faeba8402de",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 415.71429443359375,
        "wires": []
    },
    {
        "id": "0e448ea2e67f11b5",
        "type": "debug",
        "z": "92b23faeba8402de",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 660,
        "wires": []
    },
    {
        "id": "60a9a6836db62665",
        "type": "unsafe-function",
        "z": "92b23faeba8402de",
        "name": "getSubscriptions",
        "func": "var subscriptions = context.flow.get(\"subscriptions\") || [];\nmsg.payload = subscriptions;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 900,
        "wires": [
            [
                "580f66a33a97c895"
            ]
        ]
    },
    {
        "id": "3dae076bfe2fe7ad",
        "type": "msg-speed",
        "z": "92b23faeba8402de",
        "name": "",
        "frequency": "min",
        "interval": "1",
        "estimation": true,
        "ignore": false,
        "x": 910,
        "y": 620,
        "wires": [
            [
                "b7a61b6a73310da5"
            ],
            [
                "04d00c31165861f8"
            ]
        ]
    },
    {
        "id": "9307af9eb569d4df",
        "type": "unsafe-function",
        "z": "92b23faeba8402de",
        "name": "stats",
        "func": "var subscriptions = context.flow.get(\"subscriptions\");\nif(subscriptions.length > 0){\n    var stats = context.global.get(\"statsNBI\");\n    var msgSize = msg.averageMsgSize;\n    var msgSizeIntervalAndFrequency = msg.intervalAndFrequency;\n    stats.msgSize = msgSize;\n    stats.msgSizeIntervalAndFrequency = msgSizeIntervalAndFrequency;\n    context.global.set(\"statsNBI\", stats);\n} else {\n    var stats = context.global.get(\"statsNBI\");\n    var msgSize = 0;\n    var msgSizeIntervalAndFrequency = \"n/a\";\n    stats.msgSize = msgSize;\n    stats.msgSizeIntervalAndFrequency = msgSizeIntervalAndFrequency;\n    context.global.set(\"statsNBI\", stats);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1950,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "8e35cf276b5fb859",
        "type": "debug",
        "z": "92b23faeba8402de",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1020,
        "wires": []
    },
    {
        "id": "cd87cea86bb0c342",
        "type": "unsafe-function",
        "z": "92b23faeba8402de",
        "name": "",
        "func": "context.global.set(\"statsSBI\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 700,
        "wires": [
            [
                "fec2b4d46b48bfcc"
            ]
        ]
    },
    {
        "id": "fec2b4d46b48bfcc",
        "type": "debug",
        "z": "92b23faeba8402de",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 700,
        "wires": []
    },
    {
        "id": "a21be0ae6883dd2c",
        "type": "unsafe-function",
        "z": "92b23faeba8402de",
        "name": "checkHealthStatus",
        "func": "var statusCheck = context.global.get(\"statusCheckSBI\");\nif(msg.payload.statusCheck != \"\" && msg.payload != \"connectionStatusCheck\"){\n    if(msg.payload.statusCheck.connected == true && msg.payload.statusCheck.nrOfDataSources > 0){\n        context.global.set(\"statusCheckSBI\", msg.payload.statusCheck);\n    }\n}\nelse {\n    statusCheck = {};\n    statusCheck.connected = false;\n    statusCheck.nrOfDatasources = 0;\n    context.global.set(\"statusCheckSBI\", statusCheck);\n}\nmsg.pyload = {\"statusCheckSBI\": statusCheck};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1440,
        "y": 1160,
        "wires": [
            [
                "062a8c06448f6900"
            ]
        ]
    },
    {
        "id": "792addb0f592804e",
        "type": "inject",
        "z": "92b23faeba8402de",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "connectionStatusCheck",
        "payloadType": "str",
        "x": 370,
        "y": 1160,
        "wires": [
            [
                "261a65e7d389a419"
            ]
        ]
    },
    {
        "id": "06ed8c4a14cad41e",
        "type": "debug",
        "z": "92b23faeba8402de",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 1060,
        "wires": []
    },
    {
        "id": "062a8c06448f6900",
        "type": "link out",
        "z": "92b23faeba8402de",
        "name": "status_SBI_Out",
        "mode": "link",
        "links": [
            "c1fc2d96eadc66fd"
        ],
        "x": 1885,
        "y": 1160,
        "wires": []
    },
    {
        "id": "9d8cf528b9d0af95",
        "type": "unsafe-function",
        "z": "92b23faeba8402de",
        "name": "prepare Observation",
        "func": "//var observation = JSON.parse(msg.payload);\nvar subscriptions = context.flow.get(\"subscriptions\");\nvar outMsgs = [];\nfor (var subscription in subscriptions) {\n    var splittedSubscription = subscriptions[subscription].split(\";\");\n    if (msg.payload.observableReference.includes(splittedSubscription[0]) && msg.payload.observableReference.includes(splittedSubscription[1]) && msg.payload.observableReference.includes(splittedSubscription[2])) {\n        var observation = msg.payload;\n        observation.source = context.global.get(\"AASIdentifier\");\n        var outMsg = observation;\n        outMsg.topic = splittedSubscription[3];\n        outMsgs.push(outMsg);\n        //msg.topic = splittedSubscription[3];\n    }\n}\n//var observation = msg.payload;\n//observation.source = context.global.get(\"AASIdentifier\");\n//msg.payload = observation;\n//return msg;\nreturn [outMsgs];",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 600,
        "wires": [
            [
                "5340d179805d2845",
                "107a44dc5e0baea6"
            ]
        ]
    },
    {
        "id": "5340d179805d2845",
        "type": "debug",
        "z": "92b23faeba8402de",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1590,
        "y": 560,
        "wires": []
    },
    {
        "id": "7af20dccc87566d5",
        "type": "link out",
        "z": "92b23faeba8402de",
        "name": "CallbackOut",
        "mode": "link",
        "links": [
            "9c4082fd02249e34"
        ],
        "x": 1995,
        "y": 620,
        "wires": []
    },
    {
        "id": "107a44dc5e0baea6",
        "type": "msg-size",
        "z": "92b23faeba8402de",
        "name": "",
        "frequency": "min",
        "interval": 1,
        "statusContent": "avg",
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "humanReadableStatus": true,
        "x": 1700,
        "y": 600,
        "wires": [
            [
                "9307af9eb569d4df"
            ],
            [
                "7af20dccc87566d5"
            ]
        ]
    },
    {
        "id": "b7a61b6a73310da5",
        "type": "unsafe-function",
        "z": "92b23faeba8402de",
        "name": "stats",
        "func": "var subscriptions = context.flow.get(\"subscriptions\");\nif(subscriptions.length > 0){\n    var stats = context.global.get(\"statsNBI\") || {};\n    var msgSpeed = msg.payload;\n    var msgIntervalAndFrequency = msg.intervalAndFrequency;\n    stats.msgSpeed = msgSpeed;\n    stats.IntervalAndFrequency = msgIntervalAndFrequency;\n    context.global.set(\"statsNBI\", stats);\n} else {\n    var stats = context.global.get(\"statsNBI\") || {};\n    var msgSpeed = 0;\n    var msgIntervalAndFrequency = \"n/a\";\n    stats.msgSpeed = msgSpeed;\n    stats.IntervalAndFrequency = msgIntervalAndFrequency;\n    context.global.set(\"statsNBI\", stats);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "e08f90bd45bf2f5d",
        "type": "sub-link-output",
        "z": "92b23faeba8402de",
        "inputs": 0,
        "name": "",
        "topic": "metrics",
        "link": "d2edf304.fdfa2",
        "priority": "0",
        "aliasType": "str",
        "alias": "",
        "clone": false,
        "x": 210,
        "y": 700,
        "wires": [
            [
                "cd87cea86bb0c342"
            ],
            [
                "b1889a934af7b660"
            ]
        ]
    },
    {
        "id": "b1889a934af7b660",
        "type": "debug",
        "z": "92b23faeba8402de",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 740,
        "wires": []
    },
    {
        "id": "8190c8ab7c5b442b",
        "type": "sub-link-output",
        "z": "92b23faeba8402de",
        "inputs": 0,
        "name": "",
        "topic": "routed",
        "link": "d2edf304.fdfa2",
        "priority": "0",
        "aliasType": "str",
        "alias": "",
        "clone": false,
        "x": 210,
        "y": 620,
        "wires": [
            [
                "3dae076bfe2fe7ad"
            ],
            [
                "0e448ea2e67f11b5"
            ]
        ]
    },
    {
        "id": "04d00c31165861f8",
        "type": "Load Balance",
        "z": "92b23faeba8402de",
        "defaultcapacity": 100,
        "dynamic": "d7e6d6dc.d37318",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 3,
        "routes": "2",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 1120,
        "y": 620,
        "wires": [
            [],
            [
                "9d8cf528b9d0af95"
            ],
            [
                "f0ade6eeeca08499"
            ]
        ]
    },
    {
        "id": "f0ade6eeeca08499",
        "type": "unsafe-function",
        "z": "92b23faeba8402de",
        "name": "prepare Observation",
        "func": "//var observation = JSON.parse(msg.payload);\nvar subscriptions = context.flow.get(\"subscriptions\");\nvar outMsgs = [];\nfor (var subscription in subscriptions) {\n    var splittedSubscription = subscriptions[subscription].split(\";\");\n    if (msg.payload.observableReference.includes(splittedSubscription[0]) && msg.payload.observableReference.includes(splittedSubscription[1]) && msg.payload.observableReference.includes(splittedSubscription[2])) {\n        var observation = msg.payload;\n        observation.source = context.global.get(\"AASIdentifier\");\n        var outMsg = observation;\n        outMsg.topic = splittedSubscription[3];\n        outMsgs.push(outMsg);\n        //msg.topic = splittedSubscription[3];\n    }\n}\n//var observation = msg.payload;\n//observation.source = context.global.get(\"AASIdentifier\");\n//msg.payload = observation;\n//return msg;\nreturn [outMsgs];",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 640,
        "wires": [
            [
                "107a44dc5e0baea6"
            ]
        ]
    },
    {
        "id": "4b32084ae98e0bb3",
        "type": "link in",
        "z": "92b23faeba8402de",
        "name": "callSBISubscribe in",
        "links": [],
        "x": 175,
        "y": 340,
        "wires": [
            [
                "c9073efe67935f40",
                "d22adb3413ce73f0"
            ]
        ]
    },
    {
        "id": "9b5721d1972cc2d0",
        "type": "link out",
        "z": "92b23faeba8402de",
        "name": "callSBISubscribe out",
        "mode": "return",
        "links": [],
        "x": 1875,
        "y": 340,
        "wires": []
    },
    {
        "id": "8f5ca84b1787a611",
        "type": "link in",
        "z": "92b23faeba8402de",
        "name": "callSBIUnsubscribe in",
        "links": [],
        "x": 175,
        "y": 480,
        "wires": [
            [
                "6f037794.4913b8"
            ]
        ]
    },
    {
        "id": "75dcb1025d391fe3",
        "type": "link out",
        "z": "92b23faeba8402de",
        "name": "callSBIUnsubscribe out",
        "mode": "return",
        "links": [],
        "x": 1875,
        "y": 480,
        "wires": []
    },
    {
        "id": "f5b83e1a5370f003",
        "type": "link in",
        "z": "92b23faeba8402de",
        "name": "callSBIReadSubscriptions in",
        "links": [],
        "x": 205,
        "y": 900,
        "wires": [
            [
                "60a9a6836db62665"
            ]
        ]
    },
    {
        "id": "580f66a33a97c895",
        "type": "link out",
        "z": "92b23faeba8402de",
        "name": "callSBIReadSubscriptions out",
        "mode": "return",
        "links": [],
        "x": 1885,
        "y": 900,
        "wires": []
    },
    {
        "id": "e64dbf3f587db429",
        "type": "link in",
        "z": "92b23faeba8402de",
        "name": "callSBIConfigureScheduling in",
        "links": [],
        "x": 205,
        "y": 980,
        "wires": [
            [
                "d3e26758e47232b9",
                "8e35cf276b5fb859"
            ]
        ]
    },
    {
        "id": "d3ef35a69fe12d66",
        "type": "link out",
        "z": "92b23faeba8402de",
        "name": "callSBIConfigureScheduling out",
        "mode": "return",
        "links": [],
        "x": 1885,
        "y": 980,
        "wires": []
    },
    {
        "id": "d3e26758e47232b9",
        "type": "link call",
        "z": "92b23faeba8402de",
        "name": "",
        "links": [
            "423ebc1bab8716ee"
        ],
        "timeout": "30",
        "x": 1240,
        "y": 980,
        "wires": [
            [
                "d3ef35a69fe12d66"
            ]
        ]
    },
    {
        "id": "261a65e7d389a419",
        "type": "link call",
        "z": "92b23faeba8402de",
        "name": "",
        "links": [
            "49ac6b2ea6155ea3"
        ],
        "timeout": "30",
        "x": 1170,
        "y": 1160,
        "wires": [
            [
                "06ed8c4a14cad41e",
                "a21be0ae6883dd2c"
            ]
        ]
    },
    {
        "id": "d22adb3413ce73f0",
        "type": "unsafe-function",
        "z": "92b23faeba8402de",
        "name": "attachLink",
        "func": "msg.topic = \"observe\";\nlet link = msg.req.params.aasid + \"/\" + msg.req.params.submodelId + \"/\" + msg.req.params.id;\nmsg.link = link;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 340,
        "wires": [
            [
                "be01a4f767b35273"
            ]
        ]
    },
    {
        "id": "be01a4f767b35273",
        "type": "link call",
        "z": "92b23faeba8402de",
        "name": "",
        "links": [
            "98a23a2a7b8e1d3a"
        ],
        "timeout": "30",
        "x": 760,
        "y": 340,
        "wires": [
            [
                "9886daea8cc40acf"
            ]
        ]
    },
    {
        "id": "6f037794.4913b8",
        "type": "unsafe-function",
        "z": "92b23faeba8402de",
        "name": "attachLink",
        "func": "msg.topic = \"unobserve\";\nlet link = msg.req.params.aasid + \"/\" + msg.req.params.submodelId + \"/\" + msg.req.params.id;\nmsg.link = link;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 480,
        "wires": [
            [
                "ab74d8c40ce94421"
            ]
        ]
    },
    {
        "id": "ab74d8c40ce94421",
        "type": "link call",
        "z": "92b23faeba8402de",
        "name": "",
        "links": [
            "98a23a2a7b8e1d3a"
        ],
        "timeout": "30",
        "x": 760,
        "y": 480,
        "wires": [
            [
                "f26fdac1d1e1145c",
                "dec21473368cfcfa"
            ]
        ]
    },
    {
        "id": "13165751eae9ea29",
        "type": "sub-link-output",
        "z": "92b23faeba8402de",
        "inputs": 0,
        "name": "",
        "topicType": "string",
        "topic": "updateValue",
        "link": "d2edf304.fdfa2",
        "hasdatainput": false,
        "priorityType": "num",
        "priority": "0",
        "aliasType": "string",
        "alias": "",
        "outputstat": "",
        "outputstatType": "string",
        "aliasMatchAll": false,
        "clone": false,
        "x": 230,
        "y": 800,
        "wires": [
            [
                "9ac37ebf8cac30d4"
            ],
            []
        ]
    },
    {
        "id": "9ac37ebf8cac30d4",
        "type": "unsafe-function",
        "z": "92b23faeba8402de",
        "name": "prepareUpdate",
        "func": "var update = {};\nupdate.link = msg.payload.link;\nupdate.value = msg.payload.data;\nupdate.content = \"value\";\nreturn update;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 800,
        "wires": [
            [
                "2c6295160ffca80a",
                "8f9d3dd5a645bd46"
            ]
        ]
    },
    {
        "id": "2c6295160ffca80a",
        "type": "debug",
        "z": "92b23faeba8402de",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 780,
        "wires": []
    },
    {
        "id": "8f9d3dd5a645bd46",
        "type": "link out",
        "z": "92b23faeba8402de",
        "name": "updateValueCallback",
        "mode": "link",
        "links": [
            "7b48ced64946a8d2"
        ],
        "x": 1895,
        "y": 800,
        "wires": []
    },
    {
        "id": "be9f6dc1.5b2ff",
        "type": "msg-router",
        "z": "ef5eec.2b417118",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": false,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": false,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 550,
        "y": 180,
        "wires": [
            [
                "510d71d2fc39935a"
            ],
            [],
            []
        ]
    },
    {
        "id": "6e6900c8e71ac69e",
        "type": "link in",
        "z": "ef5eec.2b417118",
        "name": "callNBI in",
        "links": [],
        "x": 215,
        "y": 180,
        "wires": [
            [
                "be9f6dc1.5b2ff"
            ]
        ]
    },
    {
        "id": "628458cbea548903",
        "type": "link out",
        "z": "ef5eec.2b417118",
        "name": "callNBI out",
        "mode": "return",
        "links": [],
        "x": 2155,
        "y": 200,
        "wires": []
    },
    {
        "id": "510d71d2fc39935a",
        "type": "link call",
        "z": "ef5eec.2b417118",
        "name": "",
        "links": [
            "de1916eda569031c"
        ],
        "timeout": "30",
        "x": 1120,
        "y": 140,
        "wires": [
            [
                "628458cbea548903"
            ]
        ]
    },
    {
        "id": "5fdfa5823b539d92",
        "type": "unsafe-function",
        "z": "3db1c009.99d51",
        "name": "PayloadProcessing",
        "func": "var msg1 = {};\nlet observation = {};\nobservation.id = msg.id;\nobservation.source = msg.source;\nobservation.direction = msg.direction;\nobservation.observableReference = msg.observableReference;\nobservation.timestamp = msg.timestamp;\nobservation.payload = msg.payload;\nobservation.topic = msg.topic;\n//msg1.topic = context.global.get('AASIdentifier');\nif (msg.topic == \"\" || typeof msg.topic == \"undefined\") {\n    msg1.topic = msg.payload.observableReference;\n    msg1.payload = observation;\n} else {\n    msg1.topic = msg.topic;\n    msg1.payload = observation;\n}\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 400,
        "wires": [
            [
                "d3a90fac5957ee0b",
                "c44bf8a35331acf4"
            ]
        ]
    },
    {
        "id": "d3a90fac5957ee0b",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1490,
        "y": 320,
        "wires": []
    },
    {
        "id": "beeb158d48b1b014",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 730,
        "y": 200,
        "wires": []
    },
    {
        "id": "9bc25a1ffc6afa26",
        "type": "mqtt out",
        "z": "3db1c009.99d51",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "e70d9188.7d95e",
        "x": 2010,
        "y": 360,
        "wires": []
    },
    {
        "id": "c2844e6c2f074fe8",
        "type": "comment",
        "z": "3db1c009.99d51",
        "name": "To MQTT",
        "info": "",
        "x": 1180,
        "y": 320,
        "wires": []
    },
    {
        "id": "a1b479db1fdfa8cc",
        "type": "Load Balance",
        "z": "3db1c009.99d51",
        "defaultcapacity": 100,
        "dynamic": "d7e6d6dc.d37318",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 3,
        "routes": "2",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 1760,
        "y": 400,
        "wires": [
            [],
            [
                "9bc25a1ffc6afa26",
                "13f095a04e57cf65"
            ],
            [
                "b2e4d277c3c9d439"
            ]
        ]
    },
    {
        "id": "b2e4d277c3c9d439",
        "type": "mqtt out",
        "z": "3db1c009.99d51",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "e70d9188.7d95e",
        "x": 2010,
        "y": 440,
        "wires": []
    },
    {
        "id": "13f095a04e57cf65",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1690,
        "y": 300,
        "wires": []
    },
    {
        "id": "de1916eda569031c",
        "type": "link in",
        "z": "3db1c009.99d51",
        "name": "MQTT in",
        "links": [],
        "x": 515,
        "y": 280,
        "wires": [
            [
                "5fdfa5823b539d92",
                "beeb158d48b1b014",
                "357ce99f6ae5d076"
            ]
        ]
    },
    {
        "id": "357ce99f6ae5d076",
        "type": "link out",
        "z": "3db1c009.99d51",
        "name": "MQTT out",
        "mode": "return",
        "links": [],
        "x": 1955,
        "y": 280,
        "wires": []
    },
    {
        "id": "d0b0cabc543b597b",
        "type": "rsa-generate-keypair",
        "z": "3db1c009.99d51",
        "name": "rsa generate keypair",
        "bitlength": "2048",
        "passphrase": "",
        "x": 1140,
        "y": 820,
        "wires": [
            [
                "a519fae479ee3514",
                "6a5ce5896c4317bd",
                "57a4c93e8ecbcfa0"
            ]
        ]
    },
    {
        "id": "7f1da56c73f216dc",
        "type": "inject",
        "z": "3db1c009.99d51",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 740,
        "y": 820,
        "wires": [
            [
                "d0b0cabc543b597b"
            ]
        ]
    },
    {
        "id": "6a5ce5896c4317bd",
        "type": "rsa-encrypt",
        "z": "3db1c009.99d51",
        "name": "rsa encrypt",
        "publickey": "",
        "x": 1470,
        "y": 460,
        "wires": [
            [
                "a1b479db1fdfa8cc"
            ]
        ]
    },
    {
        "id": "57a4c93e8ecbcfa0",
        "type": "rsa-decrypt",
        "z": "3db1c009.99d51",
        "name": "rsa decrypt",
        "privatekey": "",
        "x": 1750,
        "y": 600,
        "wires": [
            [
                "75919480a59c49ae"
            ]
        ]
    },
    {
        "id": "a519fae479ee3514",
        "type": "function",
        "z": "3db1c009.99d51",
        "name": "store Keys",
        "func": "context.flow.set(\"privateKey\", msg.payload.privateKey);\ncontext.flow.set(\"publicKey\", msg.payload.publicKey);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "c44bf8a35331acf4",
        "type": "switch",
        "z": "3db1c009.99d51",
        "name": "",
        "property": "encrypt",
        "propertyType": "global",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1210,
        "y": 400,
        "wires": [
            [
                "a1b479db1fdfa8cc"
            ],
            [
                "6a5ce5896c4317bd"
            ]
        ]
    },
    {
        "id": "75919480a59c49ae",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2010,
        "y": 600,
        "wires": []
    },
    {
        "id": "691ae969883c7e40",
        "type": "inject",
        "z": "3db1c009.99d51",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 650,
        "y": 520,
        "wires": [
            [
                "d0354fb152b2428d"
            ]
        ]
    },
    {
        "id": "d0354fb152b2428d",
        "type": "unsafe-function",
        "z": "3db1c009.99d51",
        "name": "PayloadProcessing",
        "func": "var msg1 = {};\nlet observation = {};\nobservation.id = \"test\";\nobservation.source = \"myAAS\";\nobservation.direction = \"out\";\nobservation.observableReference = \"msg.observableReference\";\nobservation.timestamp = \"msg.timestamp\";\nobservation.payload = \"msg.payload\";\nobservation.topic = \"msg.topic\";\n//msg1.topic = context.global.get('AASIdentifier');\nif (msg.topic == \"\" || typeof msg.topic == \"undefined\") {\n    msg1.topic = msg.payload.observableReference;\n    msg1.payload = observation;\n} else {\n    msg1.topic = msg.topic;\n    msg1.payload = observation;\n}\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 520,
        "wires": [
            [
                "c44bf8a35331acf4"
            ]
        ]
    },
    {
        "id": "b05b8675.6b0908",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3710,
        "y": 1680,
        "wires": []
    },
    {
        "id": "fef12c4c.00324",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "LiveDataToGet",
        "func": "//Retreiving Libraries from the Settings.json file\nlet outputMsgsFileData = [];\nlet outputMsgsPropertyData = [];\n\nlet uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\nlet selectedElements = context.flow.get('selectedElements');\nfor (let element in selectedElements) {\n    let selected_element = \"\";\n    if (typeof selectedElements[element].path != \"undefined\") {\n        selected_element = selectedElements[element].aasid + \"/\" + selectedElements[element].submodelId + \"/\" + selectedElements[element].path + \"/\" + selectedElements[element].selectedElement.idShort;\n    }//let selected_element = selectedElements[element].submodelId + \";\" + selectedElements[element].selectedElement.idShort;\n    else {\n        selected_element = selectedElements[element].aasid + \"/\" + selectedElements[element].submodelId + \"/\" + selectedElements[element].selectedElement.idShort;\n    }\n    let modelType = selectedElements[element].selectedElement.modelType.name;\n    let category = selectedElements[element].selectedElement.category;\n\n    if (modelType == \"File\") {\n        let observation = {};\n        observation.id = uuid;\n        observation.source = context.global.get(\"AASIdentifier\");\n        observation.direction = \"Output\";\n        observation.observableReference = selected_element;\n        observation.timestamp = new Date().getTime();\n        observation.payload = { href: selectedElements[element].selectedElement.value };\n        let msg = { payload: observation };\n        outputMsgsFileData.push(msg);\n    } else {\n        let msg = { payload: selected_element };\n        let shellId = encodeURIComponent(selectedElements[element].aasid);\n        let encodedSelected_Element = encodeURIComponent(selectedElements[element].submodelId);\n\n        //\"/aasServer/shells/:aasid/aas/submodels/:submodelId/submodel/submodelElements/:id\"\n        if (typeof selectedElements[element].path != \"undefined\") {\n            msg.url = context.global.get('namespace') + \"/aasServer/shells/\" + shellId + \"/aas/submodels/\" + encodedSelected_Element + \"/submodel/submodel-elements/\" + selectedElements[element].path + \".\" + selectedElements[element].selectedElement.idShort;\n        } else {\n            msg.url = context.global.get('namespace') + \"/aasServer/shells/\" + shellId + \"/aas/submodels/\" + encodedSelected_Element + \"/submodel/submodel-elements/\" + selectedElements[element].selectedElement.idShort;\n        }\n\n        outputMsgsPropertyData.push(msg);\n    }\n\n}\n\nreturn [outputMsgsFileData, outputMsgsPropertyData];",
        "outputs": 2,
        "noerr": 0,
        "x": 1971.666748046875,
        "y": 1640,
        "wires": [
            [
                "d50039d0.bc4938",
                "41bb2566.3acfdc"
            ],
            [
                "2f54e93e.6944ae"
            ]
        ]
    },
    {
        "id": "1ab68a79.a369be",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "group": "63d120af.ce7f5",
        "name": "Log",
        "order": 0,
        "width": "35",
        "height": "20",
        "format": "<script>\n    (function(scope) {\n            scope.logs = [];\n        \n            scope.$watch('msg', function(msg){\n                if (msg) {\n                    if (msg.payload) {\n                        scope.logs = msg.payload;\n                    }\n                }\n            });\n            scope.init = function() {\n                //scope.observations = [];\n                scope.send({payload:scope.observations});\n            }\n        })(scope)\n</script>\n<div id=\"logs_Table\" ng-init=\"init()\">\n    <table class=\"table table-sm\">\n        <thead class=\"text-dark\">\n            <tr>\n                <th scope=\"col\">AAS Id</th>\n                <th scope=\"col\">Observable Reference</th>\n                <th scope=\"col\">_msgId</th>\n                <th scope=\"col\">Timestamp</th>\n                <th scope=\"col\">Value</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr class=\"table-info\" ng-repeat=\"i in logs\">\n                <td><a class=\"text-dark\">{{i.AASID}}</a></td>\n                <td><a class=\"text-dark\">{{i.observableReference}}</a></td>\n                <td><a class=\"text-dark\">{{i._msgid}}</a></td>\n                <td><a class=\"text-dark\">{{i.time}}</a></td>\n                <td ng-if='i.link != undefined'><a class=\"btn btn-link\" target=\"_blank\" rel=\"noopener noreferrer\"\n                        ng-href=\"{{i.link}}\">{{i.link}}</a></td>\n                <td ng-if='i.value != undefined'><a class=\"text-dark\">{{i.value}}</a></td>\n\n                <!--<td><a class=\"text-dark\">{{i.value}}</a></td>!-->\n                <!--<td style=\"cursor:pointer;\" ng-click=\"remove(i)\" title=\"Remove\">&times;</td>!-->\n            </tr>\n        </tbody>\n\n    </table>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3573.690185546875,
        "y": 1678.8096923828125,
        "wires": [
            [
                "b05b8675.6b0908",
                "d32b5901.1a603"
            ]
        ]
    },
    {
        "id": "eb351cb4.81437",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "LogsProcessing",
        "func": "//Retreiving Libraries from the Settings.json file\nif(msg.payload){\n    //var observation = JSON.parse(msg.payload);\n    var observation = msg.payload;\n    var logs = context.flow.get('logs');\n    var copyLogs = logs.slice(Math.max(logs.length - 25, 0));\n    //for(var log in msg.payload){\n    //    logs.push(msg.payload[log]);\n    //}\n    var log = {};\n    if(typeof observation.payload.href !== \"undefined\"){\n        log.link = observation.payload.href;\n    } else{\n        log.value = observation.payload;\n    }\n    log.time = Date.now();\n    log._msgid = msg._msgid;\n    log.AASID = context.global.get('AASIdentifier');\n    log.observableReference = observation.observableReference;\n    if(copyLogs.length > 25){\n        copyLogs.pop();\n        copyLogs.push(log);\n        logs.push(log);\n    } else {\n        logs.push(log);\n    }\n    \n    context.flow.set('logs', logs);\n    var outputMsg = {};\n    //msg.payload = logs;\n    //outputMsg.payload = logs;\n    outputMsg.payload = copyLogs;\n    return outputMsg;\n}\nmsg.payload = \"\";\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "x": 3053.0234375,
        "y": 1678.4285888671875,
        "wires": [
            [
                "550830ba.1dfd1",
                "1ab68a79.a369be",
                "90530db5.87162"
            ]
        ]
    },
    {
        "id": "66cf1c72.99bbcc",
        "type": "delay",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3649.7377319335938,
        "y": 1751,
        "wires": [
            [
                "1ab68a79.a369be"
            ]
        ]
    },
    {
        "id": "d32b5901.1a603",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "GetLog",
        "func": "//Retreiving Libraries from the Settings.json file\nvar logs = context.flow.get('logs');\nvar copyLogs = logs.slice(Math.max(logs.length - 25, 0));\nmsg.payload = copyLogs;\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "x": 3386.4043579101562,
        "y": 1747.6666259765625,
        "wires": [
            [
                "66cf1c72.99bbcc",
                "27faa505.26a31a"
            ]
        ]
    },
    {
        "id": "27faa505.26a31a",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3578.5709838867188,
        "y": 1786.333251953125,
        "wires": []
    },
    {
        "id": "d50039d0.bc4938",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2170,
        "y": 1580,
        "wires": []
    },
    {
        "id": "2b4abcf3.ba6b04",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3042.4043579101562,
        "y": 1740.3333740234375,
        "wires": []
    },
    {
        "id": "9e2da8d9.de039",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "group": "86f8f681.8f77e8",
        "name": "Logo / Clock",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<script id=\"clockScript1\" type=\"text/javascript\">\n    var clockInterval;\n    $(function () {\n        if (clockInterval) return;\n\n        //add logo\n        var div1 = $('<div/>');\n        var logo = new Image();\n\n        logo.src = '/images/logo.png'\n        logo.height = 45;\n        div1[0].style.margin = '10px auto';\n\n        div1.append(logo);\n\n        //add clock\n        var div2 = $('<div/>');\n        var p = $('<p/>');\n\n        div2.append(p);\n        div2[0].style.margin = '5px';\n\n        function displayTime() {\n            p.text(new Date().toLocaleString());\n        }\n        \n        clockInterval = setInterval(displayTime, 1000);\n\n        //add to toolbar when it's available\n        var addToToolbarTimer;\n        \n        function addToToolbar() {\n            var toolbar = $('.md-toolbar-tools');\n            \n            if(!toolbar.length) return;\n            \n            toolbar.append(div1);\n            toolbar.append(div2);\n            clearInterval(addToToolbarTimer);\n        }\n        addToToolbarTimer = setInterval(addToToolbar, 100);\n    });\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "x": 650,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "f45da4ee.8dafc8",
        "type": "ui_form",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Dashboard Login-In",
        "label": "",
        "group": "3c18c574.bda17a",
        "order": 0,
        "width": "0",
        "height": "0",
        "options": [
            {
                "label": "username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "x": 220,
        "y": 3060,
        "wires": [
            [
                "ca2d2fa0.7990d",
                "950a1370.3619d8"
            ]
        ]
    },
    {
        "id": "e76f2790.4d439",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Debug Account Log ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 600,
        "y": 3020,
        "wires": []
    },
    {
        "id": "6ac29e74.d4ff7",
        "type": "comment",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Sign-In Section",
        "info": "",
        "x": 212,
        "y": 2997,
        "wires": []
    },
    {
        "id": "ca2d2fa0.7990d",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Account Log",
        "func": "var accountlog =  flow.get(\"accountlog\") || [] ; \n\naccountlog.push({ accessAt : new Date(), username : msg.payload.username})\n\nflow.set(\"accountlog\", accountlog);\n\nmsg.payload = accountlog;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 3020,
        "wires": [
            [
                "e76f2790.4d439"
            ]
        ]
    },
    {
        "id": "950a1370.3619d8",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Prepare Login",
        "func": "var accounts =  flow.get(\"accounts\") || [ { username : \"admin\", password : \"admin\"},{ username : \"guest\", password : \"guest\"}] ; \n\nvar username = msg.payload.username ;\nvar password = msg.payload.password ; \n\nvar newMsg = {}; newMsg.payload = 1;\n\n/*accounts.forEach(function ( account ){\n    \n    var accountArray = account.split(\":\");\n    if ( accountArray[0] == username ) {\n       newMsg.payload = 2;\n       if ( accountArray[2] == password ) {\n           newMsg.payload = 0;\n       } \n    }\n});*/\n\nvar outMsg = {};\noutMsg.url = context.global.get(\"namespace\") + \"/aasServer/auth/login\";\noutMsg.headers = {};\noutMsg.headers[\"content-type\"] = \"application/x-www-form-urlencoded\";\noutMsg.payload = {};\noutMsg.payload.grant_type = \"password\";\noutMsg.payload.username = username;\noutMsg.payload.password = password;\noutMsg.payload.client_id = context.global.get(\"authenticationServerClient\");\n//outMsg.payload.client_secret = context.global.get(\"client_secret\");\noutMsg.payload.scope = \"openid\";\n\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 3080,
        "wires": [
            [
                "2daca573.fd2b62"
            ]
        ]
    },
    {
        "id": "bd6df944.5006d8",
        "type": "switch",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1770,
        "y": 3080,
        "wires": [
            [
                "f159317e.d4b0e"
            ],
            [
                "cf299eb1.b1a8b8"
            ],
            [
                "9f709753.69ba68"
            ],
            [
                "d34576d7.3935d8"
            ]
        ]
    },
    {
        "id": "f159317e.d4b0e",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "= 0 : Success",
        "func": "/* activate session timer */\nvar sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nflow.set(\"sessionTimer\", currTime);\n\n/* ui-control payload */\n\n/*msg.payload = { group: {\n    show : [\"Login_SensorData\", \"Login_History\"],\n    hide : [\"Login_Signin\"]\n}*/\n\n//msg.payload = {tab: \"Manifest\"};\n\nmsg.payload = { group: {\n        show : [\"Login_Commands\", \"Login_Body\", \"Login_Health\", \"Configs_Configurations\",  \"Reporting_form\"],\n        hide : [\"Login_Login\", \"Reporting_ReportDownload\"]\n    },\n    tabs: {\n        show: [\"Configs\", \"Reporting\"]\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1980,
        "y": 3000,
        "wires": [
            [
                "39ab70b9.91e5b8",
                "692fbe88.989748"
            ]
        ]
    },
    {
        "id": "cf299eb1.b1a8b8",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "= 1 : Unknown User",
        "func": "msg.payload = \"Invalid user credentials\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2000,
        "y": 3040,
        "wires": [
            [
                "7fdfc1e9.d4071"
            ]
        ]
    },
    {
        "id": "9f709753.69ba68",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "= 2 : Wrong Password",
        "func": "msg.payload = \"Invalid Credentials\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2000,
        "y": 3080,
        "wires": [
            [
                "7fdfc1e9.d4071"
            ]
        ]
    },
    {
        "id": "39ab70b9.91e5b8",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Go to Manifest Group",
        "x": 2262,
        "y": 3020,
        "wires": [
            []
        ]
    },
    {
        "id": "7fdfc1e9.d4071",
        "type": "ui_toast",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "topic": "Authentication Failed",
        "name": "Authentication Failure Dialog",
        "x": 2282,
        "y": 3120,
        "wires": [
            []
        ]
    },
    {
        "id": "eae2374c.c9d2c8",
        "type": "comment",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Session Management - 15 secs for this demo",
        "info": "",
        "x": 290,
        "y": 3140,
        "wires": []
    },
    {
        "id": "5ea19cff.eb6824",
        "type": "inject",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Timer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 201.99999618530273,
        "y": 3283.000005722046,
        "wires": [
            [
                "e5ca45b.fcf2838",
                "9b05b783.beeda8"
            ]
        ]
    },
    {
        "id": "e5ca45b.fcf2838",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Detect Session Timer",
        "func": "var sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nvar SESSION_TIMEOUT = context.flow.get(\"sessionTimeout\"); //30 secs\n\nif ( sessionTimer === 0 /* Inactive, No user signed in */ ) {\n    msg.payload = 2;\n} else {\n    if ( currTime - sessionTimer > SESSION_TIMEOUT ) {\n      msg.payload = 0;  \n    } else {\n      msg.payload = 1;        \n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 386,
        "y": 3244.9999980926514,
        "wires": [
            [
                "2e422fd2.ea192"
            ]
        ]
    },
    {
        "id": "2e422fd2.ea192",
        "type": "switch",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1441.5471839904785,
        "y": 3241.0949382781982,
        "wires": [
            [
                "4e98c9a7.ddc0e8"
            ],
            [
                "779ff867.94293"
            ],
            [
                "f31795b7.8000d"
            ]
        ]
    },
    {
        "id": "4e98c9a7.ddc0e8",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Time-Out",
        "func": "/* activate session timer */\nvar sessionTimer =  flow.get(\"sessionTimer\") || 0; \nflow.set(\"sessionTimer\", 0);\ncontext.flow.set(\"selectedElements\", []);\ncontext.flow.set(\"seconds\", 0);\ncontext.flow.set(\"minutes\", 0);\ncontext.flow.set(\"hours\", 0);\ncontext.flow.set(\"userRefreshToken\", \"\");\ncontext.flow.set(\"userToken\", \"\");\n\nmsg.payload = \"Session Expired! Please singin again!\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1700,
        "y": 3220,
        "wires": [
            [
                "1532a44d.6a7c7c",
                "a0307a13.4553a8"
            ]
        ]
    },
    {
        "id": "1532a44d.6a7c7c",
        "type": "ui_toast",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Session Timeout",
        "name": "Time-Out Dialog",
        "x": 2013.0472259521484,
        "y": 3178.09494972229,
        "wires": [
            []
        ]
    },
    {
        "id": "885776aa.79c478",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Switch Groups",
        "x": 2272,
        "y": 3220,
        "wires": [
            []
        ]
    },
    {
        "id": "a0307a13.4553a8",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Login Redirection",
        "func": "var msg1 = {};\nmsg1.payload = 9;\nvar msg2 = {};\n//msg.payload = {tab: \"Login\"};\nmsg2.payload = {\n    tabs: {\n        hide: [\"Configs\", \"Reporting\"]\n    },\n    group: {\n        hide : [\"Login_Commands\", \"Login_Body\", \"Login_Health\"],\n        show : [\"Login_Login\"]\n}\n};\nreturn [msg1, msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2023.5472259521484,
        "y": 3219.09494304657,
        "wires": [
            [
                "28ed3c82.06228c"
            ],
            [
                "885776aa.79c478"
            ]
        ]
    },
    {
        "id": "44733dbd.723eb4",
        "type": "ui_toast",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "position": "bottom right",
        "displayTime": "1",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "Timer",
        "name": "Display Remaining Time",
        "x": 1598.0471725463867,
        "y": 3343.0949382781982,
        "wires": []
    },
    {
        "id": "9b05b783.beeda8",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Calculating Remaining Time (Debug)",
        "func": "var sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nvar remainingSecs = Math.floor((context.flow.get(\"sessionTimeout\") - (currTime - sessionTimer))/1000) + 1;\n    \nif ( sessionTimer == 0 /* Inactive, No user signed in */ ) {\n    return null;\n} else {\n    \n    if ( remainingSecs <= 7 && remainingSecs >= 0) msg.payload = \"Remaining : \" + remainingSecs + \" secs\";  \n    else return null;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 434,
        "y": 3346.0000133514404,
        "wires": [
            [
                "44733dbd.723eb4"
            ]
        ]
    },
    {
        "id": "53c6b4a3.dfc49c",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Stay in Sensor Group",
        "x": 2210.047149658203,
        "y": 3257.0949325561523,
        "wires": [
            []
        ]
    },
    {
        "id": "779ff867.94293",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Configuration Group",
        "func": "var msg = {};\n\n//msg.payload = {tab: \"Manifest\"};\n\nmsg.payload = { group: {\n    show : [\"Login_Commands\", \"Login_Body\"],\n    hide : [\"Login_Login\"]\n}\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1740,
        "y": 3260,
        "wires": [
            [
                "53c6b4a3.dfc49c"
            ]
        ]
    },
    {
        "id": "f31795b7.8000d",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Login Group",
        "func": "var msg = {};\n\n//msg.payload = {tab: \"Login\"};\n/*msg.payload = { group: {\n    hide : [\"Login_SensorData\", \"Login_History\"],\n    show : [\"Login_Signin\"]\n}\n};*/\n\nmsg.payload = { group: {\n    hide : [\"Login_Commands\", \"Login_Body\", \"Login_Health\"],\n    show : [\"Login_Login\"]\n}\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1710,
        "y": 3300,
        "wires": [
            [
                "309b8128.737fce"
            ]
        ]
    },
    {
        "id": "309b8128.737fce",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Go to Signin Group",
        "x": 2215.0472564697266,
        "y": 3298.0949745178223,
        "wires": [
            []
        ]
    },
    {
        "id": "9d155fa1.55784",
        "type": "ui_button",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "Clear button",
        "group": "b9aed87e.bdd0c8",
        "order": 20,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "Clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "#ff5555",
        "icon": "clear_all",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 3170,
        "y": 2220,
        "wires": [
            [
                "856b84d2.58bc58"
            ]
        ]
    },
    {
        "id": "856b84d2.58bc58",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "ResetObservations",
        "func": "context.flow.set('logs', []);\ncontext.flow.set('accountlog', []);\nmsg.payload = context.flow.get('logs');\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "x": 3384.5,
        "y": 2219,
        "wires": [
            [
                "f73c7559.2f4508"
            ]
        ]
    },
    {
        "id": "f73c7559.2f4508",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3583.5,
        "y": 2221,
        "wires": []
    },
    {
        "id": "50f38532.36990c",
        "type": "http request",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2210,
        "y": 1780,
        "wires": [
            [
                "4a2fa6da.9b03d8",
                "41bb2566.3acfdc"
            ]
        ]
    },
    {
        "id": "4a2fa6da.9b03d8",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2590,
        "y": 1820,
        "wires": []
    },
    {
        "id": "41bb2566.3acfdc",
        "type": "msg-router",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": true,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": true,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": true,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2710,
        "y": 1660,
        "wires": [
            [
                "cb167da9.5407f8"
            ],
            [
                "eb351cb4.81437"
            ],
            [
                "2b4abcf3.ba6b04"
            ]
        ]
    },
    {
        "id": "c65f095e.8a22d",
        "type": "ui_toast",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "position": "bottom right",
        "displayTime": "1",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "Logs",
        "name": "Notify Logs",
        "x": 3320,
        "y": 1600,
        "wires": []
    },
    {
        "id": "cb167da9.5407f8",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "NewLogsNotification",
        "func": "//Retreiving Libraries from the Settings.json file\nmsg.payload = \"new Log\";\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "x": 3080,
        "y": 1620,
        "wires": [
            [
                "c65f095e.8a22d"
            ]
        ]
    },
    {
        "id": "550830ba.1dfd1",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3665.504150390625,
        "y": 1622.7667846679688,
        "wires": []
    },
    {
        "id": "853a0e8f.857808",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "48a4f908.86ced8",
        "group": "816ae7fa.db1168",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div ng-init=\"init()\" id=\"pin_insert\" class=\"dialog\">\n    \n    <div class=\"dialog_content\">\n        \n        <div class=\"dialog_header\">\n            <h2 style=\"margin:10px\">Send Command Form</h2>\n        </div>\n        \n        <div class=\"dialog_body\">\n\t\t\t<p class=\"text-black-50\"><strong>Using the dialog to send command through the Shell</strong></p>\n\t\t\t<input class=\"form-control\" type=\"text\" placeholder={{msg.payload}} readonly>\n\t\t\t<div class=\"form-group\">\n                <textarea class=\"form-control rounded-0\" id=\"exampleFormControlTextarea2\" rows=\"3\"  ng-model= \"passcode\"></textarea>\n            </div>\n\t\t\t<!--<input type=\"text\" ng-model= \"passcode\" ng-model-options=\"{ debounce: 200 }\"style=\"width: 100%\">!-->\n\t\t\t<md-button class=\"btn1 vibrate filled touched bigfont\" ng-click=\"sendMsg()\">Send</md-button>\n\t\t\t<md-button class=\"btn1 vibrate filled touched bigfont\" ng-click=\"closeDialog()\">Cancel</md-button>\n        </div> \n    </div> \n</div> \n\n<style>\n\n/* The Dialog (background) */\n.dialog {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 9999; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    color : rgb(255,255,255);\n\tbackground-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n    -webkit-transform: translateZ(0px);\n    -webkit-transform: translate3d(0,0,0);\n    -webkit-perspective: 1000;\n}\n\n.dialog_content {\n\tposition: absolute;\n    background-color: rgb(255,255,255);\n    left: 25%;\n    top: 30px;\n    border-radius: 3px;\n    padding: 0;\n    width: 50%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animatetop;\n    animation-name: animatetop;\n    animation-duration: 0.4s;\n}\n\n/* Dialog Header */\n.dialog_header {\n    padding: 2px 16px;\n    /*background-color: rgb(20,82,78);*/\n    background-color: rgb(255,255,255);\n    border-radius: 3px 3px 0 0;\n    color: black;\n}\n\n/* Dialog Body */\n.dialog_body {padding: 5px;}\n\n/* The Close Button */\n.close {\n    color: #fff;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n    cursor: pointer;\n}\n\n.close:hover,\n.close:focus {\n    color: #1565C0;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n\n.btn1 {\n  color : rgb(255,255,255);\n  background-color: rgb(20,82,78);\n  border-radius: 3px 3px 3px 3px;\n  font-size: 16px;\n}\n\n\n</style>\n\n<script>\nvar dialog;\n\n/* ==== */\n(function(scope) {\n    \n    scope.passcode = \"\";\n    \n    scope.init = function() {\n        //scope.send({payload : \"init\"});\n\t\tscope.passcode = \"\";\n        //Hide the md-panel\n        $('#pin_insert').parent().parent().css(\"display\", \"none\");\n        //This trick make it works on smartphones too :)\n        dialog = $('#pin_insert').detach();\n        //dialog.appendTo(document.body); // This leaves ghost numpads if pinpad is not opened!\n    }\n    \n    scope.showDialog = function() {\n        dialog.appendTo(document.body); // better to add the body only when the numpad is displayed (seams to be removed automatically)\n        dialog.css(\"display\", \"block\");\n    }\n    \n    scope.closeDialog = function(){\n        dialog.css(\"display\", \"none\");\n\t\tscope.send({payload : \"close\"});\n    }\n    \n    scope.sendMsg = function(){\n        dialog.css(\"display\", \"none\");\n\t\tscope.send({payload : scope.passcode});\n    }\n     \n\n    scope.$watch('msg', function(data) {\n        if(data && data.topic){\n            switch(data.topic){\n               case \"show\":\n\t\t\t\t\t\tscope.passcode = \"\";\n                        scope.showDialog();\n                break;\n                case \"close\": \n                    dialog.css(\"display\", \"none\");\n                break;\n            }\n        }\n    });\n})(scope);\n\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 2340,
        "y": 2540,
        "wires": [
            [
                "f4c6e702.7f3318"
            ]
        ]
    },
    {
        "id": "f4c6e702.7f3318",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "48a4f908.86ced8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 2600,
        "y": 2540,
        "wires": []
    },
    {
        "id": "4558107f.b185",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "48a4f908.86ced8",
        "name": "LiveDataToGet",
        "func": "//Retreiving Libraries from the Settings.json file\nvar outputMsgs = [];\nvar selectedElements = context.flow.get('selectedElements');\nfor(var element in selectedElements){\n    var msg = {payload:selectedElements[element].selectedElement.idShort};\n    msg.topic = \"show\";\n    //msg.url = context.global.get('namespace') + \"/aas/manifest/liveData/request/property/\" + selectedElements[element]._Attribs.ID;\n    outputMsgs.push(msg);\n    \n}\nif(outputMsgs.length == 0){\n    var msg = {};\n    msg.payload = outputMsgs;\n    return msg;\n}\n\nreturn [outputMsgs];",
        "outputs": 1,
        "noerr": 0,
        "x": 1900,
        "y": 2540,
        "wires": [
            [
                "853a0e8f.857808",
                "b8356819.abe308",
                "c2fcef99.58e7"
            ]
        ]
    },
    {
        "id": "bf662f6a.f375c8",
        "type": "ui_toast",
        "z": "2164c119.f88826",
        "g": "48a4f908.86ced8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "topic": "",
        "name": "",
        "x": 2450,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "b8356819.abe308",
        "type": "switch",
        "z": "2164c119.f88826",
        "g": "48a4f908.86ced8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1960,
        "y": 2440,
        "wires": [
            [
                "d8819fbd.ce78d"
            ],
            []
        ]
    },
    {
        "id": "c2fcef99.58e7",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "48a4f908.86ced8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 2124.8541259765625,
        "y": 2622.3541259765625,
        "wires": []
    },
    {
        "id": "d8819fbd.ce78d",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "48a4f908.86ced8",
        "name": "LiveDataToGet",
        "func": "var msg = {};\nmsg.topic = \"Notification\";\nmsg.payload = \"Please select a Submodel Element\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2240,
        "y": 2400,
        "wires": [
            [
                "bf662f6a.f375c8"
            ]
        ]
    },
    {
        "id": "90530db5.87162",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3227.1663208007812,
        "y": 1737.4762573242188,
        "wires": []
    },
    {
        "id": "e76c094a.301b98",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "Prepare Log",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n  let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n  return v.toString(16);\n});\n\n// Process msg payload\n\nlet filterNamespaceUrl = msg.url.replace(context.global.get('namespace'), \"\");\nlet filterAPIElements1Url = filterNamespaceUrl.replace(\"/aasServer/shells/\", \"\");\nlet filterAPIElements2Url = filterAPIElements1Url.replace(\"/aas/submodels\", \"\");\nlet filterAPIElements3Url = filterAPIElements2Url.replace(\"/submodel/submodel-elements\", \"\");\n\n//let splittedUrl = filterAPIElements2Url.split(\"/\");\n\n\n\n//\n\nlet observation = {};\nobservation.id = uuid;\nobservation.source = context.global.get('AASIdentifier');\nobservation.direction = \"Output\";\nobservation.observableReference = decodeURIComponent(filterAPIElements3Url.trim());\nobservation.timestamp = new Date().getTime();\nobservation.payload = msg.payload.value;\nmsg.payload = observation;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2410,
        "y": 1680,
        "wires": [
            [
                "41bb2566.3acfdc"
            ]
        ]
    },
    {
        "id": "2f54e93e.6944ae",
        "type": "http request",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2190,
        "y": 1680,
        "wires": [
            [
                "e76c094a.301b98"
            ]
        ]
    },
    {
        "id": "e4e4de93.93ecc",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2183.333251953125,
        "y": 1922.1431884765625,
        "wires": []
    },
    {
        "id": "55c3590c.12a6b",
        "type": "http request",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2220,
        "y": 1960,
        "wires": [
            [
                "dfc2d587.5eb03",
                "41bb2566.3acfdc"
            ]
        ]
    },
    {
        "id": "ca22d6d6.76f3f",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "LiveDataToUnSubscribe",
        "func": "//Retreiving Libraries from the Settings.json file\nlet outputMsgs = [];\nlet selectedElements = context.flow.get('selectedElements');\nfor(let element in selectedElements){\n    \n    let selected_element = \"\";\n    if(typeof selectedElements[element].path != \"undefined\"){\n        selected_element = selectedElements[element].aasid + \"/\" + selectedElements[element].submodelId + \"/\" + selectedElements[element].path + \"/\" + selectedElements[element].selectedElement.idShort;\n    }\n    else {\n        selected_element = selectedElements[element].aasid + \"/\" + selectedElements[element].submodelId + \"/\" + selectedElements[element].selectedElement.idShort;\n    }\n    \n    let msg = {payload:selected_element};\n    let  shellId = encodeURIComponent(selectedElements[element].aasid);\n    let encodedSelected_Element = encodeURIComponent(selectedElements[element].submodelId);\n    \n    if(typeof selectedElements[element].path != \"undefined\"){\n        msg.url = context.global.get('namespace') + \"/aasServer/shells/\" + shellId + \"/aas/submodels/\" + encodedSelected_Element +\"/liveData/unsubscribe/submodel/submodel-elements/\" + selectedElements[element].path + \".\" + selectedElements[element].selectedElement.idShort;\n    } else {\n        msg.url = context.global.get('namespace') + \"/aasServer/shells/\" + shellId + \"/aas/submodels/\" + encodedSelected_Element +\"/liveData/unsubscribe/submodel/submodel-elements/\" + selectedElements[element].selectedElement.idShort;    \n    }\n    \n    msg.headers = {\n            authorization: context.flow.get(\"userToken\")\n    }\n    outputMsgs.push(msg);\n    \n}\n\nreturn [outputMsgs];",
        "outputs": 1,
        "noerr": 0,
        "x": 1983.1873779296875,
        "y": 1960.7473754882812,
        "wires": [
            [
                "55c3590c.12a6b",
                "e4e4de93.93ecc"
            ]
        ]
    },
    {
        "id": "dfc2d587.5eb03",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2403.333251953125,
        "y": 1962.1431884765625,
        "wires": []
    },
    {
        "id": "130f03a8.a2c444",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "Login Redirection",
        "func": "var msg = {};\n//msg.payload = {tab: \"Login\"};\nmsg.payload = { group: {\n    hide : [\"Manifest_Commands\", \"Manifest_Headers\", \"Manifest_Body\"],\n    show : [\"Login_Login\"]\n}\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1770,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "1a246772.c01c29",
        "type": "ui_button",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "Get button",
        "group": "5b380ea4.54d28",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Get",
        "tooltip": "",
        "color": "",
        "bgcolor": "#14524e",
        "icon": "swap_vert",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1680,
        "y": 1640,
        "wires": [
            [
                "fef12c4c.00324"
            ]
        ]
    },
    {
        "id": "d44825e7.f72cc",
        "type": "ui_button",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "Observe button",
        "group": "5b380ea4.54d28",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Observe",
        "tooltip": "",
        "color": "",
        "bgcolor": "#FF9000",
        "icon": "visibility",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1700,
        "y": 1860,
        "wires": [
            [
                "86227a90.b4dd58",
                "2776ae57.9d57ea"
            ]
        ]
    },
    {
        "id": "865b9995.0c7b08",
        "type": "ui_button",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "Un-observe button",
        "group": "5b380ea4.54d28",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Un-observe",
        "tooltip": "",
        "color": "",
        "bgcolor": "#ff5555",
        "icon": "visibility_off",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1710,
        "y": 1960,
        "wires": [
            [
                "ca22d6d6.76f3f"
            ]
        ]
    },
    {
        "id": "f826e42f.85708",
        "type": "ui_button",
        "z": "2164c119.f88826",
        "d": true,
        "g": "48a4f908.86ced8",
        "name": "Set button",
        "group": "5b380ea4.54d28",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Set",
        "tooltip": "",
        "color": "",
        "bgcolor": "#14524e",
        "icon": "send",
        "payload": "",
        "payloadType": "str",
        "topic": "show",
        "x": 1680,
        "y": 2540,
        "wires": [
            [
                "4558107f.b185"
            ]
        ]
    },
    {
        "id": "86227a90.b4dd58",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "LiveDataToSubscribe",
        "func": "//Retreiving Libraries from the Settings.json file\nlet outputMsgsLiveData = [];\nlet outputMsgsFileData = [];\nlet outputMsgsConstantData = [];\nlet outputMsgsPropertyData = [];\n\nlet uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\nlet selectedElements = context.flow.get('selectedElements');\nfor(let element in selectedElements){\n     let selected_element = \"\";\n    if(typeof selectedElements[element].path != \"undefined\"){\n        selected_element = selectedElements[element].aasid + \"/\" + selectedElements[element].submodelId + \"/\" + selectedElements[element].path + \"/\" + selectedElements[element].selectedElement.idShort;\n    }\n    else {\n        selected_element = selectedElements[element].aasid + \"/\" + selectedElements[element].submodelId + \"/\" + selectedElements[element].selectedElement.idShort;\n    }\n    let modelType = selectedElements[element].selectedElement.modelType.name;\n    let category = selectedElements[element].selectedElement.category;\n    if(modelType == \"Property\" && category === \"VARIABLE\")\n    {\n        let msg = {payload:selected_element};\n        let  shellId = encodeURIComponent(selectedElements[element].aasid);\n        let encodedSelected_Element = encodeURIComponent(selectedElements[element].submodelId);\n        \n         if(typeof selectedElements[element].path != \"undefined\"){\n            msg.url = context.global.get('namespace') + \"/aasServer/shells/\" + shellId + \"/aas/submodels/\" + encodedSelected_Element +\"/liveData/subscribe/submodel/submodel-elements/\" + selectedElements[element].path + \".\" + selectedElements[element].selectedElement.idShort;\n        } else {\n            msg.url = context.global.get('namespace') + \"/aasServer/shells/\" + shellId + \"/aas/submodels/\" + encodedSelected_Element +\"/liveData/subscribe/submodel/submodel-elements/\" + selectedElements[element].selectedElement.idShort;    \n        }\n        \n        msg.headers = {\n            authorization: context.flow.get(\"userToken\")\n        }\n        outputMsgsLiveData.push(msg);\n    } else if (modelType == \"Property\" && category === \"CONSTANT\" || modelType == \"File\"){\n        let observation = {};\n        observation.id = uuid;\n        observation.source = context.global.get(\"AASIdentifier\");\n        observation.direction = \"Output\";\n        observation.observableReference = selected_element;\n        observation.timestamp = new Date().getTime();\n        observation.payload = \"No Live Data Possible for Category: \" + category;\n        let msg = {payload:observation};\n        outputMsgsConstantData.push(msg);\n    }\n    \n}\n\nreturn [outputMsgsLiveData, outputMsgsConstantData];",
        "outputs": 2,
        "noerr": 0,
        "x": 1980,
        "y": 1860,
        "wires": [
            [
                "50f38532.36990c"
            ],
            [
                "41bb2566.3acfdc",
                "62f98cdc.581cc4"
            ]
        ]
    },
    {
        "id": "62f98cdc.581cc4",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2230,
        "y": 1860,
        "wires": []
    },
    {
        "id": "2776ae57.9d57ea",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1870,
        "y": 1900,
        "wires": []
    },
    {
        "id": "b77c222a.ae9128",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "group": "f57f5dd7.e298c",
        "name": "Active Subscriptions",
        "order": 0,
        "width": "40",
        "height": "20",
        "format": "    <script>\n        (function(scope) {\n            //scope.connections = [];\n            scope.$watch('msg', function(msg){\n                //scope.connections = [];\n                if (msg) {\n                    if (msg.payload) {\n                        scope.subscriptions = [];\n                        for (var index in msg.payload){\n                            var subscription = msg.payload[index].split(\";\");\n                            scope.subscriptions.push(subscription);\n                        }\n                        //scope.connections = msg.payload;\n                    }\n                }\n            });\n            scope.init = function() {\n                //scope.connections = [];\n                //scope.send({payload:scope.connections});\n            }\n        })(scope)\n    </script>\n    <div id=\"deck\" ng-init=\"init()\">\n        <table class=\"table table-sm\">\n            <thead class=\"text-dark\">\n                <tr>\n                    <th scope=\"col\">AAS Id</th>\n                    <th scope=\"col\">Submodel idShort</th>\n                    <th scope=\"col\">Submodel Element idShort</th>\n                    <th scope=\"col\">Status</th>\n                </tr>\n            </thead>\n            <tbody>\n            <tr class=\"table-info\" ng-repeat=\"s in subscriptions\">\n                <td><a class=\"text-dark\">{{s[0]}}</a></td>\n                <td><a class=\"text-dark\">{{s[1]}}</a></td>\n                <td><a class=\"text-dark\">{{s[2]}}</a></td>\n                <td><a class=\"text-success\">Subscribed</a></td>\n                \n                <!--<td><a class=\"text-dark\">{{i.value}}</a></td>!-->\n                <!--<td style=\"cursor:pointer;\" ng-click=\"remove(i)\" title=\"Remove\">&times;</td>!-->\n            </tr>\n            </tbody>\n            \n        </table>\n    </div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 3720,
        "y": 2840,
        "wires": [
            [
                "505fcc23.21345c"
            ]
        ]
    },
    {
        "id": "dbf5d24c.fba6",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "events": "change",
        "x": 2610,
        "y": 2840,
        "wires": [
            [
                "a44bac1b.4c70e8"
            ]
        ]
    },
    {
        "id": "57455a67.915dcc",
        "type": "http request",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3070,
        "y": 2840,
        "wires": [
            [
                "bf3d8ae0.fc9768",
                "759da6d1.42e42"
            ]
        ]
    },
    {
        "id": "a44bac1b.4c70e8",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "func": "\nmsg.method = 'GET';\nmsg.url = context.global.get('namespace') + \"/aasServer/subscriptions\";\nmsg.headers = {\n        authorization: context.flow.get(\"userToken\")\n    }\n///aasServer/shells/connections\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2860,
        "y": 2840,
        "wires": [
            [
                "57455a67.915dcc",
                "84848923.c67118"
            ]
        ]
    },
    {
        "id": "505fcc23.21345c",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3910,
        "y": 2820,
        "wires": []
    },
    {
        "id": "bf3d8ae0.fc9768",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3230,
        "y": 2880,
        "wires": []
    },
    {
        "id": "5eb9f32e.f40bd4",
        "type": "inject",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2620,
        "y": 3040,
        "wires": [
            [
                "ca0384c5.5857e"
            ]
        ]
    },
    {
        "id": "7048aeb0.313ca",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "checkStats",
        "func": "var statsNBI = context.global.get(\"statsNBI\") || 0;\nvar statsSBI = context.global.get(\"statsSBI\") || 0;\n\nif(statsNBI === 0){\n    var msg1 = {topic:\"Msg per minute\", payload:0, ui_control:{min:0,max:statsSBI.maxMsgs}};\n    var msg2 = {topic:\"Msg per minute\", payload:0};\n} else {\n    var msg1 = {topic:\"Msg per \" + statsNBI.IntervalAndFrequency, payload:statsNBI.msgSpeed, ui_control:{min:0,max:statsSBI.maxMsgs}};\n    var msg2 = {topic:\"Msg per \" + statsNBI.msgSizeIntervalAndFrequency, payload:statsNBI.msgSize};\n}\n\nif(statsSBI === 0){\n    var msg3 = {topic:\"Msg per minute\", payload:0};\n} else {\n    var msg3 = {topic:\"Msg per \" + statsSBI.IntervalAndFrequency, payload:statsSBI.msgSpeed, ui_control:{min:0,max:statsSBI.maxMsgs}};\n}\n\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "noerr": 0,
        "x": 3210,
        "y": 3040,
        "wires": [
            [
                "771cd6cb.803c78",
                "a01a75c5.89fab"
            ],
            [
                "db200cd7.5bd32"
            ],
            [
                "c456e411.58a4",
                "4b043c0a.8457ec"
            ]
        ]
    },
    {
        "id": "771cd6cb.803c78",
        "type": "ui_chart",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "group": "d8770726.1a10d",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Nr of Msg over time chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 4010,
        "y": 3040,
        "wires": [
            []
        ]
    },
    {
        "id": "a01a75c5.89fab",
        "type": "ui_gauge",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "group": "d8770726.1a10d",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "{{topic}}",
        "label": "nr of msgs",
        "format": "{{value}}",
        "min": 0,
        "max": "2000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 3940,
        "y": 3080,
        "wires": []
    },
    {
        "id": "84848923.c67118",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3030,
        "y": 2880,
        "wires": []
    },
    {
        "id": "3b5593e.bc8de6c",
        "type": "ui_gauge",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "group": "d8770726.1a10d",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Current Nr of Active Subscriptions",
        "label": "nr of subscriptions",
        "format": "{{value}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 3970,
        "y": 2880,
        "wires": []
    },
    {
        "id": "f0cbc0ca.f85c9",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "connectionsNr",
        "func": "var outMsg = {};\noutMsg.payload = msg.payload.length;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3670,
        "y": 2880,
        "wires": [
            [
                "3b5593e.bc8de6c",
                "8accaafb.ad1938"
            ]
        ]
    },
    {
        "id": "8accaafb.ad1938",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 2920,
        "wires": []
    },
    {
        "id": "33199ab4.21681e",
        "type": "ui_iframe",
        "z": "2164c119.f88826",
        "g": "9eaca16.128cb6",
        "group": "175d54ea.788a73",
        "name": "Dashboards Link",
        "order": 1,
        "width": "30",
        "height": "25",
        "url": "",
        "origin": "*",
        "x": 630,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "28ed3c82.06228c",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Go to Signin Tab",
        "x": 2272,
        "y": 3180,
        "wires": [
            []
        ]
    },
    {
        "id": "871d0572.18d9b8",
        "type": "ui_numeric",
        "z": "2164c119.f88826",
        "g": "a4c26498.4d1758",
        "name": "",
        "label": "Every...",
        "tooltip": "",
        "group": "360b2bc7.818494",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "",
        "topicType": "str",
        "format": "{{value}}",
        "min": "1",
        "max": "59",
        "step": 1,
        "className": "",
        "x": 1660,
        "y": 2720,
        "wires": [
            [
                "1a47219d.baab96"
            ]
        ]
    },
    {
        "id": "1a47219d.baab96",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "a4c26498.4d1758",
        "name": "store period",
        "func": "context.flow.set(\"period\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1920,
        "y": 2720,
        "wires": [
            []
        ]
    },
    {
        "id": "3488bd14.4bb1da",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "a4c26498.4d1758",
        "name": "store granularity",
        "func": "context.flow.set(\"granularity\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1930,
        "y": 2760,
        "wires": [
            []
        ]
    },
    {
        "id": "8dbdf175.e7ac5",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "a4c26498.4d1758",
        "name": "store encrypt",
        "func": "context.flow.set(\"encrypt\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1920,
        "y": 2800,
        "wires": [
            []
        ]
    },
    {
        "id": "fb94e554.157a98",
        "type": "ui_button",
        "z": "2164c119.f88826",
        "g": "a4c26498.4d1758",
        "name": "Update Scheduling",
        "group": "360b2bc7.818494",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Update Scheduling",
        "tooltip": "",
        "color": "",
        "bgcolor": "#FF9000",
        "icon": "mode_edit",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1690,
        "y": 2880,
        "wires": [
            [
                "acb1ea8a.2a0e6"
            ]
        ]
    },
    {
        "id": "acb1ea8a.2a0e6",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "a4c26498.4d1758",
        "name": "Get Values",
        "func": "var period = context.flow.get(\"period\");\nvar granularity = context.flow.get(\"granularity\");\nvar encrypt = context.flow.get(\"encrypt\");\nmsg.payload = {};\nmsg.payload.configuration = {};\nif (granularity == \"Seconds\") {\n    msg.payload.configuration.scheduling = \"*/\" + period + \" \" + \"* * * * * *\";\n} else if (granularity == \"Minutes\") {\n    msg.payload.configuration.scheduling = \"0 \" + \"/*\" + period + \" \" + \"* * * * *\";\n} else if (granularity == \"Hours\") {\n    msg.payload.configuration.scheduling = \"0 \" + \"0 \" + \"/*\" + period + \" \" + \"* * * *\";\n}\nmsg.payload.configuration.encrypt = encrypt;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1930,
        "y": 2880,
        "wires": [
            [
                "171706559f354cdf"
            ]
        ]
    },
    {
        "id": "4b6c82b0.fc018c",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "a4c26498.4d1758",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2390,
        "y": 2880,
        "wires": []
    },
    {
        "id": "da93d1b7.9c1328",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "events": "all",
        "x": 3120,
        "y": 2020,
        "wires": [
            [
                "e8c93d79.6993d"
            ]
        ]
    },
    {
        "id": "e8c93d79.6993d",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "accountLog",
        "func": "//Retreiving Libraries from the Settings.json file\nif(msg.payload){\n    var accountLogs = context.flow.get('accountlog');\n    var outputMsg = {};\n    outputMsg.payload = accountLogs;\n    return outputMsg;\n}\nmsg.payload = \"\";\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "x": 3310,
        "y": 2020,
        "wires": [
            [
                "323548f1.1a0c1",
                "515aafe.e6c17d"
            ]
        ]
    },
    {
        "id": "323548f1.1a0c1",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "group": "16ffbcf4.6cfa43",
        "name": "AccountLog",
        "order": 0,
        "width": "35",
        "height": "15",
        "format": "    <script>\n        (function(scope) {\n            scope.logs = [];\n        \n            scope.$watch('msg', function(msg){\n                if (msg) {\n                    if (msg.payload) {\n                        scope.logs = msg.payload;\n                    }\n                }\n            });\n        })(scope)\n    </script>\n    <div id=\"deck\">\n        <table class=\"table table-sm\">\n            <thead class=\"text-dark\">\n                <tr>\n                    <th scope=\"col\">access At</th>\n                    <th scope=\"col\">username</th>\n                </tr>\n            </thead>\n            <tbody>\n            <tr class=\"table-success\" ng-repeat=\"i in logs\">\n                <td><a class=\"text-dark\">{{i.accessAt}}</a></td>\n                <td><a class=\"text-dark\">{{i.username}}</a></td>\n            </tr>\n            </tbody>\n            \n        </table>\n    </div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 3570,
        "y": 2020,
        "wires": [
            [
                "ae5e1f90.74594"
            ]
        ]
    },
    {
        "id": "515aafe.e6c17d",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3450,
        "y": 1960,
        "wires": []
    },
    {
        "id": "4b043c0a.8457ec",
        "type": "ui_gauge",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "group": "952e8c04.ed2bb8",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "{{topic}}",
        "label": "nr of msgs",
        "format": "{{value}}",
        "min": 0,
        "max": "2000",
        "colors": [
            "#00b500",
            "#00b500",
            "#00b500"
        ],
        "seg1": "",
        "seg2": "",
        "x": 3940,
        "y": 3158,
        "wires": []
    },
    {
        "id": "c456e411.58a4",
        "type": "ui_chart",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "group": "952e8c04.ed2bb8",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Nr of Msg over time chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 4000,
        "y": 3195,
        "wires": [
            []
        ]
    },
    {
        "id": "ae5e1f90.74594",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "GetLog",
        "func": "//Retreiving Libraries from the Settings.json file\nmsg.payload = context.flow.get('accountlog');\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "x": 3420,
        "y": 2100,
        "wires": [
            [
                "c26f366a.bc9c88"
            ]
        ]
    },
    {
        "id": "c26f366a.bc9c88",
        "type": "delay",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3590,
        "y": 2100,
        "wires": [
            [
                "323548f1.1a0c1"
            ]
        ]
    },
    {
        "id": "ca0384c5.5857e",
        "type": "ui_switch",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "Enable",
        "label": "Show Stats",
        "tooltip": "",
        "group": "b6f3261d.3a0a2",
        "order": 2,
        "width": "2",
        "height": "17",
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 2770,
        "y": 3040,
        "wires": [
            [
                "db4d54ef.6b4a4"
            ]
        ]
    },
    {
        "id": "db4d54ef.6b4a4",
        "type": "switch",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2970,
        "y": 3040,
        "wires": [
            [
                "7048aeb0.313ca"
            ],
            [
                "efcbcc69.ed9d1"
            ]
        ]
    },
    {
        "id": "efcbcc69.ed9d1",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "checkStats",
        "func": "var statsSBI = context.global.get(\"statsSBI\");\nvar msg1 = {topic:\"Msg per minute\", payload:0, ui_control:{min:0,max:statsSBI.maxMsgs}};\nvar msg2 = {topic:\"Msg Size per minute\", payload:0};\nvar msg3 = {topic:\"Msg per minute\", payload:0};\n\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "noerr": 0,
        "x": 3210,
        "y": 3100,
        "wires": [
            [
                "771cd6cb.803c78",
                "a01a75c5.89fab"
            ],
            [
                "db200cd7.5bd32"
            ],
            [
                "4b043c0a.8457ec",
                "c456e411.58a4"
            ]
        ]
    },
    {
        "id": "9a1f71ad.ecf3e8",
        "type": "inject",
        "z": "2164c119.f88826",
        "g": "9eaca16.128cb6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "portfw",
                "v": "PORT_FORWARDING",
                "vt": "env"
            },
            {
                "p": "host",
                "v": "HOST",
                "vt": "env"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 2220,
        "wires": [
            [
                "726ded99.bd5cac"
            ]
        ]
    },
    {
        "id": "726ded99.bd5cac",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "9eaca16.128cb6",
        "name": "",
        "func": "if(msg.host === \"\"){\n    msg.url = \"http://localhost:\" + msg.portfw + \"/dash\";\n} else {\n    msg.url = \"http://\" + msg.host + \":\" + msg.portfw + \"/dash\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 2220,
        "wires": [
            [
                "33199ab4.21681e",
                "d4ad2f78.a01488"
            ]
        ]
    },
    {
        "id": "90855920.b8ec9",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "group": "e807dd2a.e5003",
        "name": "Load Bootstrap libraries",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/bootstrap.min.css\"  />\n<script type=\"text/javascript\" src=\"/css/jquery-3.3.1.slim.min.js\"></script>\n<script type=\"text/javascript\" src=\"/css/popper.min.js\"></script>\n<script type=\"text/javascript\" src=\"/css/bootstrap.min.js\"></script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "x": 270,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "db200cd7.5bd32",
        "type": "ui_chart",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "group": "d8770726.1a10d",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Msg Size over time chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 4001,
        "y": 3120,
        "wires": [
            []
        ]
    },
    {
        "id": "d4ad2f78.a01488",
        "type": "debug",
        "z": "2164c119.f88826",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 2040,
        "wires": []
    },
    {
        "id": "759da6d1.42e42",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "func": "if(msg.statusCode == 401 || msg.statusCode == 403){\n    \n    return null;\n}\nvar outMsg = {};\noutMsg.payload = msg.payload;\ncontext.flow.set(\"subscriptions\", msg.payload);\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3280,
        "y": 2840,
        "wires": [
            [
                "f0cbc0ca.f85c9",
                "b77c222a.ae9128"
            ]
        ]
    },
    {
        "id": "2daca573.fd2b62",
        "type": "http request",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 610,
        "y": 3080,
        "wires": [
            [
                "48dea209.875afc",
                "221315aa.55d912"
            ]
        ]
    },
    {
        "id": "48dea209.875afc",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "validateToken",
        "func": "var outMsg = {};\nif(typeof msg.payload.error == \"undefined\"){\n    outMsg.req = {};\n    outMsg.req.headers = {};\n    outMsg.req.headers[\"authorization\"] = \"Bearer \" + msg.payload.access_token;\n    outMsg.req.headers[\"refresh_token\"] = msg.payload.refresh_token;\n    return [null, outMsg];\n    \n} else {\n    outMsg.payload = 1;\n}\nreturn [outMsg, null];",
        "outputs": 2,
        "noerr": 0,
        "x": 800,
        "y": 3080,
        "wires": [
            [
                "bd6df944.5006d8"
            ],
            [
                "70ee2f95.a0b538",
                "5b190f606c4933fd"
            ]
        ]
    },
    {
        "id": "221315aa.55d912",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 3140,
        "wires": []
    },
    {
        "id": "becf9f3.769e4e",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 3160,
        "wires": []
    },
    {
        "id": "e56e4e4f.0073d",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Account Verification",
        "func": "var newMsg = {};\nnewMsg.payload = 0;\ncontext.flow.set(\"userToken\", msg.req.headers.authorization);\ncontext.flow.set('userRefreshToken', msg.req.headers.refresh_token);\nvar timeout_ms = (msg.access_token.body.exp - msg.access_token.body.iat)*1000;\ncontext.flow.set('sessionTimeout', timeout_ms);\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1440,
        "y": 3140,
        "wires": [
            [
                "bd6df944.5006d8",
                "e41ab701.8625a"
            ]
        ]
    },
    {
        "id": "d34576d7.3935d8",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "= 3 : Unathorized",
        "func": "msg.payload = \"User not authorized\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1990,
        "y": 3120,
        "wires": [
            [
                "7fdfc1e9.d4071"
            ]
        ]
    },
    {
        "id": "27f219a6.f4617e",
        "type": "switch",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "403",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1230,
        "y": 3120,
        "wires": [
            [
                "f1f808f7.b92858"
            ],
            [
                "f1f808f7.b92858"
            ],
            [
                "e56e4e4f.0073d"
            ]
        ]
    },
    {
        "id": "f1f808f7.b92858",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Account Verification",
        "func": "var newMsg = {}; newMsg.payload = 3;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1440,
        "y": 3100,
        "wires": [
            [
                "bd6df944.5006d8"
            ]
        ]
    },
    {
        "id": "70ee2f95.a0b538",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 3020,
        "wires": []
    },
    {
        "id": "d15cfb5e.6a30d8",
        "type": "ui_button",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Logout button",
        "group": "5b380ea4.54d28",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Logout",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "logout",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 200,
        "y": 3200,
        "wires": [
            [
                "771ce938.9776b8"
            ]
        ]
    },
    {
        "id": "771ce938.9776b8",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Prepare Logout",
        "func": "var outMsg = {};\noutMsg.url = context.global.get(\"namespace\") + \"/aasServer/auth/logout\";\noutMsg.headers = {};\noutMsg.headers[\"content-type\"] = \"application/x-www-form-urlencoded\";\noutMsg.payload = {};\noutMsg.payload.grant_type = \"refresh_token\";\noutMsg.payload.client_id = context.global.get(\"authenticationServerClient\");\n//outMsg.payload.client_secret = context.global.get(\"client_secret\");\noutMsg.payload.refresh_token = context.flow.get(\"userRefreshToken\");\n\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 3200,
        "wires": [
            [
                "963e89b9.45bfe"
            ]
        ]
    },
    {
        "id": "963e89b9.45bfe",
        "type": "http request",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 710,
        "y": 3200,
        "wires": [
            [
                "e7b15c84.191a2",
                "8a8e543e.f3cb58"
            ]
        ]
    },
    {
        "id": "e7b15c84.191a2",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 3180,
        "wires": []
    },
    {
        "id": "8a8e543e.f3cb58",
        "type": "switch",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "204",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1210,
        "y": 3200,
        "wires": [
            [
                "d5c3737a.fc96c"
            ],
            [
                "4e98c9a7.ddc0e8"
            ]
        ]
    },
    {
        "id": "d5c3737a.fc96c",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "Account Verification",
        "func": "var newMsg = {}; newMsg.payload = msg.payload.error;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1440,
        "y": 3180,
        "wires": [
            [
                "21dc8589.d16662"
            ]
        ]
    },
    {
        "id": "21dc8589.d16662",
        "type": "ui_toast",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Session Timeout",
        "name": "Logout Failure Dialog",
        "x": 1740,
        "y": 3180,
        "wires": [
            []
        ]
    },
    {
        "id": "2706d3c7.5d9a2c",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "parameterizedHttpRequest",
        "func": "var msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\n\nmsg1.method = 'GET';\nmsg1.url = context.global.get('namespace') + \"/aasServer/env\";\n/*msg1.headers = {\n        authorization: \"Bearer \"+ context.flow.get(\"token\")\n    }*/\nmsg1.headers = {\n        authorization: context.flow.get(\"userToken\")\n    }\n\n//msg2.descriptionId = \"b5595a4a-40a5-46e6-a9c6-f493f99a72a1\"; \n\n//msg3.method = 'GET';\n//msg3.url = context.global.get('namespace') + \"/aasServer/submodels\";\n\nreturn [msg1, msg2, msg];",
        "outputs": 3,
        "noerr": 0,
        "x": 1040,
        "y": 240,
        "wires": [
            [
                "8adcfea2.e5f07",
                "776a114a.b4cc78"
            ],
            [
                "ef9e4b4284b6fcf7"
            ],
            [
                "655852a0.36bea4"
            ]
        ]
    },
    {
        "id": "b0b325ea.8aff3",
        "type": "ui_button",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "Refresh button",
        "group": "28ba0356.ef188c",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "#14524e",
        "icon": "cached",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 520,
        "y": 300,
        "wires": [
            [
                "2706d3c7.5d9a2c"
            ]
        ]
    },
    {
        "id": "649d6c1f.031b2c",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "flowVariables",
        "func": "context.flow.set('selectedElements', []);\ncontext.flow.set('logs', []);\ncontext.flow.set('sessionTimeout', 10000);\n\n//var fs = context.global.get('fs');\n//var path = context.global.get('path');\n/*context.flow.set('accounts', []);\n\nvar fileName = \"httpauthfile.txt\";\nvar basePath = context.global.get('staticDocs');\nvar filePath = path.join(basePath, \"httpauth\", fileName);\n\nfs.readFile(filePath, \"utf8\", function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    content = data;\n    var contentArray = content.split(\"\\n\");\n    //var account = {username: contentArray[0], password: contentArray[2]};\n    var accounts = context.flow.get('accounts');\n    for(var account in contentArray){\n        accounts.push(contentArray[account]);    \n    }\n    \n    // Invoke the next step here however you like\n    //console.log(content);   // Put all of the code here (not the best solution)\n    exit();          // Or put the next step in a function and invoke it\n    \n    });\n    \nfunction exit() {\n    //msg.payload = content;\n    node.send(msg);\n    \n}\n    \n    //return msg;\n    //context.flow.set('Body', \\\"\\\");\n*/\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 200,
        "wires": [
            [
                "2706d3c7.5d9a2c"
            ]
        ]
    },
    {
        "id": "8adcfea2.e5f07",
        "type": "http request",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1370,
        "y": 240,
        "wires": [
            [
                "aa9b9e00.d9a198",
                "5e2d4012.8c261"
            ]
        ]
    },
    {
        "id": "c18d191f.026578",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "detectBrowserReload",
        "func": "var payload = msg.payload;\nif(payload === \"connect\"){\n    return msg;\n}\n\nreturn null;\n//context.flow.set('Body', \"\");",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 240,
        "wires": [
            [
                "2706d3c7.5d9a2c"
            ]
        ]
    },
    {
        "id": "7e763d50.949554",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "events": "all",
        "x": 300,
        "y": 300,
        "wires": [
            [
                "b0b325ea.8aff3"
            ]
        ]
    },
    {
        "id": "2cf012d1.4a7f5e",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "NotificationMessage",
        "func": "//Retreiving Libraries from the Settings.json file\nmsg.payload = \"Manifest has been (re)loaded\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 580,
        "wires": [
            [
                "f3b7793f.d22a9"
            ]
        ]
    },
    {
        "id": "648a464.2a92838",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1177.5,
        "y": 618.75,
        "wires": []
    },
    {
        "id": "43780ceb.0f273c",
        "type": "inject",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 310,
        "y": 200,
        "wires": [
            [
                "649d6c1f.031b2c"
            ]
        ]
    },
    {
        "id": "5e2d4012.8c261",
        "type": "join",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2030,
        "y": 240,
        "wires": [
            [
                "d8a4f595.617738",
                "a8614b5f.c2fa5"
            ]
        ]
    },
    {
        "id": "3b691b47.1422f4",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1530,
        "y": 280,
        "wires": []
    },
    {
        "id": "e829d4f5.0e483",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "SubmodelsProcessing",
        "func": "var msg1 = {};\nvar payload = {};\n//var splitted = msg.payload[0].value[0].value.split(\" \");\n//var splitted = msg.payload.value[0].value.split(\" \");\n//var splitted = msg.payload[0].value.split(\" \");\npayload.type = msg.payload.type;\npayload.hostname = msg.payload.hostname;;\npayload.release = msg.payload.release;;\npayload.platform = msg.payload.platform;\npayload.arch =msg.payload.arch;\npayload.namespace = context.global.get('namespace');\nmsg1.payload = payload;\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 1740,
        "y": 300,
        "wires": [
            [
                "5e2d4012.8c261"
            ]
        ]
    },
    {
        "id": "5a1e731e.6fd0ec",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "x": 300,
        "y": 240,
        "wires": [
            [
                "c18d191f.026578"
            ]
        ]
    },
    {
        "id": "f3b7793f.d22a9",
        "type": "ui_toast",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "position": "bottom right",
        "displayTime": "1",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Manifest",
        "name": "Notify Manifest Changes",
        "x": 1550,
        "y": 580,
        "wires": []
    },
    {
        "id": "d8a4f595.617738",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2170,
        "y": 200,
        "wires": []
    },
    {
        "id": "a8614b5f.c2fa5",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "SubmodelsProcessing",
        "func": "//Retreiving Libraries from the Settings.json file\nvar outMsg = {};\nvar payload = [];\noutMsg.identifier = context.global.get(\"AASIdentifier\");\noutMsg.payload = payload;\nfor(var element in msg.payload){\n    if(typeof(msg.payload[element].assetAdministrationShells) !== 'undefined' && msg.payload[element] !== null){\n         outMsg.payload[1] = msg.payload[element];\n    } else {\n        outMsg.payload[0] = msg.payload[element];\n    }\n}\n\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2220,
        "y": 240,
        "wires": [
            [
                "a218c1c9.bf3c",
                "b36514b5.7418a8"
            ]
        ]
    },
    {
        "id": "a218c1c9.bf3c",
        "type": "msg-router",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 6,
        "x": 2450,
        "y": 240,
        "wires": [
            [
                "8b178b4f.b48a5"
            ],
            [
                "dbc07abd.87dac8"
            ],
            [
                "b1d7bd45.436bf8"
            ],
            [
                "28a6230f679f8eeb"
            ],
            [
                "eb868983.45c2e8"
            ],
            [
                "7a918d3a.b1ea34"
            ]
        ]
    },
    {
        "id": "a5d497d.a955b68",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "group": "b9ac7006.de90a",
        "name": "Counters",
        "order": 1,
        "width": 10,
        "height": "20",
        "format": "    <script>\n        (function(scope) {\n            scope.$watch('msg', function(msg){\n                if (msg) {\n                    var aass = msg.payload[1].assetAdministrationShells;\n                    scope.aasCounter = aass.length;\n                    var assets = msg.payload[1].assets;\n                    scope.assetCounter = assets.length;\n                    var submodels = msg.payload[1].submodels;\n                    scope.submodelsCounter = submodels.length;\n                    scope.submodelElementsCounter = 0;\n                    for(var submodel in submodels){\n                        scope.submodelElementsCounter = scope.submodelElementsCounter + submodels[submodel].submodelElements.length;\n                    }\n                    scope.conceptDescriptionsCounter = msg.payload[1].conceptDescriptions.length;\n                }\n            });\n        })(scope)\n    </script>\n        <div class=\"container\">\n            <h5><span class=\"badge badge-warning\">Asset Administration Shells: {{aasCounter}}</span></h5>\n            <h5><span class=\"badge badge-warning\">Assets: {{assetCounter}}</span></h5>\n            <h5><span class=\"badge badge-warning\">Submodels: {{submodelsCounter}}</span></h5>\n            <h5><span class=\"badge badge-warning\">Submodel Elements: {{submodelElementsCounter}}</span></h5>\n            <h5><span class=\"badge badge-warning\">Concept Descriptions: {{conceptDescriptionsCounter}}</span></h5>\n        </div>\n        <div>\n            <img width=\"300\" height=\"300\" src=\"{{msg.qrcode}}\">\n        </div>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3300,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "8b178b4f.b48a5",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2757.08349609375,
        "y": 168.58338928222656,
        "wires": []
    },
    {
        "id": "dbc07abd.87dac8",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "group": "8fc17f5a.38023",
        "name": "Header Submodel",
        "order": 1,
        "width": 15,
        "height": 30,
        "format": "<div id=\"deck11\" class=\"card-group\">\n            <div class=\"card-body\">\n            <div class=\"card text-white bg-light mb-3\" style=\"max-width: 45rem;\">\n                <ul class=\"list-group list-group-flush\">\n                 <li class=\"list-group-item\">\n                    <button class=\"btn btn-link text-dark\" data-toggle=\"collapse\" data-target=\"#collapse11\" aria-expanded=\"true\" aria-controls=\"#collapse11\">\n                            {{msg.identifier}} Overview\n                    </button> <span class=\"badge  badge-warning badge-pill\">{{msg.payload[1].assetAdministrationShells.length}}</span>\n                     <!--<a class=\"text-dark\" data-toggle=\"collapse\" href=\"#collapse11\">{{msg.identifier}} Overview</a>!-->\n                     <ul id=\"collapse11\" class=\"list-group list-group-flush panel-collapse collapse\">\n                        <li class=\"list-group-item list-group-item-info\" ng-repeat=\"shell in msg.payload[1].assetAdministrationShells\" ng-init=\"shellIndex=$index\">\n                        <button class=\"btn btn-link text-info\" data-toggle=\"collapse\" data-target=\"#collapse21\" aria-expanded=\"true\" aria-controls=\"#collapse21\">\n                            Administration Shell: {{shellIndex}}\n                        </button>\n                        <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse21\" aria-expanded=\"true\" >Administration Shell: {{shellIndex}} </a>!-->\n                            <ul id=\"collapse21\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                <li class=\"list-group-item\">\n                                    <a class=\"text-black-50\">Identififcation : <strong>{{shell.identification.id}}</strong></a>\n                                </li>\n                                <li class=\"list-group-item \">\n                                    <a class=\"text-black-50\">Asset Identification : <strong>{{shell.asset.keys[0].value}}</strong></a>\n                                </li>\n                                <li class=\"list-group-item\">\n                                    <a class=\"text-black-50\">Derived From : <strong>{{shell.derivedFrom.keys[0].value}}</strong></a>\n                                </li>\n                                <!--<li class=\"list-group-item list-group-item-info\">!--><li class=\"list-group-item\">\n                                    <button class=\"btn btn-link text-black-50\" data-toggle=\"collapse\" data-target=\"#collapse31\" aria-expanded=\"true\" aria-controls=\"#collapse31\">\n                                        Administration\n                                    </button>\n                                <!--<a class=\"text-black-50\"  data-toggle=\"collapse\" href=\"#collapse31\">Administration</a>!-->\n                                    <ul id=\"collapse31\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                        <li class=\"list-group-item list-group-item-info\">\n                                            <a class=\"text-info\" >version: {{shell.administration.version}}</a>\n                                        </li>\n                                         <li class=\"list-group-item list-group-item-info\">\n                                            <a class=\"text-info\" >version: {{shell.administration.revision}}</a>\n                                        </li>\n                                    </ul>\n                                </li>\n                            </ul>\n                        </li>\n                    </ul>\n                 </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n\n",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 3320.08349609375,
        "y": 202.08338928222656,
        "wires": [
            [
                "ed973683.3fdac8"
            ]
        ]
    },
    {
        "id": "b1d7bd45.436bf8",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "group": "7a30c02.5d2894",
        "name": "Header Overview",
        "order": 1,
        "width": 15,
        "height": "20",
        "format": "    <script>\n        this.scope.sendRequest = function(element){\n            this.send({payload:{virtualLocation:element.Attribute[1].Value[0]}});\n        }\n        this.scope.isVisible = function(element){\n            if(element.Attribute[0].Attribute[0].Value[0] == \"\" && element.Attribute[0].Attribute[0].Value[1] == \"\")\n                return false;\n            else return true;\n        }\n    </script>\n\n    <div id=\"deck\" class=\"card-group\">\n            <div class=\"card-body\">\n            <div class=\"card text-white bg-light mb-3\" style=\"max-width: 45rem;\">\n                <ul class=\"list-group list-group-flush\">\n                 <li class=\"list-group-item\">\n                     <a class=\"text-dark\">{{msg.identifier}} Running Platform</a>\n                     <ul class=\"list-group list-group-flush\">\n                        <li class=\"list-group-item list-group-item-info\">\n                            <a class=\"text-info\">Hostname : <strong>{{msg.payload[0].hostname}}</strong></a>\n                        </li>\n                        <li class=\"list-group-item list-group-item-info\">\n                            <a class=\"text-info\">Type : <strong>{{msg.payload[0].type}}</strong></a>\n                        </li>\n                        <li class=\"list-group-item list-group-item-info\">\n                            <a class=\"text-info\">Platform : <strong>{{msg.payload[0].platform}}</strong></a>\n                        </li>\n                        <li class=\"list-group-item list-group-item-info\">\n                            <a class=\"text-info\">Architecture : <strong>{{msg.payload[0].arch}}</strong></a>\n                        </li>\n                        <li class=\"list-group-item list-group-item-info\">\n                            <a class=\"text-info\">Release : <strong>{{msg.payload[0].release}}</strong></a>\n                        </li>\n                        <li class=\"list-group-item list-group-item-info\">\n                            <a class=\"text-info\">Namespace : <strong>{{msg.payload[0].namespace}}</strong></a>\n                        </li>\n                    </ul>\n                 </li>\n                </ul>\n            </div>\n            </div>\n    </div>\n    <div id=\"deck\" class=\"card-group\">\n            <div class=\"card-body\">\n            <div class=\"card text-white bg-light mb-3\" style=\"max-width: 45rem;\">\n                <ul class=\"list-group list-group-flush\">\n                 <li class=\"list-group-item\">\n                     <a class=\"text-dark\">{{msg.identifier}} Overview</a>\n                     <ul class=\"list-group list-group-flush\">\n                        <li class=\"list-group-item list-group-item-info\" ng-repeat=\"shell in msg.payload[1].assetAdministrationShells\" ng-init=\"shellIndex=$index\">\n                        <a class=\"text-info\" aria-expanded=\"true\" >Administration Shell: {{shellIndex}} </a>\n                        <ul class=\"list-group list-group-flush\">\n                            <li class=\"list-group-item\">\n                                <a class=\"text-black-50\">Identififcation : <strong>{{shell.identification.id}}</strong></a>\n                            </li>\n                            <li class=\"list-group-item \">\n                                <a class=\"text-black-50\">Asset Identification : <strong>{{shell.asset.keys[0].value}}</strong></a>\n                            </li>\n                            <li class=\"list-group-item\">\n                                <a class=\"text-black-50\">Derived From : <strong>{{shell.derivedFrom.keys[0].value}}</strong></a>\n                            </li>\n                        </ul>\n                        </li>\n                    </ul>\n                 </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n\n\n",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 3321.3334045410156,
        "y": 241.6667022705078,
        "wires": [
            []
        ]
    },
    {
        "id": "40ba0174.feea08",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "LiveDataSelectedElements",
        "func": "//Retreiving Libraries from the Settings.json file\nif(msg.payload != \"init\"){\n    var selectedElements = context.flow.get('selectedElements');\n    var selectedElement = msg.payload;\n    \n    if(selectedElements.lenght == 0){\n        //selectedElements.push(selectedElement._Attribs.ID);\n        selectedElements.push(selectedElement);\n    } else {\n        var found = false;\n        for(var element in selectedElements){\n            //if(selectedElement._Attribs.ID == selectedElements[element]){\n            if(selectedElement.selectedElement.idShort == selectedElements[element].selectedElement.idShort && selectedElement.submodelId == selectedElements[element].submodelId && selectedElement.shellId == selectedElements[element].shellId){\n                selectedElements.splice(element, 1);\n                found = true;\n                break;\n            }\n        }\n        if(!found){\n            //selectedElements.push(selectedElement._Attribs.ID);\n            selectedElements.push(selectedElement);\n        }\n    }\n    context.flow.set('selectedElements', selectedElements);\n    msg.payload = selectedElements;\n    return msg;\n} else {\n    context.flow.set('selectedElements', []);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3340,
        "y": 620,
        "wires": [
            [
                "13eaa4a6.391393"
            ]
        ]
    },
    {
        "id": "ed973683.3fdac8",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3521.58349609375,
        "y": 202.08338928222656,
        "wires": []
    },
    {
        "id": "13eaa4a6.391393",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3570,
        "y": 620,
        "wires": []
    },
    {
        "id": "655852a0.36bea4",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1330,
        "y": 500,
        "wires": []
    },
    {
        "id": "7a918d3a.b1ea34",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "retrievingSubmodels",
        "func": "var outMsg = {};\nif(msg.payload.length > 1){\n    var administrationShells = msg.payload[1].assetAdministrationShells;\n    var submodels = msg.payload[1].submodels;\n    var shells = [];\n    for(var shellIndex in administrationShells){\n        var element = {};\n        var shell = administrationShells[shellIndex];\n        element.shellIdShort = shell.idShort;\n        element.shellIdentifier = shell.identification.id;\n        element.submodels = [];\n        var shellSubmodels = shell.submodels;\n        for(var submodelIndex in submodels){\n            for(var shellSubmodelIndex in shellSubmodels){\n                if(submodels[submodelIndex].identification.id === shellSubmodels[shellSubmodelIndex].keys[0].value){\n                    element.submodels.push(submodels[submodelIndex]);\n                }\n            }\n        }\n        shells.push(element);\n    }\n//outMsg.payload = msg.payload[1].submodels;\n    outMsg.payload = shells;\n    outMsg.subscriptions = context.flow.get(\"subscriptions\") || [];\n    return outMsg;\n    \n}\nelse return outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2660,
        "y": 660,
        "wires": [
            [
                "5fdc6c44f4e6b7bc"
            ]
        ]
    },
    {
        "id": "c37add0d.9710f",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "group": "c56f01cc.380dd",
        "name": "ConceptDescriptions",
        "order": 1,
        "width": "30",
        "height": "20",
        "format": "    <script>\n        (function(scope) {\n            scope.$watch('msg', function(msg){\n                if (msg) {\n                    if (msg.payload) {\n                        scope.conceptDescriptions = [];\n                        var descriptions = msg.payload; \n                        for(var description in descriptions){\n                            var conceptDescription = {};\n                            conceptDescription.id = descriptions[description].identification.id;\n                            conceptDescription.modelType = descriptions[description].modelType.name;\n                            var dataSpecification = descriptions[description].embeddedDataSpecifications[0].dataSpecificationContent;\n                            var langs = dataSpecification.preferredName;\n                            for(var lang in langs){\n                                if(langs[lang].language == \"en\"){\n                                    conceptDescription.preferredName = langs[lang].text;\n                                }\n                            }\n                            conceptDescription.shortName = dataSpecification.shortName;\n                            conceptDescription.unit = dataSpecification.unit;\n                            conceptDescription.dataType = dataSpecification.dataType;\n                            var defLangs = dataSpecification.definition;\n                            for(var defLang in defLangs){\n                                if(defLangs[defLang].language == \"en\"){\n                                    conceptDescription.definition = defLangs[defLang].text;\n                                }\n                            }\n                                    //scope.send({payload:dataInterfaceElement});\n                                    scope.conceptDescriptions.push(conceptDescription);\n                        }\n                        scope.send({payload:scope.conceptDescriptions});\n                    }\n                        \n                }\n            });\n/*            scope.init = function() {\n                //scope.observations = [];\n                scope.send({payload:scope.observations});\n            }*/\n        })(scope)\n    </script>\n    <div id=\"deck\">\n        <table class=\"table table-sm\">\n            <thead class=\"text-dark\">\n                <tr>\n                    <th scope=\"col\">Id</th>\n                    <th scope=\"col\">modelType</th>\n                    <th scope=\"col\">preferredName</th>\n                    <th scope=\"col\">shortName</th>\n                    <th scope=\"col\">unit</th>\n                    <th scope=\"col\">dataType</th>\n                    <th scope=\"col\">definition</th>\n                </tr>\n            </thead>\n            <tbody>\n            <tr ng-repeat=\"cd in conceptDescriptions\">\n                <td><a class=\"text-dark\">{{cd.id}}</a></td>\n                <td><a class=\"text-dark\">{{cd.modelType}}</a></td>\n                <td><a class=\"text-dark\">{{cd.preferredName}}</a></td>\n                <td><a class=\"text-dark\">{{cd.shortName}}</a></td>\n                <td><a class=\"text-dark\">{{cd.unit}}</a></td>\n                <td><a class=\"text-dark\">{{cd.dataType}}</a></td>\n                <td><a class=\"text-dark\">{{cd.definition}}</a></td>\n                <!--<td style=\"cursor:pointer;\" ng-click=\"remove(i)\" title=\"Remove\">&times;</td>!-->\n            </tr>\n            </tbody>\n            \n        </table>\n    </div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 3120,
        "y": 540,
        "wires": [
            [
                "57cc2b70.afb41c"
            ]
        ]
    },
    {
        "id": "aa9b9e00.d9a198",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1570,
        "y": 220,
        "wires": []
    },
    {
        "id": "eb868983.45c2e8",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "retrievingConceptDescriptions",
        "func": "var outMsg = {};\noutMsg.payload = msg.payload[1].conceptDescriptions;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2770,
        "y": 540,
        "wires": [
            [
                "c37add0d.9710f",
                "2fa38586.c0acea"
            ]
        ]
    },
    {
        "id": "57cc2b70.afb41c",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3370,
        "y": 540,
        "wires": []
    },
    {
        "id": "2fa38586.c0acea",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3002.857177734375,
        "y": 578.5714416503906,
        "wires": []
    },
    {
        "id": "c378d360.44ac8",
        "type": "ui_button",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "Refresh button",
        "group": "5b380ea4.54d28",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "#14524e",
        "icon": "cached",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 520,
        "y": 360,
        "wires": [
            [
                "2706d3c7.5d9a2c"
            ]
        ]
    },
    {
        "id": "b36514b5.7418a8",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2370,
        "y": 140,
        "wires": []
    },
    {
        "id": "db56541d.47959",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3350,
        "y": 680,
        "wires": []
    },
    {
        "id": "9c556d25.7ae77",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "func": "if(msg.statusCode == 401 || msg.statusCode == 403){\n    var outMsg = {};\n    outMsg.payload = {};\n    outMsg.headers = {};\n    outMsg.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    outMsg.payload.client_id = context.global.get(\"authenticationServerClient\");\n    //outMsg.payload.client_secret = context.global.get(\"client_secret_ui\");\n    outMsg.payload.grant_type = \"client_credentials\";\n    var realm = context.global.get(\"realm\");\n    //outMsg.url = context.global.get(\"keycloak_auth\") + \"/realms/\" + realm + \"/protocol/openid-connect/token\";\n    outMsg.url = \"http://keycloak:8080\" + \"/realms/\" + realm + \"/protocol/openid-connect/token\";\n    \n    return [outMsg, null];\n}\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "x": 1740,
        "y": 200,
        "wires": [
            [
                "9f049ae7.5b8448"
            ],
            [
                "5e2d4012.8c261"
            ]
        ]
    },
    {
        "id": "9f049ae7.5b8448",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1930,
        "y": 200,
        "wires": []
    },
    {
        "id": "585218a0.c4569",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 700,
        "wires": []
    },
    {
        "id": "decce0a.5623ea",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "retrieve NOVAAS Health",
        "func": "if(msg.payload === \"ok\"){\n    msg.payload = true;\n} else if(msg.payload === \"not_ok\"){\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 830,
        "y": 740,
        "wires": [
            [
                "3a8df59d.b261fa",
                "4277ccb7.a13f94",
                "25185bed.02905c",
                "4f70aa4.50d53d4",
                "d9ac191f.2ed418",
                "83f54403.763838",
                "1883da0b.b158f6",
                "a0e27916.231d4"
            ]
        ]
    },
    {
        "id": "3a8df59d.b261fa",
        "type": "ui_led",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "order": 1,
        "group": "76f4488e.b66968",
        "width": "5",
        "height": "2",
        "label": "",
        "labelPlacement": "right",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 1130,
        "y": 740,
        "wires": []
    },
    {
        "id": "4277ccb7.a13f94",
        "type": "ui_led",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "order": 1,
        "group": "f9f1bdc8.0e017",
        "width": "5",
        "height": "2",
        "label": "",
        "labelPlacement": "right",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 1130,
        "y": 780,
        "wires": []
    },
    {
        "id": "25185bed.02905c",
        "type": "ui_led",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "order": 1,
        "group": "4534a6d5.677c78",
        "width": "5",
        "height": "2",
        "label": "",
        "labelPlacement": "right",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 1130,
        "y": 820,
        "wires": []
    },
    {
        "id": "4f70aa4.50d53d4",
        "type": "ui_led",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "order": 1,
        "group": "4944a8dc.cb1658",
        "width": "5",
        "height": "2",
        "label": "",
        "labelPlacement": "right",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 1130,
        "y": 860,
        "wires": []
    },
    {
        "id": "d9ac191f.2ed418",
        "type": "ui_led",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "order": 1,
        "group": "a9cc6929.51b4",
        "width": "5",
        "height": "2",
        "label": "",
        "labelPlacement": "right",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 1130,
        "y": 900,
        "wires": []
    },
    {
        "id": "83f54403.763838",
        "type": "ui_led",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "order": 1,
        "group": "1e8a2f3d.54af89",
        "width": "5",
        "height": "2",
        "label": "",
        "labelPlacement": "right",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 1130,
        "y": 940,
        "wires": []
    },
    {
        "id": "1883da0b.b158f6",
        "type": "ui_led",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "order": 1,
        "group": "c8188165.80a358",
        "width": "5",
        "height": "2",
        "label": "",
        "labelPlacement": "right",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 1130,
        "y": 980,
        "wires": []
    },
    {
        "id": "a0e27916.231d4",
        "type": "ui_led",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "order": 1,
        "group": "1a940952.a8af7f",
        "width": "5",
        "height": "2",
        "label": "",
        "labelPlacement": "right",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 1130,
        "y": 1020,
        "wires": []
    },
    {
        "id": "d3060bb8.b1786",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "group": "77c7337d.b33f54",
        "name": "Asset",
        "order": 1,
        "width": 10,
        "height": "20",
        "format": "<img src=\"{{msg.payload}}\">",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 3130,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "7e3dad70.c8221c",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "func": "msg.payload = context.global.get(\"ThumbnailFilePath\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2940,
        "y": 480,
        "wires": [
            [
                "d3060bb8.b1786"
            ]
        ]
    },
    {
        "id": "cf9eba71.c9cd7",
        "type": "inject",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2730,
        "y": 480,
        "wires": [
            [
                "7e3dad70.c8221c"
            ]
        ]
    },
    {
        "id": "4d2d1e51.7bfb18",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "group": "c68d835e.db3b2",
        "name": "Submodels",
        "order": 1,
        "width": 20,
        "height": 30,
        "format": "<script>\n    (function(scope) {\n        //scope.root = \"\";\n        scope.depth = \"\";\n        /* scope.init = function() {\n        //scope.observations = [];\n        scope.send({payload:scope.observations});\n        }*/\n        scope.path = function(root, element){\n            if(element == ''){\n                return root;\n            } else {\n                return root + \".\" + element;\n            }\n        \n        }\n\n        scope.valueId = function(aasId, submodelId, element, root){\n            let id = \"\";\n            if(root !== ''){\n                //let elementPath = root.replace(\".\", \"_\");\n                id = aasId + \"_\" + submodelId + \"_\" + root + \"_\" + element;\n                id = id.replace(/\\./g,'_');\n            } else {\n                id = aasId + \"_\" + submodelId + \"_\" + element;\n                id = id.replace(/\\./g,'_');\n            }\n            return id;\n        }\n\n        scope.changeTextColor = function(aasId, submodelId, submodelElementId, root, subscriptions){\n            let stringifyText = \"\";\n            if(root != \"\"){\n                stringifyText = aasId + \";\" + submodelId + \";\" + root + \".\" + submodelElementId;\n            } else {\n                stringifyText = aasId + \";\" + submodelId + \";\" + submodelElementId;\n            }\n            for(let element in subscriptions){\n                var subscription = subscriptions[element];\n                var result = subscription.includes(stringifyText);\n                if(result){\n                    return \"true\";\n                }\n            }\n    \n            return \"false\";\n        }\n    \n    })(scope)\n</script>\n<script type=\"text/ng-template\" id=\"tree_view\">\n    <li class=\"list-group-item list-group-item-info\" >\n                                            <button class=\"btn btn-link text-info\" data-toggle=\"collapse\" data-target=\"#collapse22_{{submodelElement.idShort}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"collapse22_{{submodelElement.idShort}}_{{depth}}\">\n                                                Submodel Element Collection idShort: <strong>{{submodelElement.idShort}}</strong>\n                                            </button> <span class=\"badge  badge-warning badge-pill\">{{submodelElement.value.length}}</span>\n                                            <!--<a class=\"text-black-50\" data-toggle=\"collapse\" href=\"#collapse22_{{submodelElement.idShort}}_{{depth}}\" >idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                <ul id=\"collapse22_{{submodelElement.idShort}}_{{depth}}\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                                    <li class=\"list-group-item\" ng-repeat=\"submodelElement in submodelElement.value | filter:search\" ng-init=\"submodelElementIndex=$index\">\n                                                        <div ng-if=\"submodelElement.modelType.name !== 'SubmodelElementCollection'\">\n                                                            <label for=\"{{submodelElement.idShort}}_{{submodelElementIndex}}\">\n                                                                <button ng-class=\"changeTextColor(shell.shellIdentifier,submodel.idShort,submodelElement.idShort,root,{{msg.subscriptions}}) == 'true' ? 'btn btn-link text-danger' : 'btn btn-link text-black-50'\" data-toggle=\"collapse\" data-target=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\">\n                                                                    Property idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                </button>\n                                                                <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\">idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                            </label>\n                                                             <ul id=\"collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                                                    <li ng-if=\"submodelElement.semanticId.keys[0]\" class=\"list-group-item list-group-item-info\">\n                                                                        <a class=\"text-info\" data-toggle=\"collapse\">Semantic Id: <strong>{{submodelElement.semanticId.keys[0].value}}</strong></a>\n                                                                    </li>\n                                                                    <li ng-if=\"submodelElement.category\" class=\"list-group-item list-group-item-info\">\n                                                                        <a class=\"text-info\" data-toggle=\"collapse\">Category: <strong>{{submodelElement.category}}</strong></a>\n                                                                    </li>\n                                                                    <li class=\"list-group-item list-group-item-info\">\n                                                                        <a class=\"text-info\" data-toggle=\"collapse\">Model Type: <strong>{{submodelElement.modelType.name}}</strong></a>\n                                                                    </li>\n                                                                    <li ng-if=\"submodelElement.mimeType\" class=\"list-group-item list-group-item-info\">\n                                                                        <a class=\"text-info\" data-toggle=\"collapse\">mime Type: <strong>{{submodelElement.mimeType}}</strong></a>\n                                                                    </li>\n                                                                    <li ng-if=\"submodelElement.valueType\" class=\"list-group-item list-group-item-info\">\n                                                                        <a class=\"text-info\" data-toggle=\"collapse\">Value Type: <strong>{{submodelElement.valueType.dataObjectType.name}}</strong></a>\n                                                                    </li>\n                                                                    <li class=\"list-group-item list-group-item-info\">\n                                                                        <a id=\"{{valueId(shell.shellIdShort, submodel.idShort, submodelElement.idShort, root)}}\" class=\"text-info\" data-toggle=\"collapse\">Value: <strong>{{submodelElement.value}}</strong></a>\n                                                                    </li>\n                                                            </ul>\n                                                        </div>\n                                                        <!--<div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view2'\" ng-init=\"depth = depth + 1 + submodelElementIndex\">\n                                                                <!--<ul class=\"list-group list-group-flush\" ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view2'\" ng-init=\"depth = depth + 1\">\n                                                                </ul>!-->\n                                                            <!--</div>!-->\n                                                            <div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                                <div ng-include=\"'tree_view2'\" ng-if=\"true\" onload=\"root = path(root, submodelElement.idShort)\"\n                                                                    ng-init=\"depth = depth + 1 + submodelElementIndex\"></div>\n                                                            </div>\n                                                    </li>\n                                                </ul>\n                                            \n                                        </li>\n        \n       \n           \n        </script>\n<script type=\"text/ng-template\" id=\"tree_view2\">\n    <li class=\"list-group-item \" >\n                                            <button class=\"btn btn-link text-black-50\" data-toggle=\"collapse\" data-target=\"#collapse22_{{submodelElement.idShort}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"collapse22_{{submodelElement.idShort}}_{{depth}}\">\n                                                Submodel Element Collection idShort: <strong>{{submodelElement.idShort}}</strong>\n                                            </button> <span class=\"badge  badge-warning badge-pill\">{{submodelElement.value.length}}</span>\n                                            <!--<a class=\"text-black-50\" data-toggle=\"collapse\" href=\"#collapse22_{{submodelElement.idShort}}_{{depth}}\" >idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                <ul id=\"collapse22_{{submodelElement.idShort}}_{{depth}}\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                                    <li class=\"list-group-item list-group-item-info\" ng-repeat=\"submodelElement in submodelElement.value | filter:search\" ng-init=\"submodelElementIndex=$index\">\n                                                        <div ng-if=\"submodelElement.modelType.name !== 'SubmodelElementCollection'\">\n                                                            <label for=\"{{submodelElement.idShort}}_{{submodelElementIndex}}\">\n                                                                <button ng-class=\"changeTextColor(shell.shellIdentifier,submodel.idShort,submodelElement.idShort,root,{{msg.subscriptions}}) == 'true' ? 'btn btn-link text-danger' : 'btn btn-link text-info'\" data-toggle=\"collapse\" data-target=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\">\n                                                                   Property idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                </button>\n                                                                <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\">idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                            </label>\n                                                             <ul id=\"collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                                                    <li ng-if=\"submodelElement.semanticId.keys[0]\" class=\"list-group-item\">\n                                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Semantic Id: <strong>{{submodelElement.semanticId.keys[0].value}}</strong></a>\n                                                                    </li>\n                                                                    <li ng-if=\"submodelElement.category\" class=\"list-group-item\">\n                                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Category: <strong>{{submodelElement.category}}</strong></a>\n                                                                    </li>\n                                                                    <li class=\"list-group-item\">\n                                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Model Type: <strong>{{submodelElement.modelType.name}}</strong></a>\n                                                                    </li>\n                                                                    <li ng-if=\"submodelElement.mimeType\" class=\"list-group-item\">\n                                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">mime Type: <strong>{{submodelElement.mimeType}}</strong></a>\n                                                                    </li>\n                                                                    <li ng-if=\"submodelElement.valueType\" class=\"list-group-item\">\n                                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Value Type: <strong>{{submodelElement.valueType.dataObjectType.name}}</strong></a>\n                                                                    </li>\n                                                                    <li class=\"list-group-item\">\n                                                                        <a id=\"{{valueId(shell.shellIdShort, submodel.idShort, submodelElement.idShort, root)}}\" class=\"text-black-50\" data-toggle=\"collapse\">Value: <strong>{{submodelElement.value}}</strong></a>\n                                                                    </li>\n                                                            </ul>\n                                                        </div>\n                                                        <!--<div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view'\" ng-init=\"depth = depth + 1 + submodelElementIndex\">\n                                                                <!--<ul class=\"list-group list-group-flush\" ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view'\" ng-init=\"depth = depth + 1\">\n                                                                </ul>!-->\n                                                            <!--</div>!-->\n                                                            <div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                                <div ng-include=\"'tree_view'\" ng-if=\"true\" onload=\"root = path(root, submodelElement.idShort)\"\n                                                                    ng-init=\"depth = depth + 1 + submodelElementIndex\"></div>\n                                                            </div>\n                                                    </li>\n                                                </ul>\n                                            \n                                        </li>\n        \n       \n           \n        </script>\n<div id=\"deck12\" class=\"card-group\">\n    <div class=\"card-body\">\n        <div class=\"input-group input-group-sm mb-3\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"global search...\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-sm\" ng-model=\"search\">\n        </div>\n        <div id=\"accordion\" class=\"card text-white bg-light mb-3\">\n            <ul class=\"list-group list-group-flush\">\n                <li class=\"list-group-item\">\n                    <button class=\"btn btn-link text-dark\" data-toggle=\"collapse\" data-target=\"#collapse02\" aria-expanded=\"true\" aria-controls=\"#collapse02\">\n                            Administration Shells and Submodels\n                            </button> <span class=\"badge  badge-warning badge-pill\">{{msg.payload.length}}</span>\n                    <ul id=\"collapse02\" class=\"list-group list-group-flush panel-collapse collapse\">\n                        <li class=\"list-group-item list-group-item-info\"\n                            ng-repeat=\"shell in msg.payload | filter:search\">\n                            <button class=\"btn btn-link text-info\" data-toggle=\"collapse\" data-target=\"#collapse12_{{shell.shellIdShort}}\" aria-expanded=\"true\" aria-controls=\"collapse12_{{shell.shellIdShort}}\" ng-if=\"shell != ''\">\n                                        Asset Administration Shell idShort: <strong>{{shell.shellIdShort}}</strong>\n                                    </button>\n                            <span class=\"badge  badge-warning badge-pill\">{{shell.submodels.length}}</span>\n                            <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse12_{{shell.shellIdShort}}\" ng-if=\"shell != ''\">idShort: <strong>{{shell.shellIdShort}}</strong></a>!-->\n                            <ul id=\"collapse12_{{shell.shellIdShort}}\"\n                                class=\"list-group list-group-flush panel-collapse collapse\">\n                                <li class=\"list-group-item\" ng-repeat=\"submodel in shell.submodels | filter:search\"\n                                    ng-init=\"submodelIndex=$index\">\n                                    <button class=\"btn btn-link text-black-50\" data-toggle=\"collapse\" data-target=\"#collapse22_{{submodel.idShort}}_{{submodelIndex}}\" aria-expanded=\"true\" aria-controls=\"collapse22_{{submodel.idShort}}_{{submodelIndex}}\" ng-if=\"submodel != ''\">\n                                               Submodel idShort: <strong>{{submodel.idShort}}</strong>\n                                            </button>\n                                    <span class=\"badge  badge-warning badge-pill\">{{submodel.submodelElements.length}}</span>\n                                    <!--<a class=\"text-black-50\" data-toggle=\"collapse\" href=\"#collapse22_{{submodel.idShort}}\" ng-if=\"submodel != ''\">idShort: <strong>{{submodel.idShort}}</strong></a>!-->\n                                    <ul id=\"collapse22_{{submodel.idShort}}_{{submodelIndex}}\"\n                                        class=\"list-group list-group-flush panel-collapse collapse\">\n                                        <li class=\"list-group-item list-group-item-info\"\n                                            ng-repeat=\"submodelElement in submodel.submodelElements | filter:search\"\n                                            ng-init=\"submodelElementIndex=$index\">\n                                            <div ng-if=\"submodelElement.modelType.name !== 'SubmodelElementCollection'\">\n                                                <label for=\"{{submodelElement.idShort}}_{{submodelElementIndex}}\">\n                                                                <button ng-class=\"changeTextColor(shell.shellIdentifier,submodel.idShort,submodelElement.idShort,'',{{msg.subscriptions}}) == 'true' ? 'btn btn-link text-danger' : 'btn btn-link text-info'\" data-toggle=\"collapse\" data-target=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}\">\n                                                                    Property idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                </button>\n                                                                <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}\">idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                            </label>\n                                                <ul id=\"collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}\"\n                                                    class=\"list-group list-group-flush panel-collapse collapse\">\n                                                    <li ng-if=\"submodelElement.semanticId.keys[0]\"\n                                                        class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Semantic Id:\n                                                            <strong>{{submodelElement.semanticId.keys[0].value}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.category\" class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Category:\n                                                            <strong>{{submodelElement.category}}</strong></a>\n                                                    </li>\n                                                    <li class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Model Type:\n                                                            <strong>{{submodelElement.modelType.name}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.mimeType\" class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">mime Type:\n                                                            <strong>{{submodelElement.mimeType}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.valueType\" class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Value Type:\n                                                            <strong>{{submodelElement.valueType.dataObjectType.name}}</strong></a>\n                                                    </li>\n                                                    <li class=\"list-group-item\">\n                                                        <a id=\"{{valueId(shell.shellIdShort, submodel.idShort, submodelElement.idShort, '')}}\"\n                                                            class=\"text-black-50\" data-toggle=\"collapse\">Value:\n                                                            <strong>{{submodelElement.value}}</strong></a>\n                                                    </li>\n                                                </ul>\n                                            </div>\n                                            <!--<div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                <!--ng-include=\"'tree_view'\" ng-init=\"depth = 2 + submodelIndex\">\n                                                <!-- <ul class=\"list-group list-group-flush\" ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view'\">\n                                                                </ul>!-->\n                                            <div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                <div ng-include=\"'tree_view'\" ng-if=\"true\"\n                                                    onload=\"root = path(submodelElement.idShort, '')\"\n                                                    ng-init=\"depth = 2 + submodelIndex\"></div>\n                                            </div>\n                                            <!--</div>!-->\n                                        </li>\n                                    </ul>\n\n                                </li>\n                            </ul>\n                        </li>\n                    </ul>\n                    <!--<a class=\"text-dark\" data-toggle=\"collapse\" href=\"#collapse02\">Administration Shells and Submodels</a>!-->\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3070,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "dcb78149.5e104",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "group": "edb38227.3726a",
        "name": "Submodels_Login",
        "order": 1,
        "width": 20,
        "height": "30",
        "format": "<script>\n    (function(scope) {\n                 //scope.root = \"\";\n                 scope.depth = \"\";\n/*            scope.init = function() {\n                //scope.observations = [];\n                scope.send({payload:scope.observations});\n            }*/\n            scope.sendRequest = function(op){\n                var reqType = (op.type == \"operation\")?\"invoke\":(op.type == \"event\")?\"subscribe\":\"error, unkown type!!\";\n                this.send({payload:{action:op.action,to:op.to,requestType:reqType}});\n            }\n            scope.extractingElement = function(element, submodelId, shellId){\n                this.send({payload:{selectedElement: element, submodelId: submodelId, aasid: shellId}});\n            }\n            scope.extractingElementColl = function(element, root, submodelId, shellId){\n                //scope.root = submodelId;\n                this.send({payload:{selectedElement: element, path: root,submodelId: submodelId, aasid: shellId}});\n            }\n            scope.init = function(){\n                this.send({payload:\"init\"});\n            }\n            scope.path = function(root, element){\n                if(element == ''){\n                    return root;\n                } else {\n                    return root + \".\" + element;\n                }\n                \n            }\n            scope.changeTextColor = function(aasId, submodelId, submodelElementId, root, subscriptions){\n                let stringifyText = \"\";\n                if(root != \"\"){\n                    stringifyText = aasId + \";\" + submodelId + \";\" + root + \".\" + submodelElementId;\n                } else {\n                    stringifyText = aasId + \";\" + submodelId + \";\" + submodelElementId;\n                }\n                for(let element in subscriptions){\n                    var subscription = subscriptions[element];\n                    var result = subscription.includes(stringifyText);\n                    if(result){\n                        return \"true\";\n                    }\n                }\n            \n                return \"false\";\n            }\n\n        })(scope)\n        \n</script>\n<script type=\"text/ng-template\" id=\"tree_view\">\n\n\n    <li class=\"list-group-item list-group-item-info\">\n                                                                    <button class=\"btn btn-link text-info\" data-toggle=\"collapse\" data-target=\"#collapse42_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\">\n                                                                    idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                    </button>\n                                                                    <ul id='collapse42_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}' class=\"list-group list-group-flush panel-collapse collapse\">\n                                                                    <li class=\"custom-control custom-checkbox list-group-item list-group-item-light\" ng-repeat=\"submodelElement in submodelElement.value | filter:search\" ng-init=\"submodelCollElementIndex=$index\" ng-if=\"submodelElement.category != 'CONSTANT'\">\n                                                                    <div ng-if=\"submodelElement.modelType.name !== 'SubmodelElementCollection'\" class=\"custom-control custom-checkbox\">\n                                                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\" ng-click=\"extractingElementColl(submodelElement, root, submodel.idShort, shell.shellIdentifier)\">\n                                                                    <label class=\"custom-control-label\" for=\"{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\">\n                                                                        <button ng-class=\"changeTextColor(shell.shellIdentifier,submodel.idShort,submodelElement.idShort,root,{{msg.subscriptions}}) == 'true' ? 'btn btn-link text-danger' : 'btn btn-link text-black-50'\" data-toggle=\"collapse\" data-target=\"#collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}\">\n                                                                            idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                        </button>\n                                                                        <!--<a class=\"text-black-50\" data-toggle=\"collapse\" href=\"#collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\">idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                                    </label>\n                                                                        <ul id=\"collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                                                            <li ng-if=\"submodelElement.semanticId.keys[0]\" class=\"list-group-item list-group-item-info\">\n                                                                                <a class=\"text-info\" data-toggle=\"collapse\">Semantic Id: <strong>{{submodelElement.semanticId.keys[0].value}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.category\" class=\"list-group-item list-group-item-info\">\n                                                                                <a class=\"text-info\" data-toggle=\"collapse\">Category: <strong>{{submodelElement.category}}</strong></a>\n                                                                            </li>\n                                                                            <li class=\"list-group-item list-group-item-info\">\n                                                                                <a class=\"text-info\" data-toggle=\"collapse\">Model Type: <strong>{{submodelElement.modelType.name}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.mimeType\" class=\"list-group-item list-group-item-info\">\n                                                                                <a class=\"text-info\" data-toggle=\"collapse\">mime Type: <strong>{{submodelElement.mimeType}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.valueType\" class=\"list-group-item list-group-item-info\">\n                                                                                <a class=\"text-info\" data-toggle=\"collapse\">Value Type: <strong>{{submodelElement.valueType.dataObjectType.name}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.category === 'CONSTANT' || submodelCollElement.category === 'PARAMETER'\" class=\"list-group-item list-group-item-info\">\n                                                                                <a class=\"text-info\" data-toggle=\"collapse\">Value: <strong>{{submodelElement.value}}</strong></a>\n                                                                            </li>\n                                                                        </ul>\n                                                                        </div>\n                                                                        <div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                                            <div ng-include=\"'tree_view2'\" ng-if=\"true\" onload=\"root = path(root, submodelElement.idShort)\" ng-init=\"depth = depth + 1 + submodelElementIndex\"></div>\n                                                                        </div>\n                                                                        <!--<div><ul class=\"list-group list-group-flush\" ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view2'\"></ul></div>!-->\n                                                                        </li>\n                                                                        </ul>\n                                                                        </li>\n                                                        \n        \n            \n        </script>\n<script type=\"text/ng-template\" id=\"tree_view2\">\n\n\n    <li class=\"list-group-item\">\n                                                                    <button class=\"btn btn-link text-black-50\" data-toggle=\"collapse\" data-target=\"#collapse42_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\">\n                                                                    idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                    </button>\n                                                                    <ul id='collapse42_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}' class=\"list-group list-group-flush panel-collapse collapse\">\n                                                                    <li class=\"custom-control custom-checkbox list-group-item list-group-item-info\" ng-repeat=\"submodelElement in submodelElement.value | filter:search\" ng-init=\"submodelCollElementIndex=$index\" ng-if=\"submodelElement.category != 'CONSTANT'\">\n                                                                    <div ng-if=\"submodelElement.modelType.name !== 'SubmodelElementCollection'\" class=\"custom-control custom-checkbox\">\n                                                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\" ng-click=\"extractingElementColl(submodelElement, root, submodel.idShort, shell.shellIdentifier)\">\n                                                                    <label class=\"custom-control-label\" for=\"{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\">\n                                                                        <button ng-class=\"changeTextColor(shell.shellIdentifier,submodel.idShort,submodelElement.idShort,root,{{msg.subscriptions}}) == 'true' ? 'btn btn-link text-danger' : 'btn btn-link text-info'\" data-toggle=\"collapse\" data-target=\"#collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}\">\n                                                                            idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                        </button>\n                                                                        <!--<a class=\"text-black-50\" data-toggle=\"collapse\" href=\"#collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\">idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                                    </label>\n                                                                        <ul id=\"collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                                                            <li ng-if=\"submodelElement.semanticId.keys[0]\" class=\"list-group-item\">\n                                                                                <a class=\"text-black-50\" data-toggle=\"collapse\">Semantic Id: <strong>{{submodelElement.semanticId.keys[0].value}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.category\" class=\"list-group-item\">\n                                                                                <a class=\"text-black-50\" data-toggle=\"collapse\">Category: <strong>{{submodelElement.category}}</strong></a>\n                                                                            </li>\n                                                                            <li class=\"list-group-item\">\n                                                                                <a class=\"text-black-50\" data-toggle=\"collapse\">Model Type: <strong>{{submodelElement.modelType.name}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.mimeType\" class=\"list-group-item\">\n                                                                                <a class=\"text-black-50\" data-toggle=\"collapse\">mime Type: <strong>{{submodelElement.mimeType}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.valueType\" class=\"list-group-item\">\n                                                                                <a class=\"text-black-50\" data-toggle=\"collapse\">Value Type: <strong>{{submodelElement.valueType.dataObjectType.name}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.category === 'CONSTANT' || submodelCollElement.category === 'PARAMETER'\" class=\"list-group-item\">\n                                                                                <a class=\"text-black-50\" data-toggle=\"collapse\">Value: <strong>{{submodelElement.value}}</strong></a>\n                                                                            </li>\n                                                                        </ul>\n                                                                        </div>\n                                                                        <div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                                            <div ng-include=\"'tree_view'\" ng-if=\"true\" onload=\"root = path(root, submodelElement.idShort)\" ng-init=\"depth = depth + 1 + submodelElementIndex\"></div>\n                                                                        </div>\n                                                                        <!--<div><ul class=\"list-group list-group-flush\" ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view'\" ></ul></div>!-->\n                                                                        </li>\n                                                                        </ul>\n                                                                        </li>\n                                                        \n        \n            \n        </script>\n<div id=\"deck_2\" class=\"card-group\" ng-init=\"init()\">\n    <div class=\"card-body\">\n        <div class=\"input-group input-group-sm mb-3\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"global search...\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-sm\" ng-model=\"search\">\n        </div>\n        <div class=\"card text-white bg-light mb-3\">\n            <ul class=\"list-group list-group-flush\">\n                <li id=\"loginList\" class=\"list-group-item\">\n                    <button class=\"btn btn-link text-dark\" data-toggle=\"collapse\" data-target=\"#collapse03\" aria-expanded=\"true\" aria-controls=\"#collapse03\">\n                            Administration Shells and Submodels\n                            </button>\n                    <!--<a class=\"text-dark\" data-toggle=\"collapse\" href=\"#collapse03\">Administration Shells and Submodels</a>!-->\n                    <ul id=\"collapse03\" class=\"list-group list-group-flush panel-collapse collapse\">\n                        <li class=\"list-group-item list-group-item-info\"\n                            ng-repeat=\"shell in msg.payload | filter:search\">\n                            <button class=\"btn btn-link text-info\" data-toggle=\"collapse\" data-target=\"#collapse13_{{shell.shellIdShort}}\" aria-expanded=\"true\" aria-controls=\"collapse13_{{shell.shellIdShort}}\" ng-if=\"shell != ''\">\n                                        idShort: <strong>{{shell.shellIdShort}}</strong>\n                                    </button>\n                            <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse13_{{shell.shellIdShort}}\" ng-if=\"shell != ''\">idShort: <strong>{{shell.shellIdShort}}</strong></a>!-->\n                            <ul id=\"collapse13_{{shell.shellIdShort}}\"\n                                class=\"list-group list-group-flush panel-collapse collapse\">\n                                <li class=\"list-group-item\" ng-repeat=\"submodel in shell.submodels | filter:search\">\n                                    <button class=\"btn btn-link text-black-50\" data-toggle=\"collapse\" data-target=\"#collapse23_{{submodel.idShort}}\" aria-expanded=\"true\" aria-controls=\"collapse23_{{submodel.idShort}}\" ng-if=\"submodel != ''\">\n                                                idShort: <strong>{{submodel.idShort}}</strong>\n                                            </button>\n                                    <!--<a class=\"text-black-50\" data-toggle=\"collapse\" href=\"#collapse23_{{submodel.idShort}}\" ng-if=\"submodel != ''\">idShort: <strong>{{submodel.idShort}}</strong></a>!-->\n                                    <ul id=\"collapse23_{{submodel.idShort}}\"\n                                        class=\"list-group list-group-flush panel-collapse collapse\">\n                                        <li class=\"list-group-item list-group-item-info\"\n                                            ng-repeat=\"submodelElement in submodel.submodelElements | filter:search\"\n                                            ng-init=\"submodelElementIndex=$index\"\n                                            ng-if=\"submodelElement.category != 'CONSTANT'\">\n                                            <div ng-if=\"submodelElement.modelType.name !== 'SubmodelElementCollection'\"\n                                                class=\"custom-control custom-checkbox\">\n                                                <input type=\"checkbox\" class=\"custom-control-input\" id=\"{{submodelElement.idShort}}_{{submodelElementIndex}}\" ng-click=\"extractingElement(submodelElement, submodel.idShort, shell.shellIdentifier)\">\n                                                <label class=\"custom-control-label\" for=\"{{submodelElement.idShort}}_{{submodelElementIndex}}\">\n                                                                <button ng-class=\"changeTextColor(shell.shellIdentifier,submodel.idShort,submodelElement.idShort,'',{{msg.subscriptions}}) == 'true' ? 'btn btn-link text-danger' : 'btn btn-link text-info'\" data-toggle=\"collapse\" data-target=\"#collapse33_{{submodelElement.idShort}}_{{submodelElementIndex}}\" aria-expanded=\"true\" aria-controls=\"#collapse33_{{submodelElement.idShort}}_{{submodelElementIndex}}\">\n                                                                    idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                </button>\n                                                                <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse33_{{submodelElement.idShort}}_{{submodelElementIndex}}\">idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                            </label>\n                                                <ul id=\"collapse33_{{submodelElement.idShort}}_{{submodelElementIndex}}\"\n                                                    class=\"list-group list-group-flush panel-collapse collapse\">\n                                                    <li ng-if=\"submodelElement.semanticId.keys[0]\"\n                                                        class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Semantic Id:\n                                                            <strong>{{submodelElement.semanticId.keys[0].value}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.category\" class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Category:\n                                                            <strong>{{submodelElement.category}}</strong></a>\n                                                    </li>\n                                                    <li class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Model Type:\n                                                            <strong>{{submodelElement.modelType.name}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.mimeType\" class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">mime Type:\n                                                            <strong>{{submodelElement.mimeType}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.valueType\" class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Value Type:\n                                                            <strong>{{submodelElement.valueType.dataObjectType.name}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.category === 'CONSTANT' || submodelElement.category === 'PARAMETER'\"\n                                                        class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Value:\n                                                            <strong>{{submodelElement.value}}</strong></a>\n                                                    </li>\n                                                </ul>\n                                            </div>\n                                            <div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                <div ng-include=\"'tree_view'\" ng-if=\"true\"\n                                                    onload=\"root = path(submodelElement.idShort, '')\"\n                                                    ng-init=\"depth = 2 + submodelIndex\"></div>\n                                            </div>\n                                            <!--<ul class=\"list-group list-group-flush\" ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view'\">\n                                                                </ul>!-->\n        </div>\n        </li>\n\n        </ul>\n\n        </li>\n        </ul>\n        </li>\n        </ul>\n        </li>\n        </ul>\n    </div>\n</div>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3090,
        "y": 680,
        "wires": [
            [
                "40ba0174.feea08",
                "db56541d.47959"
            ]
        ]
    },
    {
        "id": "e41ab701.8625a",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1690,
        "y": 3140,
        "wires": []
    },
    {
        "id": "16f67a18.ffbace",
        "type": "file",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "filename": "/app/report.pdf",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "base64",
        "x": 1170,
        "y": 3780,
        "wires": [
            [
                "6b35b5c.246d3cc",
                "e65d6a5a.220b"
            ]
        ]
    },
    {
        "id": "8fe4d1c6.195158",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "ReportObject",
        "func": "var outMsg = {};\noutMsg.payload = {};\nvar header = msg.payload;\noutMsg.payload.header = header;\nvar report = {};\nreport.AASIdentifier = context.global.get(\"AASIdentifier\");\nreport.status = context.global.get(\"NOVAAS_Overall_Status\");\nreport.statsSBI = context.global.get(\"statsSBI\");\nreport.statusCheckSBI = context.global.get(\"statusCheckSBI\");\nreport.logs = context.flow.get(\"logs\");\nreport.accountlog = context.flow.get(\"accountlog\");\nreport.logo = context.flow.get(\"logoBase64\");\noutMsg.payload.report = report;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 690,
        "y": 3780,
        "wires": [
            [
                "dbd47ad9.b39ec",
                "6b35d8f6.cc4f3"
            ]
        ]
    },
    {
        "id": "45917e9f.5e03",
        "type": "ui_form",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "label": "",
        "group": "7dcd4079.256cf",
        "order": 4,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Date",
                "value": "date",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "Email",
                "value": "user",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "Notes",
                "value": "notes",
                "type": "multiline",
                "required": true,
                "rows": 6
            }
        ],
        "formValue": {
            "date": "",
            "user": "",
            "notes": ""
        },
        "payload": "",
        "submit": "Create Report",
        "cancel": "Cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "x": 520,
        "y": 3780,
        "wires": [
            [
                "8fe4d1c6.195158",
                "1da87241.c01316"
            ]
        ]
    },
    {
        "id": "dcfcf5b5.f7fcd8",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "events": "all",
        "x": 210,
        "y": 3780,
        "wires": [
            [
                "dbaadebd.4b69d8",
                "3ab155ea.bea442",
                "72b0a98f.34845"
            ]
        ]
    },
    {
        "id": "dbaadebd.4b69d8",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "PreFilling",
        "func": "msg.payload = {};\nmsg.payload.date = new Date();\nmsg.payload.user = context.flow.get(\"userName\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 370,
        "y": 3780,
        "wires": [
            [
                "45917e9f.5e03"
            ]
        ]
    },
    {
        "id": "dbd47ad9.b39ec",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 3720,
        "wires": []
    },
    {
        "id": "1da87241.c01316",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 3840,
        "wires": []
    },
    {
        "id": "6b35b5c.246d3cc",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "download Group",
        "func": "var msg = {};\n\n//msg.payload = {tab: \"Login\"};\n/*msg.payload = { group: {\n    hide : [\"Login_SensorData\", \"Login_History\"],\n    show : [\"Login_Signin\"]\n}\n};*/\n\nmsg.payload = { group: {\n    show : [\"Reporting_ReportDownload\"]\n}\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1380,
        "y": 3780,
        "wires": [
            [
                "affa7940.488c58"
            ]
        ]
    },
    {
        "id": "affa7940.488c58",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "show download",
        "x": 1570,
        "y": 3780,
        "wires": [
            []
        ]
    },
    {
        "id": "3ab155ea.bea442",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "download group",
        "func": "\n//msg.payload = {tab: \"Login\"};\n/*msg.payload = { group: {\n    hide : [\"Login_SensorData\", \"Login_History\"],\n    show : [\"Login_Signin\"]\n}\n};*/\n\nmsg.payload = { group: {\n    hide : [\"Reporting_ReportDownload\"]\n}\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 3740,
        "wires": [
            [
                "7ad04b13.fae71c"
            ]
        ]
    },
    {
        "id": "7ad04b13.fae71c",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "hide download",
        "x": 630,
        "y": 3740,
        "wires": [
            []
        ]
    },
    {
        "id": "cbd1bdb3.acb988",
        "type": "comment",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "Reporting Section",
        "info": "",
        "x": 220,
        "y": 3540,
        "wires": []
    },
    {
        "id": "72b0a98f.34845",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 3620,
        "wires": []
    },
    {
        "id": "6b35d8f6.cc4f3",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "func": "var tableBuilder = function (data, columns) {\n    var body = [];\n\n    body.push(columns);\n\n    data.forEach(function(row) {\n        var dataRow = [];\n\n        columns.forEach(function(column) {\n            dataRow.push(row[column].toString());\n        })\n\n        body.push(dataRow);\n    });\n\n    return body;\n}\n\nvar checkValue = function(value){\n    if(value.link){\n        return value.link;\n    } else if(value.value){\n        return value.value;\n    }\n}\n\nvar convertTime = function(value){\n    var time = new Date(value.time);\n    return time;\n}\n\nvar outMsg = {};\n\nvar accountLogTable = [];\nfor (var elementAccountLog in msg.payload.report.accountlog){\n    accountLogTable.push(\n        {\n            \"accessAt\": msg.payload.report.accountlog[elementAccountLog].accessAt,\n            \"username\": msg.payload.report.accountlog[elementAccountLog].username\n        }\n        );\n}\n\nvar logsTable = [];\nfor (var elementLogs in msg.payload.report.logs){\n    logsTable.push(\n        {\n            \"observableReference\": msg.payload.report.logs[elementLogs].observableReference,\n            \"_msgid\": msg.payload.report.logs[elementLogs]._msgid,\n            \"time\": convertTime(msg.payload.report.logs[elementLogs]),\n            \"value\": checkValue(msg.payload.report.logs[elementLogs])\n        }\n        );\n}\n\nvar dd = {\n     \"header\": function(currentPage, pageCount, pageSize) {\n         if(msg.payload.report.logo){\n            return [\n                { \"image\": \"data:image/png;base64,\" + msg.payload.report.logo, \"height\": 30, \"width\": 30 }\n            ]\n        } else return;\n    },\n    \"footer\": function(currentPage, pageCount, pageSize) {\n        if(msg.payload.report.logo){\n            return [\n                { \"image\": \"data:image/png;base64,\" + msg.payload.report.logo, \"height\": 30, \"width\": 30 }\n            ]\n        } else return;\n    },    \n    \"content\": [\n\t\t{ \"text\": \"NOVAsset Administration Shell Report\", \"style\": \"header\" },\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t\t\"widths\": [\"*\", \"*\"],\n\t\t\t\t\"body\": [\n\t\t\t\t\t[\"Created by \", msg.payload.header.user],\n\t\t\t\t\t[\"Created at \", msg.payload.header.date],\n\t\t\t\t\t[\"Notes \", msg.payload.header.notes]\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{ \"text\": \"NOVAAS Overview\", \"style\": \"subheader\" },\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t    \"widths\": [\"*\", \"*\"],\n\t\t\t\t\"body\": [\n\t\t\t\t\t[\"NOVAAS Identifier\", msg.payload.report.AASIdentifier],\n\t\t\t\t\t[\"Status\", msg.payload.report.status]\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t\t\"widths\": [\"*\", \"*\"],\n\t\t\t\t\"headerRows\": 1,\n\t\t\t\t\"body\": [\n\t\t\t\t\t[{ \"text\": \"Southbound Interface Statistics\", \"style\": \"tableHeader\", \"colSpan\": 2, \"alignment\": \"center\" }, {}],\n\t\t\t\t\t[\"Connector Status\", msg.payload.report.statusCheckSBI.connected],\n\t\t\t\t\t[\"Total number of Datasources\", msg.payload.report.statusCheckSBI.nrOfDataSources],\n\t\t\t\t\t[\"Inbound Messages\", msg.payload.report.statsSBI.msgSpeed],\n\t\t\t\t\t[\"Inbound  Interval and Frequency\", msg.payload.report.statsSBI.IntervalAndFrequency],\n\t\t\t\t\t[\"Inbound Messages Max\", msg.payload.report.statsSBI.maxMsgs]\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{ \"text\": \"Account Logs\", \"style\": \"subheader\" },\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t    \"widths\": [\"*\", \"*\"],\n\t\t\t    \"headerRows\": 1,\n\t\t\t\t\"body\":\ttableBuilder(accountLogTable, ['accessAt', 'username'])\n\t\t\t}\n\t\t},\n\t\t{ \"text\": \"Logs\", \"style\": \"subheader\" },\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t    \"widths\": ['auto', 'auto', 'auto', 'auto'],\n\t\t\t    \"headerRows\": 1,\n\t\t\t\t\"body\":\ttableBuilder(logsTable, ['observableReference', '_msgid', 'time', 'value'])\n\t\t\t}\n\t\t}\n\t],\n\t\"styles\": {\n\t\t\"header\": {\n\t\t\t\"fontSize\": 18,\n\t\t\t\"bold\": true,\n\t\t\t\"margin\": [0, 0, 0, 10]\n\t\t},\n\t\t\"subheader\": {\n\t\t\t\"fontSize\": 16,\n\t\t\t\"bold\": true,\n\t\t\t\"margin\": [0, 10, 0, 5]\n\t\t},\n\t\t\"tableExample\": {\n\t\t\t\"margin\": [0, 5, 0, 15]\n\t\t},\n\t\t\"tableOpacityExample\": {\n\t\t\t\"margin\": [0, 5, 0, 15],\n\t\t\t\"fillColor\": \"blue\",\n\t\t\t\"fillOpacity\": 0.3\n\t\t},\n\t\t\"tableHeader\": {\n\t\t\t\"bold\": true,\n\t\t\t\"fontSize\": 13,\n\t\t\t\"color\": \"black\"\n\t\t}\n\t}\n}\noutMsg.payload = dd;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 850,
        "y": 3780,
        "wires": [
            [
                "5e23ea8f.c23584",
                "b04e3281.48c738"
            ]
        ]
    },
    {
        "id": "b04e3281.48c738",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 3720,
        "wires": []
    },
    {
        "id": "9c0fd00c.914d28",
        "type": "inject",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 3940,
        "wires": [
            [
                "3ff45b61.4dfabc"
            ]
        ]
    },
    {
        "id": "3ff45b61.4dfabc",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "PrepareOutput",
        "func": "msg.payload = \"-name\" + \" \" + \"logo.png\";\n//msg.payload = \"aasx/4830902_DPDM-6-15-PA---_0_.pdf\";\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 3940,
        "wires": [
            [
                "6b223dd3.5f489c"
            ]
        ]
    },
    {
        "id": "6b223dd3.5f489c",
        "type": "exec",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "command": "find",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 600,
        "y": 3940,
        "wires": [
            [
                "3f7de25e.9b0a5e"
            ],
            [],
            []
        ]
    },
    {
        "id": "3f7de25e.9b0a5e",
        "type": "change",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 3940,
        "wires": [
            [
                "7cadd42.3bb532c"
            ]
        ]
    },
    {
        "id": "7cadd42.3bb532c",
        "type": "file in",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 960,
        "y": 3940,
        "wires": [
            [
                "ec32158e.39755"
            ]
        ]
    },
    {
        "id": "a6820e84.1e723",
        "type": "change",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "logoBase64",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 3940,
        "wires": [
            []
        ]
    },
    {
        "id": "1128b4bc.b761eb",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "d": true,
        "g": "d9efc969.3ac7a8",
        "group": "6a4d510d.5de65",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<form action=\"/aasx/docu/report.pdf\" method=\"get\">\n    <input type=\"submit\" value=\"Download Report\" \n         name=\"Submit\" id=\"frm1_submit\" />\n</form>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 850,
        "y": 4100,
        "wires": [
            []
        ]
    },
    {
        "id": "848a1897.da83b",
        "type": "template",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<form action=\"/aasx/docu/report.pdf\" method=\"get\">\n    <md-button class=\"btn1 vibrate filled touched bigfont\" type=\"submit\" value=\"{{{payload}}}\" \n         name=\"Submit\" id=\"frm1_submit\">Download</md-button>\n</form>",
        "output": "str",
        "x": 1390,
        "y": 3860,
        "wires": [
            [
                "2c172878.06cf38"
            ]
        ]
    },
    {
        "id": "2c172878.06cf38",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "group": "6a4d510d.5de65",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1570,
        "y": 3860,
        "wires": [
            []
        ]
    },
    {
        "id": "e65d6a5a.220b",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "func": "msg.payload = context.flow.get('userToken');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 3860,
        "wires": [
            [
                "848a1897.da83b"
            ]
        ]
    },
    {
        "id": "5e23ea8f.c23584",
        "type": "pdfmake",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "outputType": "base64",
        "inputProperty": "payload",
        "options": "{}",
        "outputProperty": "payload",
        "x": 1010,
        "y": 3780,
        "wires": [
            [
                "16f67a18.ffbace"
            ]
        ]
    },
    {
        "id": "ec32158e.39755",
        "type": "base64",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 1150,
        "y": 3940,
        "wires": [
            [
                "a6820e84.1e723"
            ]
        ]
    },
    {
        "id": "776a114a.b4cc78",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 160,
        "wires": []
    },
    {
        "id": "9c50cdd2.d8bbe8",
        "type": "link in",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "notify_In",
        "links": [
            "692fbe88.989748"
        ],
        "x": 275,
        "y": 360,
        "wires": [
            [
                "c378d360.44ac8"
            ]
        ]
    },
    {
        "id": "692fbe88.989748",
        "type": "link out",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "notiFy_out",
        "links": [
            "9c50cdd2.d8bbe8"
        ],
        "x": 2155,
        "y": 2980,
        "wires": []
    },
    {
        "id": "ef9e4b4284b6fcf7",
        "type": "link call",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "links": [
            "c84b0c7cde581592"
        ],
        "timeout": "30",
        "x": 1380,
        "y": 300,
        "wires": [
            [
                "3b691b47.1422f4",
                "e829d4f5.0e483"
            ]
        ]
    },
    {
        "id": "f5d81204558f97fa",
        "type": "link in",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "NOVAAS_InformChange_UI",
        "links": [
            "75069c95f9678337",
            "880b6fcb1e0267ac",
            "b02343341548cb6d",
            "cdf4c73d6d630dc9",
            "d86b4b628f132f76",
            "e1996a1656ac271d",
            "e9af1dd4474a45f1"
        ],
        "x": 760,
        "y": 580,
        "wires": [
            [
                "648a464.2a92838",
                "2cf012d1.4a7f5e",
                "2706d3c7.5d9a2c"
            ]
        ],
        "l": true
    },
    {
        "id": "ef469c86.b0f528",
        "type": "link in",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "NOVAAS_Status_UI_In",
        "links": [
            "9f780d309e2d62ff"
        ],
        "x": 580,
        "y": 740,
        "wires": [
            [
                "decce0a.5623ea",
                "585218a0.c4569"
            ]
        ],
        "l": true
    },
    {
        "id": "8b15d4c7.c880d",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "(Un)SubscriptionNotification",
        "func": "var outMsg = {};\noutMsg.payload = msg.statusMessage;\nreturn [msg, outMsg]; ",
        "outputs": 2,
        "noerr": 0,
        "x": 2380,
        "y": 2160,
        "wires": [
            [
                "1e0c844d6abae7f8"
            ],
            [
                "a11a2eee.a46c8",
                "cb167da9.5407f8",
                "eb351cb4.81437"
            ]
        ]
    },
    {
        "id": "a11a2eee.a46c8",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2590,
        "y": 2220,
        "wires": []
    },
    {
        "id": "3da1a7ea98029b38",
        "type": "link in",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "NOVAAS_(Un)SubscriptionEvent_UI",
        "links": [
            "49f6617c1a03ff11",
            "3b6f974617ed5d03"
        ],
        "x": 1800,
        "y": 2160,
        "wires": [
            [
                "8b15d4c7.c880d"
            ]
        ],
        "l": true
    },
    {
        "id": "1e0c844d6abae7f8",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "7f3265a4.23ba94",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2510,
        "y": 2060,
        "wires": []
    },
    {
        "id": "171706559f354cdf",
        "type": "link call",
        "z": "2164c119.f88826",
        "g": "a4c26498.4d1758",
        "name": "",
        "links": [
            "3d24e4987a9374bb"
        ],
        "timeout": "30",
        "x": 2140,
        "y": 2880,
        "wires": [
            [
                "4b6c82b0.fc018c"
            ]
        ]
    },
    {
        "id": "5b190f606c4933fd",
        "type": "link call",
        "z": "2164c119.f88826",
        "g": "d7076418.bb51d8",
        "name": "",
        "links": [
            "5801760d2dab07fc"
        ],
        "timeout": "30",
        "x": 1000,
        "y": 3120,
        "wires": [
            [
                "27f219a6.f4617e",
                "becf9f3.769e4e"
            ]
        ]
    },
    {
        "id": "28a6230f679f8eeb",
        "type": "change",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "qrcodeinput",
                "pt": "msg",
                "to": "REPO_LOCATION",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "original",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 300,
        "wires": [
            [
                "806e01ba8dd4aa22"
            ]
        ]
    },
    {
        "id": "806e01ba8dd4aa22",
        "type": "qrcode-generator",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "qrtype": "text2qr",
        "text2qrText": "",
        "ssid": "",
        "hiddenssid": false,
        "wifitype": "",
        "phonenum": "",
        "smsphonenum": "",
        "smstext": "",
        "mailto": "",
        "mailsubject": "",
        "mailbody": "",
        "latitude": "",
        "longitude": "",
        "colorlight": "#ffffff",
        "colordark": "#000000",
        "printstatus": false,
        "x": 2890,
        "y": 300,
        "wires": [
            [
                "bdc6118ddbb26572"
            ]
        ]
    },
    {
        "id": "bdc6118ddbb26572",
        "type": "change",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "qrcode",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3060,
        "y": 300,
        "wires": [
            [
                "a5d497d.a955b68"
            ]
        ]
    },
    {
        "id": "5fdc6c44f4e6b7bc",
        "type": "msg-router",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2870,
        "y": 660,
        "wires": [
            [
                "4d2d1e51.7bfb18"
            ],
            [
                "dcb78149.5e104"
            ]
        ]
    },
    {
        "id": "c162a071340f3680",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "statusVal": "",
        "statusType": "auto",
        "x": 2610,
        "y": 760,
        "wires": []
    },
    {
        "id": "fb52595bb042a87c",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "func": "\nvar retrieveElementId = function (submodelElement, elementId, elementIds) {\n    \n    elementId = elementId + submodelElement.idShort;\n    if (submodelElement.modelType.name == \"SubmodelElementCollection\") {\n        elementId = elementId + \"_\";\n        let values = submodelElement.value;\n        for (let valueIndex in values){\n            retrieveElementId(values[valueIndex], elementId, elementIds);\n        }\n    } else {\n        elementId = elementId + \":\" + submodelElement.value;\n        elementIds.push(elementId);\n    }\n    return true;\n}\n\nlet elementIds = [];\nlet test = [];\nlet aasList = msg.payload;\nfor(let aasIndex in aasList){\n    let aas = aasList[aasIndex];\n    let submodelList = aas.submodels;\n    for(let submodelIndex in submodelList){\n        let submodelElementsList = submodelList[submodelIndex].submodelElements;\n        for(let submodelElementIndex in submodelElementsList){\n            let submodelElement = submodelElementsList[submodelElementIndex];\n            let modelType = submodelElement.modelType.name;\n            if (modelType == \"SubmodelElementCollection\" || submodelElement.category == \"VARIABLE\"){\n                let elementId = aas.shellIdShort + \"_\" + submodelList[submodelIndex].idShort + \"_\";\n                retrieveElementId(submodelElement, elementId, elementIds);\n            }\n        }\n    }\n\n\n}\n\n//msg.payload = \"DPDM_OperationalData_ResponseTimePred:\" + Math.random();\nmsg.payload = elementIds;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2900,
        "y": 720,
        "wires": [
            [
                "bec31447af229551",
                "8cc0ac81e48b03f7"
            ]
        ]
    },
    {
        "id": "f409f63099e3739c",
        "type": "inject",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 1750,
        "y": 720,
        "wires": [
            [
                "d09a83e16a7f9759"
            ]
        ]
    },
    {
        "id": "bec31447af229551",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "statusVal": "",
        "statusType": "auto",
        "x": 3050,
        "y": 760,
        "wires": []
    },
    {
        "id": "8cc0ac81e48b03f7",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "group": "c68d835e.db3b2",
        "name": "UpdateValues",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            $(document).ready(function(){\n                let ids = msg.payload;\n                for(let idIndex in ids){\n                    let id = ids[idIndex];\n                    let valueSplit = id.split(\":\");\n                    let jqueryElementId = \"#\" + valueSplit[0];\n                    let jqueryElement = $(jqueryElementId);\n                    jqueryElement.html(\"Value: <strong>\" + valueSplit[1] + \"</strong>\");\n                }\n            });\n        });\n    })(scope)\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 3080,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "fac35eb3a87144b5",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "parameterizedHttpRequest",
        "func": "var msg1 = {};\n\nmsg1.method = 'GET';\nmsg1.url = context.global.get('namespace') + \"/aasServer/env\";\nmsg1.headers = {\n    authorization: context.flow.get(\"userToken\")\n}\n\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 2240,
        "y": 720,
        "wires": [
            [
                "636592f210d0709c"
            ]
        ]
    },
    {
        "id": "636592f210d0709c",
        "type": "http request",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2450,
        "y": 720,
        "wires": [
            [
                "c162a071340f3680",
                "70759b25fdae0ba5"
            ]
        ]
    },
    {
        "id": "70759b25fdae0ba5",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "retrievingSubmodels",
        "func": "var outMsg = {};\nvar administrationShells = msg.payload.assetAdministrationShells;\nvar submodels = msg.payload.submodels;\nvar shells = [];\nfor(var shellIndex in administrationShells){\n    var element = {};\n    var shell = administrationShells[shellIndex];\n    element.shellIdShort = shell.idShort;\n    element.shellIdentifier = shell.identification.id;\n    element.submodels = [];\n    var shellSubmodels = shell.submodels;\n    for(var submodelIndex in submodels){\n        for(var shellSubmodelIndex in shellSubmodels){\n            if(submodels[submodelIndex].identification.id === shellSubmodels[shellSubmodelIndex].keys[0].value){\n                element.submodels.push(submodels[submodelIndex]);\n            }\n        }\n    }\n    shells.push(element);\n}\noutMsg.payload = shells;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2660,
        "y": 720,
        "wires": [
            [
                "fb52595bb042a87c",
                "a25cff0979be5e05"
            ]
        ]
    },
    {
        "id": "addf54177a23460b",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "events": "change",
        "x": 1740,
        "y": 780,
        "wires": [
            [
                "70c749831513dc2c",
                "d0a6ef47933a7871"
            ]
        ]
    },
    {
        "id": "70c749831513dc2c",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1890,
        "y": 820,
        "wires": []
    },
    {
        "id": "d09a83e16a7f9759",
        "type": "gate",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "controlTopic": "control",
        "defaultState": "closed",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "statusCmd": "status",
        "persist": false,
        "storeName": "default",
        "x": 2030,
        "y": 720,
        "wires": [
            [
                "fac35eb3a87144b5"
            ]
        ]
    },
    {
        "id": "d0a6ef47933a7871",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "func": "msg.topic = \"control\";\nif(msg.payload == \"change\" && msg.tab == 1){\n    msg.payload = \"open\";\n} else {\n    msg.payload = \"close\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 780,
        "wires": [
            [
                "d09a83e16a7f9759"
            ]
        ]
    },
    {
        "id": "a25cff0979be5e05",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "statusVal": "",
        "statusType": "auto",
        "x": 2890,
        "y": 760,
        "wires": []
    },
    {
        "id": "cd3d4435453fd008",
        "type": "ui_dropdown",
        "z": "2164c119.f88826",
        "g": "a4c26498.4d1758",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "360b2bc7.818494",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Seconds",
                "value": "Seconds",
                "type": "str"
            },
            {
                "label": "Minutes",
                "value": "Minutes",
                "type": "str"
            },
            {
                "label": "Hours",
                "value": "Hours",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1670,
        "y": 2760,
        "wires": [
            [
                "3488bd14.4bb1da"
            ]
        ]
    },
    {
        "id": "a99930336b0c92a9",
        "type": "ui_switch",
        "z": "2164c119.f88826",
        "g": "a4c26498.4d1758",
        "name": "",
        "label": "Encrypt",
        "tooltip": "",
        "group": "360b2bc7.818494",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1660,
        "y": 2800,
        "wires": [
            [
                "8dbdf175.e7ac5"
            ]
        ]
    },
    {
        "id": "d77d0408732fd237",
        "type": "inject",
        "z": "9cfaf8e1b235e713",
        "g": "065e6699a83c4478",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "initScheduling",
                "v": "* * * * * * *",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 100,
        "wires": [
            [
                "9469bc5f4967897e",
                "a9e2399911f827fb",
                "a77ba8c0d6451bdd",
                "16b1d42bbaac107e"
            ]
        ]
    },
    {
        "id": "9469bc5f4967897e",
        "type": "getflows",
        "z": "9cfaf8e1b235e713",
        "d": true,
        "g": "065e6699a83c4478",
        "name": "",
        "x": 470,
        "y": 100,
        "wires": [
            [
                "e55fb239c1b22c52"
            ]
        ]
    },
    {
        "id": "e55fb239c1b22c52",
        "type": "unsafe-function",
        "z": "9cfaf8e1b235e713",
        "d": true,
        "g": "065e6699a83c4478",
        "name": "Initialize Driver Id",
        "func": "var drivers = context.global.get(\"Drivers\") || [];\nvar driver = {label:\"DPDM/OperationalData\", id:msg.thisflow}\n//var connector = {label}\n    for(var index in drivers){\n        if(drivers[index] === msg.thisflow){\n        return null;\n    }\n}\ndrivers.push(driver);\ncontext.global.set(\"Drivers\", drivers);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "a9e2399911f827fb",
        "type": "unsafe-function",
        "z": "9cfaf8e1b235e713",
        "g": "065e6699a83c4478",
        "name": "Initialize Context",
        "func": "context.flow.set(\"NrOfDataSources\", 7);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 760,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "9ec3ab4c31d15faf",
        "type": "inject",
        "z": "9cfaf8e1b235e713",
        "g": "065e6699a83c4478",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 340,
        "wires": [
            [
                "e5865d09d52965cc"
            ]
        ]
    },
    {
        "id": "e5865d09d52965cc",
        "type": "saveflow",
        "z": "9cfaf8e1b235e713",
        "g": "065e6699a83c4478",
        "name": "",
        "path": "/tmp/DPDM//OperationalData",
        "enabled": false,
        "exporttype": "addflow",
        "x": 600,
        "y": 340,
        "wires": [
            [
                "52081eabf8d4c284"
            ]
        ]
    },
    {
        "id": "52081eabf8d4c284",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "g": "065e6699a83c4478",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 870,
        "y": 340,
        "wires": []
    },
    {
        "id": "9ed858cd439ca4fc",
        "type": "cronplus",
        "z": "9cfaf8e1b235e713",
        "g": "065e6699a83c4478",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [],
        "x": 1020,
        "y": 240,
        "wires": [
            [
                "2b38ab0b22721258"
            ]
        ]
    },
    {
        "id": "16b1d42bbaac107e",
        "type": "unsafe-function",
        "z": "9cfaf8e1b235e713",
        "g": "065e6699a83c4478",
        "name": "Initialize Simulator",
        "func": "context.flow.set(\"currentOperatingPressure\", 0);\ncontext.flow.set(\"cylinderStatus\", 0);\ncontext.flow.set(\"responseTime\", 0);\ncontext.flow.set(\"valvePosition\", 0);\ncontext.flow.set(\"newCycle\", false);\ncontext.flow.set(\"cycle\", 0);\ncontext.flow.set(\"responseTimePred\", []);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "2b38ab0b22721258",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "g": "065e6699a83c4478",
        "name": "",
        "topic": "configSchedule",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "72ae2011.f3d7b",
        "x": 1540,
        "y": 240,
        "wires": []
    },
    {
        "id": "a77ba8c0d6451bdd",
        "type": "unsafe-function",
        "z": "9cfaf8e1b235e713",
        "g": "065e6699a83c4478",
        "name": "",
        "func": "msg.payload = [\n  {\n    \"command\": \"add\",\n    \"name\": \"sbi scheduling data routing\",\n    \"expression\": msg.initScheduling,\n    \"expressionType\": \"cron\",\n    \"payloadType\": \"default\",\n    \"limit\": null\n  }\n];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 695,
        "y": 240,
        "wires": [
            [
                "9ed858cd439ca4fc"
            ]
        ],
        "l": false
    },
    {
        "id": "6ec913eacd920df3",
        "type": "unsafe-function",
        "z": "9cfaf8e1b235e713",
        "g": "065e6699a83c4478",
        "name": "",
        "func": "msg.payload = [\n  {\n    \"command\": \"add\",\n    \"name\": \"sbi scheduling data routing\",\n    \"expression\": msg.payload,\n    \"expressionType\": \"cron\",\n    \"payloadType\": \"default\",\n    \"limit\": null\n  }\n];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 695,
        "y": 280,
        "wires": [
            [
                "9ed858cd439ca4fc",
                "41dc6a3a202784ae"
            ]
        ],
        "l": false
    },
    {
        "id": "af2df98108471391",
        "type": "msg-speed",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "frequency": "min",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "x": 1270,
        "y": 2440,
        "wires": [
            [
                "769359e9cdfdceb7"
            ],
            []
        ]
    },
    {
        "id": "769359e9cdfdceb7",
        "type": "unsafe-function",
        "z": "9cfaf8e1b235e713",
        "name": "stats",
        "func": "var statsSBI = {};\nvar msgSpeed = msg.payload;\nvar msgIntervalAndFrequency = msg.intervalAndFrequency;\nstatsSBI.msgSpeed = msgSpeed;\nstatsSBI.IntervalAndFrequency = msgIntervalAndFrequency;\nstatsSBI.maxMsgs = context.flow.get(\"NrOfDataSources\") * 60;\nmsg.payload = statsSBI;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1530,
        "y": 2420,
        "wires": [
            [
                "cf6374a1039ab03e"
            ]
        ]
    },
    {
        "id": "cf6374a1039ab03e",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "metrics",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "d2edf304.fdfa2",
        "x": 1760,
        "y": 2420,
        "wires": []
    },
    {
        "id": "db3f83f1200bad11",
        "type": "sub-link-output",
        "z": "9cfaf8e1b235e713",
        "inputs": 0,
        "name": "",
        "topic": "metrics",
        "link": "72ae2011.f3d7b",
        "priority": "0",
        "aliasType": "str",
        "alias": "",
        "clone": false,
        "x": 690,
        "y": 2440,
        "wires": [
            [
                "af2df98108471391",
                "af2a8e62dd46182f"
            ],
            []
        ]
    },
    {
        "id": "77de3ca4f6b3c8e5",
        "type": "unsafe-function",
        "z": "9cfaf8e1b235e713",
        "name": "statusNotification",
        "func": "var statusCheck  = {};\nstatusCheck.connected = true;\nstatusCheck.nrOfDataSources = context.flow.get(\"NrOfDataSources\");\nmsg.payload = {\"statusCheck\": statusCheck};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1350,
        "y": 2560,
        "wires": [
            [
                "712c83642aa3e6d1"
            ]
        ]
    },
    {
        "id": "8a7dbd8d87d2c14b",
        "type": "unsafe-function",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "func": "var valvePosition = context.flow.get(\"valvePosition\") || 0;\nvar cylinderStatus = context.flow.get(\"cylinderStatus\") || 0;\nvar newCycle = context.flow.get(\"newCycle\") || false;\nvar cycle = context.flow.get(\"cycle\") || 0;\nif((valvePosition === 0 && cylinderStatus === 0) && newCycle === false && cycle < 40){\n    context.flow.set(\"newCycle\", true);\n    cycle = cycle + 1;\n    context.flow.set(\"cycle\", cycle);\n    return [msg, null];\n} else if((valvePosition === 1 && cylinderStatus === 1) && newCycle === true && cycle < 40){\n    context.flow.set(\"newCycle\", false);\n    cycle = cycle + 1;\n    context.flow.set(\"cycle\", cycle);\n    return [null, msg];\n}\n\nreturn null;\n",
        "outputs": 2,
        "noerr": 0,
        "x": 560,
        "y": 2880,
        "wires": [
            [
                "ce9413d0a9a77083",
                "80c266ae2be09b65"
            ],
            [
                "fd7382f223312a4a"
            ]
        ]
    },
    {
        "id": "ce9413d0a9a77083",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 850,
        "y": 2920,
        "wires": []
    },
    {
        "id": "b3ad792b2edc9635",
        "type": "delay",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "10",
        "randomLast": "15",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 960,
        "y": 2840,
        "wires": [
            [
                "ffd110d41f4f0720",
                "80c266ae2be09b65"
            ]
        ]
    },
    {
        "id": "ffd110d41f4f0720",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1210,
        "y": 2920,
        "wires": []
    },
    {
        "id": "80c266ae2be09b65",
        "type": "unsafe-function",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "func": "var cycle = context.flow.get(\"cycle\") || 0;\nvar valvePosition = context.flow.get(\"valvePosition\") || 0;\nvar cylinderStatus = context.flow.get(\"cylinderStatus\") || 0;\nvar startCycleTs = context.flow.get(\"startCycleTs\") || 0;\nvar date = new Date();\n\n    if((cylinderStatus === 0 && valvePosition === 0) || (cylinderStatus === 1 && valvePosition === 1)){\n\n        //context.flow.set(\"timestamp\", date.getTime());\n        context.flow.set(\"startCycleTs\", date.getTime());\n        \n        if(cycle >= 40){\n            //context.flow.set(\"cycle\", cycle);\n            msg.delay = 30000;\n            msg.topic =\"@stats reset\";\n            return msg;\n        }\n        if(valvePosition === 0){\n            valvePosition = 1;\n            context.flow.set(\"responseTime\", 0);\n        } else {\n            valvePosition = 0;\n            context.flow.set(\"responseTime\", 0);\n        }\n        context.flow.set(\"valvePosition\", valvePosition);\n        /*if(cycle < 10){\n            msg.delay = 5000 + (5000*0.01*cycle);\n        } else if(cycle < 15 && cycle >= 10){\n            msg.delay = 5500 + (5000*0.02*cycle);\n        } else if (cycle < 20 && cycle >= 15){\n            msg.delay = 6500 + (5000*0.03*cycle);\n        } else if(cycle < 30 && cycle >= 20){\n            msg.delay = 7000 + (5000*0.035*cycle);\n        }else if(cycle < 40 && cycle >= 30){\n            msg.delay = 10250 + (5000*0.04*cycle);\n        }*/\n        if(cycle < 40){\n            msg.delay = 5000 + (5000*0.025*cycle);\n        }\n        \n        \n        return msg;\n    }\n\n\n//var date = new Date();\n//context.flow.set(\"timestamp\", date.getTime());\n//var currentTimeElapsed = date.getTime() - startCycleTs;\n//context.flow.set(\"responseTime\", currentTimeElapsed);\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 1220,
        "y": 2880,
        "wires": [
            [
                "dc175efce3667e47",
                "f29b87e2c6b01028",
                "f4c6ec0a7c79d4ad"
            ]
        ]
    },
    {
        "id": "eb548de2149d6ee6",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2050,
        "y": 2694,
        "wires": []
    },
    {
        "id": "d4b45ef79bec8e14",
        "type": "unsafe-function",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "func": "var elapsedTimeMovingAvg = msg.result.movingAvg;\ncontext.flow.set(\"elapsedTimeMovingAvg\", elapsedTimeMovingAvg);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 2800,
        "wires": [
            []
        ]
    },
    {
        "id": "1fd902a0ae8723c3",
        "type": "Data Analysis",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "action": "realtime",
        "outputs": 3,
        "outliersBase": "avg",
        "outliersStdDevs": "3",
        "term": "15",
        "keyProperty": "msg.topic",
        "dataProperty": "msg.payload",
        "dataProperties": [
            "msg.payload[0]",
            "msg.payload[1]"
        ],
        "x": 1840,
        "y": 2754,
        "wires": [
            [
                "eb548de2149d6ee6",
                "d4b45ef79bec8e14",
                "c36933bd82b6291e"
            ],
            [],
            []
        ]
    },
    {
        "id": "dc175efce3667e47",
        "type": "delay",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1440,
        "y": 2880,
        "wires": [
            [
                "fd99972c24c81aab"
            ]
        ]
    },
    {
        "id": "fd99972c24c81aab",
        "type": "unsafe-function",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "func": "var cycle = context.flow.get(\"cycle\") || 0;\nvar valvePosition = context.flow.get(\"valvePosition\") || 0;\nvar cylinderStatus = context.flow.get(\"cylinderStatus\") || 0;\n\nvar timeElapsed = 0;  \nvar date = new Date();\n\nif((cylinderStatus === \"undefined\" && valvePosition === 1)){\n    context.flow.set(\"cylinderStatus\", 1);\n} else if((cylinderStatus === \"undefined\" && valvePosition === 0)){\n    context.flow.set(\"cylinderStatus\", 0);\n}\n\nif(cycle < 10 && cycle >= 0){\n    timeElapsed = msg.delay;\n} else if(cycle < 15 && cycle >= 10){\n    timeElapsed = msg.delay;\n} else if (cycle < 20 && cycle >= 15){\n    timeElapsed = msg.delay;\n} else if(cycle < 30 && cycle >= 20){\n    timeElapsed = msg.delay;\n}else if(cycle < 40 && cycle >= 30){\n    timeElapsed = msg.delay;\n} else if(cycle >= 40){\n    cycle = 0;\n    context.flow.set(\"cycle\", cycle);\n    context.flow.set(\"valvePosition\", 0);\n    context.flow.set(\"cylinderStatus\", 0);\n    context.flow.set(\"newCycle\", false);\n    context.flow.set(\"responseTime\", timeElapsed);\n\n    context.flow.set(\"timestamp\", date.getTime());\n    msg.payload = timeElapsed;\n    var msg_out_2 = {};\n    return [msg, msg_out_2];\n    \n}\n\ncontext.flow.set(\"responseTime\", timeElapsed);\n\ncontext.flow.set(\"timestamp\", date.getTime());\nmsg.payload = timeElapsed;\nmsg.topic = \"responseTimeMvgAvg\";\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "x": 1620,
        "y": 2880,
        "wires": [
            [
                "1fd902a0ae8723c3",
                "644663af6f92549b"
            ],
            [
                "526399564f87c901"
            ]
        ]
    },
    {
        "id": "f29b87e2c6b01028",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1430,
        "y": 2820,
        "wires": []
    },
    {
        "id": "644663af6f92549b",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1810,
        "y": 2680,
        "wires": []
    },
    {
        "id": "c36933bd82b6291e",
        "type": "unsafe-function",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "func": "var msg_out = {};\nvar payload = {};\n//payload.x = msg.result.count;\npayload.x = context.flow.get(\"cycle\");\npayload.y = msg.payload;\npayload.y_out = \"\";\nmsg_out.payload = payload;\nreturn msg_out;",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 2760,
        "wires": [
            [
                "526399564f87c901",
                "665544360eca4b26"
            ]
        ]
    },
    {
        "id": "a7fb8486b78d0cf2",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2630,
        "y": 2820,
        "wires": []
    },
    {
        "id": "665544360eca4b26",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2430,
        "y": 2800,
        "wires": []
    },
    {
        "id": "8054c1d81f12f82d",
        "type": "unsafe-function",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "func": "var responseTimePred = [];\nfor(var k = 1; k <= 10; k++){\n    var futurePrediction = msg.function.equation[0]*Math.pow((msg.payload.x + k), 2) + msg.function.equation[1]*(msg.payload.x + k) + msg.function.equation[2];\n    msg.payload.futurePrediction = futurePrediction;\n    responseTimePred.push(futurePrediction);\n}\n//responseTimePred.pop();\n//responseTimePred.unshift(futurePrediction);\ncontext.flow.set(\"responseTimePred\", responseTimePred);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2720,
        "y": 2880,
        "wires": [
            [
                "db3be3c0dd399687"
            ]
        ]
    },
    {
        "id": "db3be3c0dd399687",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2890,
        "y": 2820,
        "wires": []
    },
    {
        "id": "0d2f6a871544a928",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 530,
        "y": 2960,
        "wires": []
    },
    {
        "id": "61d0906e682a3214",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1830,
        "y": 3014,
        "wires": []
    },
    {
        "id": "f4c6ec0a7c79d4ad",
        "type": "unsafe-function",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "func": "var cycle = context.flow.get(\"cycle\");\nif(cycle < 40){\n    var calculatedDelay = context.flow.get(\"calculatedDelay\") || 0;\n    msg.topic = \"control\";\n    msg.payload = ((msg.delay)/1000) - 1;\n    calculatedDelay = Math.round(((msg.delay)/1000) - 1);\n    context.flow.set(\"calculatedDelay\", calculatedDelay);\n    return msg;\n} else return null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1440,
        "y": 3014,
        "wires": [
            [
                "cb8e20f1137ff3bd"
            ]
        ]
    },
    {
        "id": "8abaa3e2afc0c5a4",
        "type": "unsafe-function",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "func": "var date = new Date();\nvar startCycle = context.flow.get(\"startCycleTs\");\ncontext.flow.set(\"responseTime\", date.getTime() - startCycle);\ncalculatedDelay = context.flow.get(\"calculatedDelay\");\nif(calculatedDelay >= msg.payload ){\n    context.flow.set(\"cylinderStatus\", \"undefined\");\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1850,
        "y": 3114,
        "wires": [
            []
        ]
    },
    {
        "id": "4f15725a68147ceb",
        "type": "unsafe-function",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "func": "msg.topic = \"control\";\nmsg.payload = 60;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 3054,
        "wires": [
            [
                "c1aeb2c4a4cd1940"
            ]
        ]
    },
    {
        "id": "67ff5d6e4cf0a8ce",
        "type": "unsafe-function",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "func": "var date = new Date();\ncontext.flow.set(\"timestamp\", date.getTime());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 3074,
        "wires": [
            []
        ]
    },
    {
        "id": "1fb73eb1f89f2a8a",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1190,
        "y": 2994,
        "wires": []
    },
    {
        "id": "53d3faa7fbc05f5b",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1190,
        "y": 3034,
        "wires": []
    },
    {
        "id": "3cb6244d0aee0449",
        "type": "cronplus",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "schedule1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 220,
        "y": 2960,
        "wires": [
            [
                "8a7dbd8d87d2c14b",
                "0d2f6a871544a928",
                "4f15725a68147ceb"
            ]
        ]
    },
    {
        "id": "fd7382f223312a4a",
        "type": "countdown",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "topic": "",
        "payloadTimerStart": "",
        "payloadTimerStartType": "nul",
        "payloadTimerStop": "event",
        "payloadTimerStopType": "msg",
        "timer": "10",
        "resetWhileRunning": false,
        "setTimeToNewWhileRunning": false,
        "startCountdownOnControlMessage": false,
        "x": 970,
        "y": 2974,
        "wires": [
            [
                "80c266ae2be09b65",
                "1fb73eb1f89f2a8a"
            ],
            [
                "53d3faa7fbc05f5b"
            ]
        ]
    },
    {
        "id": "cb8e20f1137ff3bd",
        "type": "countdown",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "topic": "",
        "payloadTimerStart": "",
        "payloadTimerStartType": "nul",
        "payloadTimerStop": "",
        "payloadTimerStopType": "nul",
        "timer": "10",
        "resetWhileRunning": false,
        "setTimeToNewWhileRunning": true,
        "startCountdownOnControlMessage": true,
        "x": 1630,
        "y": 3014,
        "wires": [
            [],
            [
                "61d0906e682a3214",
                "8abaa3e2afc0c5a4"
            ]
        ]
    },
    {
        "id": "c1aeb2c4a4cd1940",
        "type": "countdown",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "topic": "",
        "payloadTimerStart": "",
        "payloadTimerStartType": "nul",
        "payloadTimerStop": "",
        "payloadTimerStopType": "nul",
        "timer": "10",
        "resetWhileRunning": false,
        "setTimeToNewWhileRunning": true,
        "startCountdownOnControlMessage": true,
        "x": 590,
        "y": 3054,
        "wires": [
            [],
            [
                "67ff5d6e4cf0a8ce"
            ]
        ]
    },
    {
        "id": "526399564f87c901",
        "type": "regression",
        "z": "9cfaf8e1b235e713",
        "g": "1ef2f4525f814eca",
        "name": "",
        "dataSetSize": "15",
        "regressionType": "polynomial",
        "polynomialOrder": 2,
        "precision": "2",
        "xInputField": "payload.x",
        "xInputFieldType": "msg",
        "yInputField": "payload.y",
        "yInputFieldType": "msg",
        "yOutputField": "payload.y_out",
        "yOutputFieldType": "msg",
        "functionOutputField": "function",
        "functionOutputFieldType": "msg",
        "resultOnly": false,
        "x": 2490,
        "y": 2880,
        "wires": [
            [
                "a7fb8486b78d0cf2",
                "8054c1d81f12f82d"
            ]
        ]
    },
    {
        "id": "ca4e3144a4e8246e",
        "type": "subflow:c9cc6403f63368af",
        "z": "9cfaf8e1b235e713",
        "name": "Property 1",
        "env": [
            {
                "name": "PropertyName",
                "value": "currentOperatingPressure",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/CurrentOperatingPressure",
                "type": "str"
            }
        ],
        "x": 970,
        "y": 540,
        "wires": [
            [
                "4e30ee746150fb63",
                "ba4afd9223b0ad7d"
            ],
            [
                "c1990e5cdabbb812"
            ],
            [
                "6a86ad1f90f48b3b"
            ]
        ]
    },
    {
        "id": "c1990e5cdabbb812",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "routed",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "d2edf304.fdfa2",
        "x": 1190,
        "y": 560,
        "wires": []
    },
    {
        "id": "6a2cd75b2f59165f",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "metrics",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "72ae2011.f3d7b",
        "x": 1400,
        "y": 640,
        "wires": []
    },
    {
        "id": "4e30ee746150fb63",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 500,
        "wires": []
    },
    {
        "id": "e2d8229211325f2e",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 230,
        "y": 1080,
        "wires": []
    },
    {
        "id": "3b54f5968a77ec35",
        "type": "subflow:c9cc6403f63368af",
        "z": "9cfaf8e1b235e713",
        "name": "Property 2",
        "env": [
            {
                "name": "PropertyName",
                "value": "responseTime",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/ResponseTime",
                "type": "str"
            },
            {
                "name": "TEST",
                "value": "2",
                "type": "str"
            }
        ],
        "x": 970,
        "y": 820,
        "wires": [
            [
                "60ccba819a38f8fd",
                "a4c5e90231a38a3d"
            ],
            [
                "7075c68310e93fd5"
            ],
            [
                "4b791260db786396"
            ]
        ]
    },
    {
        "id": "7075c68310e93fd5",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "routed",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "d2edf304.fdfa2",
        "x": 1210,
        "y": 840,
        "wires": []
    },
    {
        "id": "60ccba819a38f8fd",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 780,
        "wires": []
    },
    {
        "id": "380937cdf45c2ef9",
        "type": "iot-datasource",
        "z": "9cfaf8e1b235e713",
        "name": "responseTime",
        "tstampField": "",
        "dataField": "",
        "disableDiscover": false,
        "x": 1440,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "547f62b2320b5f3d",
        "type": "subflow:c9cc6403f63368af",
        "z": "9cfaf8e1b235e713",
        "name": "Property 3",
        "env": [
            {
                "name": "PropertyName",
                "value": "valvePosition",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/ValvePosition",
                "type": "str"
            },
            {
                "name": "TEST",
                "value": "3",
                "type": "str"
            }
        ],
        "x": 950,
        "y": 1100,
        "wires": [
            [
                "0c43ae1e3d23f029",
                "f0411d553c9edc81"
            ],
            [
                "22ca1d2599fe4c51"
            ],
            [
                "c53b4b97adc789c9"
            ]
        ]
    },
    {
        "id": "22ca1d2599fe4c51",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "routed",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "d2edf304.fdfa2",
        "x": 1190,
        "y": 1120,
        "wires": []
    },
    {
        "id": "2174c7ce0f454254",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "metrics",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "72ae2011.f3d7b",
        "x": 1420,
        "y": 1180,
        "wires": []
    },
    {
        "id": "0c43ae1e3d23f029",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 1060,
        "wires": []
    },
    {
        "id": "25aaa69623c2f471",
        "type": "iot-datasource",
        "z": "9cfaf8e1b235e713",
        "name": "valvePosition",
        "tstampField": "",
        "dataField": "",
        "disableDiscover": false,
        "x": 1430,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "88d49b42767541a5",
        "type": "subflow:c9cc6403f63368af",
        "z": "9cfaf8e1b235e713",
        "name": "Property 4",
        "env": [
            {
                "name": "PropertyName",
                "value": "elapsedTimeMovingAvg",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/ResponseTimeMovingAvg",
                "type": "str"
            },
            {
                "name": "TEST",
                "value": "4",
                "type": "str"
            }
        ],
        "x": 950,
        "y": 1360,
        "wires": [
            [
                "69f7c2a634b0d490",
                "e8d4c2ad0be7ade1"
            ],
            [
                "6e67a1707856a1bb"
            ],
            [
                "fbbd1f0f8b3e91a5"
            ]
        ]
    },
    {
        "id": "6e67a1707856a1bb",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "routed",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "d2edf304.fdfa2",
        "x": 1190,
        "y": 1400,
        "wires": []
    },
    {
        "id": "715604c68225c854",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "metrics",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "72ae2011.f3d7b",
        "x": 1380,
        "y": 1460,
        "wires": []
    },
    {
        "id": "69f7c2a634b0d490",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 1320,
        "wires": []
    },
    {
        "id": "fe2a84456dd3e1e6",
        "type": "iot-datasource",
        "z": "9cfaf8e1b235e713",
        "name": "elapsedTimeMovingAvg",
        "tstampField": "",
        "dataField": "",
        "disableDiscover": false,
        "x": 1430,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "c28022fc1f1f084b",
        "type": "subflow:c9cc6403f63368af",
        "z": "9cfaf8e1b235e713",
        "name": "Property 5",
        "env": [
            {
                "name": "PropertyName",
                "value": "cylinderStatus",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/CylinderStatus",
                "type": "str"
            },
            {
                "name": "TEST",
                "value": "5",
                "type": "str"
            }
        ],
        "x": 950,
        "y": 1620,
        "wires": [
            [
                "82fb8d75191fea48",
                "1ba99cde65759d5a"
            ],
            [
                "4a2e7fb3a587ea6b"
            ],
            [
                "cfd9f02f72e2c79c"
            ]
        ]
    },
    {
        "id": "4a2e7fb3a587ea6b",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "routed",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "d2edf304.fdfa2",
        "x": 1190,
        "y": 1640,
        "wires": []
    },
    {
        "id": "078d3e4e9fcd5ff1",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "metrics",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "72ae2011.f3d7b",
        "x": 1440,
        "y": 1680,
        "wires": []
    },
    {
        "id": "82fb8d75191fea48",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 1580,
        "wires": []
    },
    {
        "id": "daa5a87754af553e",
        "type": "iot-datasource",
        "z": "9cfaf8e1b235e713",
        "name": "cylinderStatus",
        "tstampField": "",
        "dataField": "",
        "disableDiscover": false,
        "x": 1460,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "ff5bcc9f53675bd5",
        "type": "subflow:c9cc6403f63368af",
        "z": "9cfaf8e1b235e713",
        "name": "Property 6",
        "env": [
            {
                "name": "PropertyName",
                "value": "cycle",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/Cycle",
                "type": "str"
            },
            {
                "name": "TEST",
                "value": "6",
                "type": "str"
            }
        ],
        "x": 950,
        "y": 1860,
        "wires": [
            [
                "467e9267ace8aa98",
                "ace35841f64ef5e1"
            ],
            [
                "348b14c160dca61f"
            ],
            [
                "6bed10f6964853ee"
            ]
        ]
    },
    {
        "id": "348b14c160dca61f",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "routed",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "d2edf304.fdfa2",
        "x": 1210,
        "y": 1880,
        "wires": []
    },
    {
        "id": "0f6f89b7fe1b9bcb",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "metrics",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "72ae2011.f3d7b",
        "x": 1420,
        "y": 1940,
        "wires": []
    },
    {
        "id": "467e9267ace8aa98",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 1820,
        "wires": []
    },
    {
        "id": "9b64d45a09cd53a3",
        "type": "iot-datasource",
        "z": "9cfaf8e1b235e713",
        "name": "cycle",
        "tstampField": "",
        "dataField": "",
        "disableDiscover": false,
        "x": 1410,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "f3cf6a374599b88e",
        "type": "subflow:c9cc6403f63368af",
        "z": "9cfaf8e1b235e713",
        "name": "Property 7",
        "env": [
            {
                "name": "PropertyName",
                "value": "responseTimePred",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/ResponseTimePred",
                "type": "str"
            },
            {
                "name": "TEST",
                "value": "7",
                "type": "str"
            }
        ],
        "x": 950,
        "y": 2140,
        "wires": [
            [
                "f527fa6c78e4b9c9",
                "02cae803bb3d2678"
            ],
            [
                "c096bace409ca70b"
            ],
            [
                "e6b2a3ee5fd58d2a"
            ]
        ]
    },
    {
        "id": "c096bace409ca70b",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "routed",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "d2edf304.fdfa2",
        "x": 1210,
        "y": 2160,
        "wires": []
    },
    {
        "id": "c404dc7a9e8fd15a",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "metrics",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "72ae2011.f3d7b",
        "x": 1420,
        "y": 2220,
        "wires": []
    },
    {
        "id": "f527fa6c78e4b9c9",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 2100,
        "wires": []
    },
    {
        "id": "36b5c0717c3d7f5b",
        "type": "iot-datasource",
        "z": "9cfaf8e1b235e713",
        "name": "responseTimePred",
        "tstampField": "",
        "dataField": "",
        "disableDiscover": false,
        "x": 1450,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "423ebc1bab8716ee",
        "type": "link in",
        "z": "9cfaf8e1b235e713",
        "g": "065e6699a83c4478",
        "name": "driverNewScheduling in",
        "links": [],
        "x": 195,
        "y": 280,
        "wires": [
            [
                "6ec913eacd920df3"
            ]
        ]
    },
    {
        "id": "41dc6a3a202784ae",
        "type": "link out",
        "z": "9cfaf8e1b235e713",
        "g": "065e6699a83c4478",
        "name": "driverNewScheduling out",
        "mode": "return",
        "links": [],
        "x": 1435,
        "y": 280,
        "wires": []
    },
    {
        "id": "49ac6b2ea6155ea3",
        "type": "link in",
        "z": "9cfaf8e1b235e713",
        "name": "driverConnectionCheck in",
        "links": [],
        "x": 295,
        "y": 2560,
        "wires": [
            [
                "77de3ca4f6b3c8e5"
            ]
        ]
    },
    {
        "id": "712c83642aa3e6d1",
        "type": "link out",
        "z": "9cfaf8e1b235e713",
        "name": "driverConnectionCheck out",
        "mode": "return",
        "links": [],
        "x": 2255,
        "y": 2560,
        "wires": []
    },
    {
        "id": "af2a8e62dd46182f",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 2380,
        "wires": []
    },
    {
        "id": "98a23a2a7b8e1d3a",
        "type": "link in",
        "z": "9cfaf8e1b235e713",
        "name": "invokeInternalDriver",
        "links": [],
        "x": 115,
        "y": 1160,
        "wires": [
            [
                "e2d8229211325f2e",
                "f0d43b3911405819"
            ]
        ]
    },
    {
        "id": "c5a7a9b4b2a140a9",
        "type": "link out",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 2375,
        "y": 1260,
        "wires": []
    },
    {
        "id": "f0d43b3911405819",
        "type": "msg-router",
        "z": "9cfaf8e1b235e713",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 7,
        "x": 460,
        "y": 1160,
        "wires": [
            [
                "ca4e3144a4e8246e"
            ],
            [
                "3b54f5968a77ec35"
            ],
            [
                "547f62b2320b5f3d"
            ],
            [
                "88d49b42767541a5"
            ],
            [
                "c28022fc1f1f084b"
            ],
            [
                "ff5bcc9f53675bd5"
            ],
            [
                "f3cf6a374599b88e"
            ]
        ]
    },
    {
        "id": "c84b5cae269a419b",
        "type": "sub-link-output",
        "z": "9cfaf8e1b235e713",
        "inputs": 0,
        "name": "",
        "topic": "configSchedule",
        "link": "72ae2011.f3d7b",
        "priority": "0",
        "aliasType": "str",
        "alias": "",
        "clone": false,
        "x": 240,
        "y": 1220,
        "wires": [
            [
                "f0d43b3911405819",
                "1efafeebe4e68a71"
            ],
            []
        ]
    },
    {
        "id": "ba4afd9223b0ad7d",
        "type": "link out",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "mode": "link",
        "links": [
            "8ab773f563da5c70"
        ],
        "x": 1555,
        "y": 540,
        "wires": []
    },
    {
        "id": "8ab773f563da5c70",
        "type": "link in",
        "z": "9cfaf8e1b235e713",
        "name": "router",
        "links": [
            "f0411d553c9edc81",
            "02cae803bb3d2678",
            "1ba99cde65759d5a",
            "a4c5e90231a38a3d",
            "ba4afd9223b0ad7d",
            "ace35841f64ef5e1",
            "e8d4c2ad0be7ade1"
        ],
        "x": 2035,
        "y": 1260,
        "wires": [
            [
                "c5a7a9b4b2a140a9"
            ]
        ]
    },
    {
        "id": "a4c5e90231a38a3d",
        "type": "link out",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "mode": "link",
        "links": [
            "8ab773f563da5c70"
        ],
        "x": 1555,
        "y": 820,
        "wires": []
    },
    {
        "id": "f0411d553c9edc81",
        "type": "link out",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "mode": "link",
        "links": [
            "8ab773f563da5c70"
        ],
        "x": 1555,
        "y": 1100,
        "wires": []
    },
    {
        "id": "e8d4c2ad0be7ade1",
        "type": "link out",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "mode": "link",
        "links": [
            "8ab773f563da5c70"
        ],
        "x": 1555,
        "y": 1360,
        "wires": []
    },
    {
        "id": "1ba99cde65759d5a",
        "type": "link out",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "mode": "link",
        "links": [
            "8ab773f563da5c70"
        ],
        "x": 1555,
        "y": 1600,
        "wires": []
    },
    {
        "id": "ace35841f64ef5e1",
        "type": "link out",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "mode": "link",
        "links": [
            "8ab773f563da5c70"
        ],
        "x": 1555,
        "y": 1840,
        "wires": []
    },
    {
        "id": "02cae803bb3d2678",
        "type": "link out",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "mode": "link",
        "links": [
            "8ab773f563da5c70"
        ],
        "x": 1555,
        "y": 2120,
        "wires": []
    },
    {
        "id": "1efafeebe4e68a71",
        "type": "debug",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 1280,
        "wires": []
    },
    {
        "id": "b5ea7f6d17bd2df8",
        "type": "iot-datasource",
        "z": "9cfaf8e1b235e713",
        "name": "currentOperatingPressure",
        "tstampField": "",
        "dataField": "",
        "disableDiscover": false,
        "x": 1450,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "6a86ad1f90f48b3b",
        "type": "msg-router",
        "z": "9cfaf8e1b235e713",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 1210,
        "y": 620,
        "wires": [
            [
                "b5ea7f6d17bd2df8"
            ],
            [
                "6a2cd75b2f59165f"
            ],
            [
                "0809a83d8527a0a0"
            ]
        ]
    },
    {
        "id": "0809a83d8527a0a0",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "updateValue",
        "alias": "",
        "aliasType": "string",
        "aliasMatchAll": false,
        "topicType": "string",
        "link": "d2edf304.fdfa2",
        "x": 1410,
        "y": 700,
        "wires": []
    },
    {
        "id": "4b791260db786396",
        "type": "msg-router",
        "z": "9cfaf8e1b235e713",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 1210,
        "y": 900,
        "wires": [
            [
                "380937cdf45c2ef9"
            ],
            [
                "9cd72338971c4286"
            ],
            [
                "778ed2cc24a9cc76"
            ]
        ]
    },
    {
        "id": "9cd72338971c4286",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "metrics",
        "alias": "",
        "aliasType": "str",
        "aliasMatchAll": false,
        "topicType": "str",
        "link": "72ae2011.f3d7b",
        "x": 1420,
        "y": 900,
        "wires": []
    },
    {
        "id": "778ed2cc24a9cc76",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "updateValue",
        "alias": "",
        "aliasType": "string",
        "aliasMatchAll": false,
        "topicType": "string",
        "link": "d2edf304.fdfa2",
        "x": 1430,
        "y": 960,
        "wires": []
    },
    {
        "id": "c53b4b97adc789c9",
        "type": "msg-router",
        "z": "9cfaf8e1b235e713",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 1210,
        "y": 1180,
        "wires": [
            [
                "25aaa69623c2f471"
            ],
            [
                "2174c7ce0f454254"
            ],
            [
                "fd145a7b4552b2de"
            ]
        ]
    },
    {
        "id": "fd145a7b4552b2de",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "updateValue",
        "alias": "",
        "aliasType": "string",
        "aliasMatchAll": false,
        "topicType": "string",
        "link": "d2edf304.fdfa2",
        "x": 1430,
        "y": 1240,
        "wires": []
    },
    {
        "id": "fbbd1f0f8b3e91a5",
        "type": "msg-router",
        "z": "9cfaf8e1b235e713",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 1210,
        "y": 1460,
        "wires": [
            [
                "fe2a84456dd3e1e6"
            ],
            [
                "715604c68225c854"
            ],
            [
                "8a7a150cc6116abd"
            ]
        ]
    },
    {
        "id": "8a7a150cc6116abd",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "updateValue",
        "alias": "",
        "aliasType": "string",
        "aliasMatchAll": false,
        "topicType": "string",
        "link": "d2edf304.fdfa2",
        "x": 1390,
        "y": 1520,
        "wires": []
    },
    {
        "id": "cfd9f02f72e2c79c",
        "type": "msg-router",
        "z": "9cfaf8e1b235e713",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 1210,
        "y": 1700,
        "wires": [
            [
                "daa5a87754af553e"
            ],
            [
                "078d3e4e9fcd5ff1"
            ],
            [
                "3295ac2431f9ccd6"
            ]
        ]
    },
    {
        "id": "3295ac2431f9ccd6",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "updateValue",
        "alias": "",
        "aliasType": "string",
        "aliasMatchAll": false,
        "topicType": "string",
        "link": "d2edf304.fdfa2",
        "x": 1450,
        "y": 1740,
        "wires": []
    },
    {
        "id": "6bed10f6964853ee",
        "type": "msg-router",
        "z": "9cfaf8e1b235e713",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 1230,
        "y": 1940,
        "wires": [
            [
                "9b64d45a09cd53a3"
            ],
            [
                "0f6f89b7fe1b9bcb"
            ],
            [
                "5891cf7192540ec9"
            ]
        ]
    },
    {
        "id": "5891cf7192540ec9",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "updateValue",
        "alias": "",
        "aliasType": "string",
        "aliasMatchAll": false,
        "topicType": "string",
        "link": "d2edf304.fdfa2",
        "x": 1430,
        "y": 2000,
        "wires": []
    },
    {
        "id": "e6b2a3ee5fd58d2a",
        "type": "msg-router",
        "z": "9cfaf8e1b235e713",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 1230,
        "y": 2220,
        "wires": [
            [
                "36b5c0717c3d7f5b"
            ],
            [
                "c404dc7a9e8fd15a"
            ],
            [
                "d199edaae2cbec15"
            ]
        ]
    },
    {
        "id": "d199edaae2cbec15",
        "type": "sub-link-input",
        "z": "9cfaf8e1b235e713",
        "name": "",
        "topic": "updateValue",
        "alias": "",
        "aliasType": "string",
        "aliasMatchAll": false,
        "topicType": "string",
        "link": "d2edf304.fdfa2",
        "x": 1430,
        "y": 2280,
        "wires": []
    }
]